{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "bjR_-gvMlxsN"
      },
      "source": [
        "# Upgrading Scikit Learn Library"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_rbZbgfVnQpP",
        "outputId": "f2921388-6c78-4586-c5ca-c55bf7f139ff"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting scikit-learn==1.5.1\n",
            "  Downloading scikit_learn-1.5.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (13.4 MB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m13.4/13.4 MB\u001b[0m \u001b[31m34.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hRequirement already satisfied: numpy>=1.19.5 in /usr/local/lib/python3.10/dist-packages (from scikit-learn==1.5.1) (1.25.2)\n",
            "Requirement already satisfied: scipy>=1.6.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn==1.5.1) (1.11.4)\n",
            "Requirement already satisfied: joblib>=1.2.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn==1.5.1) (1.4.2)\n",
            "Requirement already satisfied: threadpoolctl>=3.1.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn==1.5.1) (3.5.0)\n",
            "Installing collected packages: scikit-learn\n",
            "  Attempting uninstall: scikit-learn\n",
            "    Found existing installation: scikit-learn 1.2.2\n",
            "    Uninstalling scikit-learn-1.2.2:\n",
            "      Successfully uninstalled scikit-learn-1.2.2\n",
            "Successfully installed scikit-learn-1.5.1\n"
          ]
        }
      ],
      "source": [
        "!pip install scikit-learn==1.5.1"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "BMF1oJXKnxeh"
      },
      "source": [
        "# Importing Dependencies & Dataset"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "gmF8tlsy81wg"
      },
      "source": [
        "Importing the Dependencies"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "id": "t1MVIxsy1FW4"
      },
      "outputs": [],
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "rHxMcnmn9tkz"
      },
      "source": [
        "Data Collection"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "metadata": {
        "id": "_VZk8_sIoR-H"
      },
      "outputs": [],
      "source": [
        "# loading the calorie dataset to a pandas dataFrame\n",
        "calories_data = pd.read_csv('/content/calories.csv')\n",
        "exercise_data = pd.read_csv('/content/exercise.csv')"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#combining the dataframes\n",
        "calorie_burnt_data = pd.concat([exercise_data,calories_data['Calories']],axis=1)"
      ],
      "metadata": {
        "id": "24kpNYgQyUgG"
      },
      "execution_count": 5,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "cFYdMGq-oZfo"
      },
      "source": [
        "# Exploratory Data Analysis"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 7,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "0iUyg1iUoceJ",
        "outputId": "af75934a-f195-4909-aefe-894aef0d6832"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Gender  Age  Height  Weight  Duration  Heart_Rate  Body_Temp  Calories\n",
              "0    male   68   190.0    94.0      29.0       105.0       40.8     231.0\n",
              "1  female   20   166.0    60.0      14.0        94.0       40.3      66.0\n",
              "2    male   69   179.0    79.0       5.0        88.0       38.7      26.0\n",
              "3  female   34   179.0    71.0      13.0       100.0       40.5      71.0\n",
              "4  female   27   154.0    58.0      10.0        81.0       39.8      35.0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-61ed8e9f-7295-4ec7-84eb-992cf09fe04a\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Gender</th>\n",
              "      <th>Age</th>\n",
              "      <th>Height</th>\n",
              "      <th>Weight</th>\n",
              "      <th>Duration</th>\n",
              "      <th>Heart_Rate</th>\n",
              "      <th>Body_Temp</th>\n",
              "      <th>Calories</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>male</td>\n",
              "      <td>68</td>\n",
              "      <td>190.0</td>\n",
              "      <td>94.0</td>\n",
              "      <td>29.0</td>\n",
              "      <td>105.0</td>\n",
              "      <td>40.8</td>\n",
              "      <td>231.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>female</td>\n",
              "      <td>20</td>\n",
              "      <td>166.0</td>\n",
              "      <td>60.0</td>\n",
              "      <td>14.0</td>\n",
              "      <td>94.0</td>\n",
              "      <td>40.3</td>\n",
              "      <td>66.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>male</td>\n",
              "      <td>69</td>\n",
              "      <td>179.0</td>\n",
              "      <td>79.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>88.0</td>\n",
              "      <td>38.7</td>\n",
              "      <td>26.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>female</td>\n",
              "      <td>34</td>\n",
              "      <td>179.0</td>\n",
              "      <td>71.0</td>\n",
              "      <td>13.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>40.5</td>\n",
              "      <td>71.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>female</td>\n",
              "      <td>27</td>\n",
              "      <td>154.0</td>\n",
              "      <td>58.0</td>\n",
              "      <td>10.0</td>\n",
              "      <td>81.0</td>\n",
              "      <td>39.8</td>\n",
              "      <td>35.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-61ed8e9f-7295-4ec7-84eb-992cf09fe04a')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-61ed8e9f-7295-4ec7-84eb-992cf09fe04a button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-61ed8e9f-7295-4ec7-84eb-992cf09fe04a');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-cbcbc3ce-19c0-40f3-b90e-e41398abaaa7\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cbcbc3ce-19c0-40f3-b90e-e41398abaaa7')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-cbcbc3ce-19c0-40f3-b90e-e41398abaaa7 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "calorie_burnt_data",
              "summary": "{\n  \"name\": \"calorie_burnt_data\",\n  \"rows\": 15000,\n  \"fields\": [\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"female\",\n          \"male\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 16,\n        \"min\": 20,\n        \"max\": 79,\n        \"num_unique_values\": 60,\n        \"samples\": [\n          68,\n          36\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Height\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.258113616551187,\n        \"min\": 123.0,\n        \"max\": 222.0,\n        \"num_unique_values\": 90,\n        \"samples\": [\n          197.0,\n          183.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Weight\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15.035656739246907,\n        \"min\": 36.0,\n        \"max\": 132.0,\n        \"num_unique_values\": 91,\n        \"samples\": [\n          91.0,\n          84.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Duration\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8.319203342244775,\n        \"min\": 1.0,\n        \"max\": 30.0,\n        \"num_unique_values\": 30,\n        \"samples\": [\n          26.0,\n          28.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Heart_Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9.583328189839296,\n        \"min\": 67.0,\n        \"max\": 128.0,\n        \"num_unique_values\": 59,\n        \"samples\": [\n          105.0,\n          96.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Body_Temp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7792299239893948,\n        \"min\": 37.1,\n        \"max\": 41.5,\n        \"num_unique_values\": 45,\n        \"samples\": [\n          37.5,\n          40.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Calories\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 62.45697795593845,\n        \"min\": 1.0,\n        \"max\": 314.0,\n        \"num_unique_values\": 277,\n        \"samples\": [\n          80.0,\n          84.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 7
        }
      ],
      "source": [
        "# first 5 rows in the dataset\n",
        "calorie_burnt_data.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 8,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "zhZPWoC0okNV",
        "outputId": "dab22ba1-814b-4e29-c233-c8a023749d0b"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       Gender  Age  Height  Weight  Duration  Heart_Rate  Body_Temp  Calories\n",
              "14995  female   20   193.0    86.0      11.0        92.0       40.4      45.0\n",
              "14996  female   27   165.0    65.0       6.0        85.0       39.2      23.0\n",
              "14997  female   43   159.0    58.0      16.0        90.0       40.1      75.0\n",
              "14998    male   78   193.0    97.0       2.0        84.0       38.3      11.0\n",
              "14999    male   63   173.0    79.0      18.0        92.0       40.5      98.0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-eed3ee2e-7f1a-4cb0-ae12-3678f0de1081\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Gender</th>\n",
              "      <th>Age</th>\n",
              "      <th>Height</th>\n",
              "      <th>Weight</th>\n",
              "      <th>Duration</th>\n",
              "      <th>Heart_Rate</th>\n",
              "      <th>Body_Temp</th>\n",
              "      <th>Calories</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>14995</th>\n",
              "      <td>female</td>\n",
              "      <td>20</td>\n",
              "      <td>193.0</td>\n",
              "      <td>86.0</td>\n",
              "      <td>11.0</td>\n",
              "      <td>92.0</td>\n",
              "      <td>40.4</td>\n",
              "      <td>45.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14996</th>\n",
              "      <td>female</td>\n",
              "      <td>27</td>\n",
              "      <td>165.0</td>\n",
              "      <td>65.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>85.0</td>\n",
              "      <td>39.2</td>\n",
              "      <td>23.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14997</th>\n",
              "      <td>female</td>\n",
              "      <td>43</td>\n",
              "      <td>159.0</td>\n",
              "      <td>58.0</td>\n",
              "      <td>16.0</td>\n",
              "      <td>90.0</td>\n",
              "      <td>40.1</td>\n",
              "      <td>75.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14998</th>\n",
              "      <td>male</td>\n",
              "      <td>78</td>\n",
              "      <td>193.0</td>\n",
              "      <td>97.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>84.0</td>\n",
              "      <td>38.3</td>\n",
              "      <td>11.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14999</th>\n",
              "      <td>male</td>\n",
              "      <td>63</td>\n",
              "      <td>173.0</td>\n",
              "      <td>79.0</td>\n",
              "      <td>18.0</td>\n",
              "      <td>92.0</td>\n",
              "      <td>40.5</td>\n",
              "      <td>98.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-eed3ee2e-7f1a-4cb0-ae12-3678f0de1081')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-eed3ee2e-7f1a-4cb0-ae12-3678f0de1081 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-eed3ee2e-7f1a-4cb0-ae12-3678f0de1081');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-aba92884-c4fe-4f19-afef-f36b5c9aee51\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-aba92884-c4fe-4f19-afef-f36b5c9aee51')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-aba92884-c4fe-4f19-afef-f36b5c9aee51 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"calorie_burnt_data\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"male\",\n          \"female\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 24,\n        \"min\": 20,\n        \"max\": 78,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          27,\n          63\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Height\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15.773395322504285,\n        \"min\": 159.0,\n        \"max\": 193.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          165.0,\n          173.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Weight\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15.732132722552274,\n        \"min\": 58.0,\n        \"max\": 97.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          65.0,\n          79.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Duration\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.6932802122726045,\n        \"min\": 2.0,\n        \"max\": 18.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          6.0,\n          18.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Heart_Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.8470768123342687,\n        \"min\": 84.0,\n        \"max\": 92.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          85.0,\n          84.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Body_Temp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9354143466934859,\n        \"min\": 38.3,\n        \"max\": 40.5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          39.2,\n          40.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Calories\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 36.066605052319524,\n        \"min\": 11.0,\n        \"max\": 98.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          23.0,\n          98.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 8
        }
      ],
      "source": [
        "# last 5 rows in the dataset\n",
        "calorie_burnt_data.tail()"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "calorie_burnt_data.drop(columns=['User_ID'],axis=1,inplace=True)"
      ],
      "metadata": {
        "id": "bMCIIDzQzUhX"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": 9,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Ksr4R8LW-POG",
        "outputId": "eff6a403-4668-4c31-eb5f-ab8262858266"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(15000, 8)"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ],
      "source": [
        "# number of rows & columns\n",
        "calorie_burnt_data.shape"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 10,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "J832OokXouMu",
        "outputId": "8e3f6f93-1b78-40cf-e1bf-e31e2e38603c"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 15000 entries, 0 to 14999\n",
            "Data columns (total 8 columns):\n",
            " #   Column      Non-Null Count  Dtype  \n",
            "---  ------      --------------  -----  \n",
            " 0   Gender      15000 non-null  object \n",
            " 1   Age         15000 non-null  int64  \n",
            " 2   Height      15000 non-null  float64\n",
            " 3   Weight      15000 non-null  float64\n",
            " 4   Duration    15000 non-null  float64\n",
            " 5   Heart_Rate  15000 non-null  float64\n",
            " 6   Body_Temp   15000 non-null  float64\n",
            " 7   Calories    15000 non-null  float64\n",
            "dtypes: float64(6), int64(1), object(1)\n",
            "memory usage: 937.6+ KB\n"
          ]
        }
      ],
      "source": [
        "# getting info about the dataset\n",
        "calorie_burnt_data.info()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 11,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "MzrKDKJyo8dD",
        "outputId": "68d38ae9-20b5-4e5e-d725-b4dc8be4b37e"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Gender        0\n",
              "Age           0\n",
              "Height        0\n",
              "Weight        0\n",
              "Duration      0\n",
              "Heart_Rate    0\n",
              "Body_Temp     0\n",
              "Calories      0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ],
      "source": [
        "# checking null values\n",
        "calorie_burnt_data.isnull().sum()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 12,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "7sa3qIhN_GHF",
        "outputId": "62ccb966-b986-4ec9-f82a-f20f130f82e8"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                Age        Height        Weight      Duration    Heart_Rate  \\\n",
              "count  15000.000000  15000.000000  15000.000000  15000.000000  15000.000000   \n",
              "mean      42.789800    174.465133     74.966867     15.530600     95.518533   \n",
              "std       16.980264     14.258114     15.035657      8.319203      9.583328   \n",
              "min       20.000000    123.000000     36.000000      1.000000     67.000000   \n",
              "25%       28.000000    164.000000     63.000000      8.000000     88.000000   \n",
              "50%       39.000000    175.000000     74.000000     16.000000     96.000000   \n",
              "75%       56.000000    185.000000     87.000000     23.000000    103.000000   \n",
              "max       79.000000    222.000000    132.000000     30.000000    128.000000   \n",
              "\n",
              "          Body_Temp      Calories  \n",
              "count  15000.000000  15000.000000  \n",
              "mean      40.025453     89.539533  \n",
              "std        0.779230     62.456978  \n",
              "min       37.100000      1.000000  \n",
              "25%       39.600000     35.000000  \n",
              "50%       40.200000     79.000000  \n",
              "75%       40.600000    138.000000  \n",
              "max       41.500000    314.000000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0c1ba941-df27-4d7b-86c8-f766cc17d9cc\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Age</th>\n",
              "      <th>Height</th>\n",
              "      <th>Weight</th>\n",
              "      <th>Duration</th>\n",
              "      <th>Heart_Rate</th>\n",
              "      <th>Body_Temp</th>\n",
              "      <th>Calories</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>15000.000000</td>\n",
              "      <td>15000.000000</td>\n",
              "      <td>15000.000000</td>\n",
              "      <td>15000.000000</td>\n",
              "      <td>15000.000000</td>\n",
              "      <td>15000.000000</td>\n",
              "      <td>15000.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>42.789800</td>\n",
              "      <td>174.465133</td>\n",
              "      <td>74.966867</td>\n",
              "      <td>15.530600</td>\n",
              "      <td>95.518533</td>\n",
              "      <td>40.025453</td>\n",
              "      <td>89.539533</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>16.980264</td>\n",
              "      <td>14.258114</td>\n",
              "      <td>15.035657</td>\n",
              "      <td>8.319203</td>\n",
              "      <td>9.583328</td>\n",
              "      <td>0.779230</td>\n",
              "      <td>62.456978</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>20.000000</td>\n",
              "      <td>123.000000</td>\n",
              "      <td>36.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>67.000000</td>\n",
              "      <td>37.100000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>28.000000</td>\n",
              "      <td>164.000000</td>\n",
              "      <td>63.000000</td>\n",
              "      <td>8.000000</td>\n",
              "      <td>88.000000</td>\n",
              "      <td>39.600000</td>\n",
              "      <td>35.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>39.000000</td>\n",
              "      <td>175.000000</td>\n",
              "      <td>74.000000</td>\n",
              "      <td>16.000000</td>\n",
              "      <td>96.000000</td>\n",
              "      <td>40.200000</td>\n",
              "      <td>79.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>56.000000</td>\n",
              "      <td>185.000000</td>\n",
              "      <td>87.000000</td>\n",
              "      <td>23.000000</td>\n",
              "      <td>103.000000</td>\n",
              "      <td>40.600000</td>\n",
              "      <td>138.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>79.000000</td>\n",
              "      <td>222.000000</td>\n",
              "      <td>132.000000</td>\n",
              "      <td>30.000000</td>\n",
              "      <td>128.000000</td>\n",
              "      <td>41.500000</td>\n",
              "      <td>314.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0c1ba941-df27-4d7b-86c8-f766cc17d9cc')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-0c1ba941-df27-4d7b-86c8-f766cc17d9cc button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-0c1ba941-df27-4d7b-86c8-f766cc17d9cc');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-a4e5ba2a-fa24-4286-b7bb-ebbcbbcead52\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a4e5ba2a-fa24-4286-b7bb-ebbcbbcead52')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-a4e5ba2a-fa24-4286-b7bb-ebbcbbcead52 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"calorie_burnt_data\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5289.107935311001,\n        \"min\": 16.98026416907042,\n        \"max\": 15000.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          42.7898,\n          39.0,\n          15000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Height\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5250.244768336296,\n        \"min\": 14.258113616551187,\n        \"max\": 15000.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          174.46513333333334,\n          175.0,\n          15000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Weight\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5279.0695857079645,\n        \"min\": 15.035656739246907,\n        \"max\": 15000.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          74.96686666666666,\n          74.0,\n          15000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Duration\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5298.164466159714,\n        \"min\": 1.0,\n        \"max\": 15000.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          15.5306,\n          16.0,\n          15000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Heart_Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5273.761731104034,\n        \"min\": 9.583328189839296,\n        \"max\": 15000.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          95.51853333333334,\n          96.0,\n          15000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Body_Temp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5291.206694887213,\n        \"min\": 0.7792299239893948,\n        \"max\": 15000.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          40.02545333333334,\n          40.2,\n          15000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Calories\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5267.84272445134,\n        \"min\": 1.0,\n        \"max\": 15000.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          89.53953333333334,\n          79.0,\n          15000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 12
        }
      ],
      "source": [
        "# getting the stats about dataset\n",
        "calorie_burnt_data.describe()"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# label encoding\n",
        "calorie_burnt_data.replace({'Gender':{'male':0,'female':1}},inplace=True)"
      ],
      "metadata": {
        "id": "iC2myY8rzcYV"
      },
      "execution_count": 13,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#setting the figure parameters\n",
        "plt.rcParams['figure.dpi'] = 100"
      ],
      "metadata": {
        "id": "UsdZPbv0cQXJ"
      },
      "execution_count": 14,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": 15,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 524
        },
        "id": "kVSEhAU6pEvt",
        "outputId": "02082e61-831a-477d-ff76-b0e0b5caa2fc"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<seaborn.axisgrid.FacetGrid at 0x78f75ea0d480>"
            ]
          },
          "metadata": {},
          "execution_count": 15
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 500x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "# distribution plot for Age\n",
        "sns.displot(data=calorie_burnt_data, x = 'Age', kde=True)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# distribution plot for Height\n",
        "sns.displot(data=calorie_burnt_data, x = 'Height', kde=True)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 524
        },
        "id": "RJ4UZSjJM9Yu",
        "outputId": "3eb3ace4-0529-4bcb-a37c-aa248b5eabf9"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<seaborn.axisgrid.FacetGrid at 0x78f75eb6cbb0>"
            ]
          },
          "metadata": {},
          "execution_count": 16
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 500x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# distribution plot for Weight\n",
        "sns.displot(data=calorie_burnt_data, x = 'Weight', kde=True)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 524
        },
        "id": "FF5aavIONAzn",
        "outputId": "3aee27ba-1df5-4bba-d8e0-67ba7a60f4e8"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<seaborn.axisgrid.FacetGrid at 0x78f759a9db70>"
            ]
          },
          "metadata": {},
          "execution_count": 17
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 500x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# distribution plot for Duration\n",
        "sns.displot(data=calorie_burnt_data, x = 'Duration', kde=True)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 524
        },
        "id": "cGb5QFpmz1CH",
        "outputId": "5139cc91-1009-4b26-83fa-5dc9d1b6b5fa"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<seaborn.axisgrid.FacetGrid at 0x78f75db7a0b0>"
            ]
          },
          "metadata": {},
          "execution_count": 18
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 500x500 with 1 Axes>"
            ],
            "image/png": "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Wq3W5/0/cuQIioqKOv37/2P7fjEFBQUA0CXe+4txu92w2+3KvO8dMkQtALz99tuyXq+XV69eLR86dEiePn26HBERIZeWlipdWof6/e9/L2/dulU+ceKE/MUXX8hZWVlyTEyMXF5ernRpHaK2tlbeu3evvHfvXhmAvHTpUnnv3r3yqVOnZFmW5eeee06OiIiQ33//fXnfvn3yxIkT5dTUVLmxsVHhytvH5fa/trZWfuSRR+S8vDz5xIkT8ubNm+UhQ4bIaWlpss1mU7r0NnvggQdko9Eob926VS4pKfHeGhoavOv89re/lZOTk+UtW7bIX331lZyZmSlnZmYqWHX7+LF9P3bsmJyTkyN/9dVX8okTJ+T3339fvuqqq+Trr79e4crbx+OPPy5v27ZNPnHihLxv3z758ccflyVJkj/55BNZlv3/vjOo2+Cll16Sk5OTZZ1OJ48YMUL+8ssvlS6pw911111yfHy8rNPp5G7dusl33XWXfOzYMaXL6jCffvqpDOCC29SpU2VZ9pyitWDBAtlkMsl6vV4ePXq0fOTIEWWLbkeX2/+GhgZ5zJgxcmxsrKzVauWUlBR52rRpXebH6sX2G4C8atUq7zqNjY3ygw8+KEdGRsohISHyT3/6U7mkpES5otvJj+17UVGRfP3118tRUVGyXq+Xe/bsKc+dO1euqalRtvB28pvf/EZOSUmRdTqdHBsbK48ePdob0rLs//edl7kkIiISGI9RExERCYxBTUREJDAGNRERkcAY1ERERAJjUBMREQmMQU1ERCQwBjUREZHAGNREREQCY1ATkd+tXr36gssEEtHFMaiJurB77rkHkiRBkiRotVqYTCbccssteO211+B2u/1SQ/fu3bFs2TKfx+666y588803fnl9os6OQU3UxY0dOxYlJSU4efIkNmzYgJtuugkPP/wwbr31VjidzlY9pyzLrd4WAIKDgxEXF9fq7YkCCYOaqIvT6/Uwm83o1q0bhgwZgj/84Q94//33sWHDBqxevRonT56EJEneyxQCgMVigSRJ2Lp1KwBg69atkCQJGzZswNChQ6HX6/H555/j+PHjmDhxIkwmE8LCwjB8+HBs3rzZ+zw33ngjTp06hdmzZ3tb9sDFu75ffvll9OjRAzqdDr1798Y///lPn+WSJOHvf/87fvrTnyIkJARpaWn44IMPOuRvRiQSBjVRALr55psxcOBArFu3rkXbPf7443juuedQWFiIAQMGoK6uDuPHj0dubi727t2LsWPH4rbbbkNRUREAYN26dUhMTEROTg5KSkpQUlJy0eddv349Hn74Yfz+97/HgQMHcP/99+Pee+/Fp59+6rPeU089hTvvvBP79u3D+PHjMWXKFFRVVbXuj0DUSTCoiQJUnz59cPLkyRZtk5OTg1tuuQU9evRAVFQUBg4ciPvvvx/9+vVDWloann76afTo0cPb0o2KioJarUZ4eDjMZjPMZvNFn3fJkiW455578OCDD6JXr16YM2cO7rjjDixZssRnvXvuuQe/+MUv0LNnTzz77LOoq6vDrl27WrX/RJ0Fg5ooQMmy7O2KvlLDhg3zuV9XV4dHHnkE6enpiIiIQFhYGAoLC70t6itVWFiIUaNG+Tw2atQoFBYW+jw2YMAA779DQ0NhMBhQXl7eotci6mw0ShdARMooLCxEamoqVCrP7/XvX5re4XBcdJvQ0FCf+4888gg2bdqEJUuWoGfPnggODsbPfvYzNDU1dUjNWq3W574kSX4bvU6kFLaoiQLQli1bsH//fkyaNAmxsbEA4HP8+PsDyy7niy++wD333IOf/vSn6N+/P8xm8wXd6TqdDi6X67LPk56eji+++OKC587IyLiiOoi6Mraoibo4u92O0tJSuFwulJWVYePGjVi0aBFuvfVW/PrXv4ZarcbVV1+N5557DqmpqSgvL8f8+fOv6LnT0tKwbt063HbbbZAkCQsWLLighdu9e3ds374dkydPhl6vR0xMzAXPM3fuXNx5550YPHgwsrKy8OGHH2LdunU+I8iJAhVb1ERd3MaNGxEfH4/u3btj7Nix+PTTT7F8+XK8//77UKvVAIDXXnsNTqcTQ4cOxaxZs/DMM89c0XMvXboUkZGRuOaaa3DbbbchOzsbQ4YM8VknJycHJ0+eRI8ePbyt9x+6/fbb8eKLL2LJkiXo27cv/va3v2HVqlW48cYb27TvRF2BJH//wBQREREJhS1qIiIigTGoiYiIBMagJiIiEhiDmoiISGAMaiIiIoExqImIiATGoCYiIhIYg5qIiEhgDGoiIiKBMaiJiIgExqAmIiIS2P8Hdzwjfz0gTC0AAAAASUVORK5CYII=\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\t# distribution plot for Heart_Rate\n",
        "sns.displot(data=calorie_burnt_data, x = 'Heart_Rate', kde=True)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 524
        },
        "id": "FQnmZjEONAvR",
        "outputId": "b488d224-e7ba-42f0-83b0-8819109c349f"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<seaborn.axisgrid.FacetGrid at 0x78f759771390>"
            ]
          },
          "metadata": {},
          "execution_count": 19
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 500x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# distribution plot for Body_Temp\n",
        "sns.displot(data=calorie_burnt_data, x = 'Body_Temp', kde=True)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 524
        },
        "id": "EFGZSfy7NArO",
        "outputId": "6a2b655b-a755-4a73-c321-b8356f9f760b"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<seaborn.axisgrid.FacetGrid at 0x78f759877b20>"
            ]
          },
          "metadata": {},
          "execution_count": 20
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 500x500 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAeoAAAHpCAYAAABN+X+UAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAABVYElEQVR4nO3deXxU5d3//9cs2feErBB2ZJNNUYxai0JZXKqIC7cItrXi14JVuX9t5a7aSmtprbVUpbXaKtpqtVhxQYsC1g2RJcoOAWSHbGSbrJNZzu+PkCmRBEKY5JxJ3s/HYx4l55yZ+cxpzHuu61znumyGYRiIiIiIJdnNLkBERERapqAWERGxMAW1iIiIhSmoRURELExBLSIiYmEKahEREQtTUIuIiFiYgroVDMPA5XKhW85FRKSjKahbobKykoSEBCorK80uRUREuhgFtYiIiIUpqEVERCxMQS0iImJhCmoRERELU1CLiIhYmIJaRETEwhTUIiIiFqagFhERsTAFtYiIiIUpqEVERCxMQS0iImJhCmoRERELU1CLiIhYmIJaRETEwhTUIiIiFqagFhERsTAFtYiIiIUpqEVERCxMQS0iImJhTrMLEBER65ty480UlZSdtD0tJYmlS141oaKuQ0EtItLJtBSq0PZgLSop44Z5T520/bUFc874teTMKKhFRDqZlkIVFKyhSNeoRURELExBLSIiYmEKahEREQvTNWoRkS4kb+dOLrliQrP7NILbmhTUIiJdiNdvaKBZiFHXt4iIiIUpqEVERCxMQS0iImJhCmoRERELU1CLiIhYmKlB/fHHH3PNNdeQlZWFzWbjjTfeaLLfMAweeughMjMziYqKYvz48ezevbvJMaWlpUyfPp34+HgSExO5/fbbqaqqanLM5s2b+cY3vkFkZCTZ2dk8+uij7f3RREREgsLUoK6urmbEiBEsWrSo2f2PPvooTzzxBE8//TRr164lJiaGiRMnUldXFzhm+vTpbNu2jRUrVrBs2TI+/vhjZs2aFdjvcrmYMGECvXr1Ijc3l9/+9rf8/Oc/55lnnmn3zyciInK2TL2PevLkyUyePLnZfYZhsHDhQh544AGuvfZaAF588UXS09N54403mDZtGjt27GD58uWsX7+e0aNHA/Dkk09y5ZVX8thjj5GVlcVLL71EfX09zz33HOHh4QwdOpSNGzfy+OOPNwn0E7ndbtxud+Bnl8sV5E8uIiLSOpa9Rr1v3z4KCgoYP358YFtCQgJjxoxhzZo1AKxZs4bExMRASAOMHz8eu93O2rVrA8dcdtllhIeHB46ZOHEieXl5lJU1vwzcggULSEhICDyys7Pb4yOKiIiclmWDuqCgAID09PQm29PT0wP7CgoKSEtLa7Lf6XSSnJzc5JjmXuPE9/i6efPmUVFREXgcOnTo7D+QiIhIG2gK0WZEREQQERFhdhkiIiLWbVFnZGQAUFhY2GR7YWFhYF9GRgZFRUVN9nu9XkpLS5sc09xrnPgeIiIiVmXZoO7Tpw8ZGRmsWrUqsM3lcrF27VpycnIAyMnJoby8nNzc3MAxH3zwAX6/nzFjxgSO+fjjj/F4PIFjVqxYwcCBA0lKSuqgTyMiItI2pgZ1VVUVGzduZOPGjUDDALKNGzdy8OBBbDYb9957L7/85S9566232LJlCzNnziQrK4vrrrsOgMGDBzNp0iTuuOMO1q1bx+rVq5kzZw7Tpk0jKysLgFtuuYXw8HBuv/12tm3bxquvvsof/vAH5s6da9KnFhERaT1Tr1Fv2LCByy+/PPBzY3jedtttLF68mB//+MdUV1cza9YsysvLufTSS1m+fDmRkZGB57z00kvMmTOHcePGYbfbmTp1Kk888URgf0JCAu+//z6zZ8/m/PPPp1u3bjz00EMt3polIiJiJaYG9dixYzEMo8X9NpuN+fPnM3/+/BaPSU5O5uWXXz7l+wwfPpxPPvmkzXWKiIiYxbLXqEVERERBLSIiYmkKahEREQtTUIuIiFiYglpERMTCFNQiIiIWpqAWERGxMAW1iIiIhSmoRURELExBLSIiYmEKahEREQtTUIuIiFiYglpERMTCFNQiIiIWpqAWERGxMAW1iIiIhSmoRURELExBLSIiYmEKahEREQtTUIuIiFiY0+wCRESkZVNuvJmikrJm96WlJLF0yasdXJF0NAW1iIiFFZWUccO8p5rd99qCOR1cjZhBXd8iIiIWpqAWERGxMAW1iIiIhekatYhIiMrbuZNLrphw8vZdu02oRtqLglpEJER5/UazA80enjHOhGqkvajrW0RExMIU1CIiIhamoBYREbEwBbWIiIiFaTCZiIi0WUsjz0FTnAaLglpERNqspZHnoClOg0Vd3yIiIhamoBYREbEwBbWIiIiFKahFREQsTEEtIiJiYQpqERERC1NQi4iIWJiCWkRExMIU1CIiIhamoBYREbEwBbWIiIiFKahFREQsTEEtIiJiYQpqERERC1NQi4iIWJiCWkRExMIU1CIiIhamoBYREbEwBbWIiIiFKahFREQsTEEtIiJiYQpqERERC1NQi4iIWJiCWkRExMIU1CIiIhamoBYREbEwBbWIiIiFKahFREQsTEEtIiJiYQpqERERC1NQi4iIWJiCWkRExMIU1CIiIhbmNLsAERHpQI4wthypYNvRCmrqfRgG9E6JZlTPJLMrkxZYukXt8/l48MEH6dOnD1FRUfTr149f/OIXGIYROMYwDB566CEyMzOJiopi/Pjx7N69u8nrlJaWMn36dOLj40lMTOT222+nqqqqoz+OiIip8itqib/+F3yws4hCl5vKOi9Vbi9bj7r42+cHqMwcbXaJ0gxLB/VvfvMb/vSnP/HUU0+xY8cOfvOb3/Doo4/y5JNPBo559NFHeeKJJ3j66adZu3YtMTExTJw4kbq6usAx06dPZ9u2baxYsYJly5bx8ccfM2vWLDM+koiIKXbku/hX7hHsMYnERTr5xoBu3Dw6m+tGZtG3WwwAruxLePz9vCaNITGfpbu+P/vsM6699lquuuoqAHr37s0//vEP1q1bBzS0phcuXMgDDzzAtddeC8CLL75Ieno6b7zxBtOmTWPHjh0sX76c9evXM3p0w7fFJ598kiuvvJLHHnuMrKysk97X7XbjdrsDP7tcrvb+qCIi7WZ3YSXvby8EoP7Al9w68wbCnf9tp/VKiWHDgVJW7ynhiQ/20CM5mptGZ5tVrnyNpVvUF198MatWrWLXrl0AbNq0iU8//ZTJkycDsG/fPgoKChg/fnzgOQkJCYwZM4Y1a9YAsGbNGhITEwMhDTB+/Hjsdjtr165t9n0XLFhAQkJC4JGdrV9YETl7U268mUuumHDSY8qNN7fbex4pr+W94yE9vHsCNf95pklINxrdK5m4ww1/N3+5bDtFrrqTjhFzWLpFff/99+NyuRg0aBAOhwOfz8cjjzzC9OnTASgoKAAgPT29yfPS09MD+woKCkhLS2uy3+l0kpycHDjm6+bNm8fcuXMDP7tcLoW1iJy1opIybpj31EnbX1swp13er9rt5Z3N+fj8Bv1SY/jmwFQ+puVu7bij6+k9ZhJbjlTw4JtbefrW87HZbO1Sm7SepVvU//znP3nppZd4+eWX+eKLL3jhhRd47LHHeOGFF9r1fSMiIoiPj2/yEBEJJYZhsGJHIbUeHymx4UwcmoH9NKFrw+DRG4bjtNt4b1sha/aWdFC1ciqWDuof/ehH3H///UybNo1hw4YxY8YM7rvvPhYsWABARkYGAIWFhU2eV1hYGNiXkZFBUVFRk/1er5fS0tLAMSIinc3mwxUcKKnBYbcxeWgGYY7W/bkfnBnP/1zYE4A/f7S3PUuUVrJ0UNfU1GC3Ny3R4XDg9/sB6NOnDxkZGaxatSqw3+VysXbtWnJycgDIycmhvLyc3NzcwDEffPABfr+fMWPGdMCnEBHpWLboRFZ/dQyAS/t3IyU24oyef8c3+mK3wUe7itl+VINpzWbpoL7mmmt45JFHeOedd9i/fz9Lly7l8ccfZ8qUKQDYbDbuvfdefvnLX/LWW2+xZcsWZs6cSVZWFtdddx0AgwcPZtKkSdxxxx2sW7eO1atXM2fOHKZNm9bsiG8RkVAXdeFNeHwGmQmRjOiRcMbP75kSzZXDMgF45uOvgl2enCFLDyZ78sknefDBB/nBD35AUVERWVlZ3HnnnTz00EOBY3784x9TXV3NrFmzKC8v59JLL2X58uVERkYGjnnppZeYM2cO48aNw263M3XqVJ544gkzPpKISLvad6ya8N7nYbPB5QPT2jwY7P99sx/LNufz9uZ8fnrVkCBXKWfC0kEdFxfHwoULWbhwYYvH2Gw25s+fz/z581s8Jjk5mZdffrkdKhQRsQ6f3+Dj3cUAjMpOJDXuzLq8T3Ru9wRGZCey6VA572w+GqwSpQ0s3fUtIiKtt/VIBeU1Hvy1Li7sk3zWr3ftiIbLg29uUlCbSUEtItIJuL0+Pt/XcDtV3cZlRDgdZ/2aV4/IxG6DLw+W440482vdEhwKahGRTiD3QBl1Hj/J0eHU7/o0KK+ZFhfJJf27AVCTck5QXlPOnIJaRCTE1db72HioHICcfilg+IP22teO7N7wHskDg/aacmYU1CIiIS73YBken0FqXAT9UmOC+trfGpKOw27DG52Cq9YT1NeW1lFQi4iEsGq3l03HW9MX9U0O+tzcCVFhnN8zCYD9JdVBfW1pHQW1iEgIyz1YhtdvkB4fQZ+U4LamG31zYCoAB0pq2uX15dQU1CIiIcoWlcDmwxUA5PRNabeVrr55TkNQHyqrwesP3vVvaR0FtYhIiIocNhGfv2Gq0J7J0e32PkMy47HXV+PxGRwt1zrVHc3SM5OJiISaKTfeTFFJWbP78nbtDtr7VLm9hA/8BtC+rWkAu91GZMUBalKHcKCkul2/FMjJFNQiIkFUVFLGDfOeanbfwzPGBe19vjxYhs0RRlZCJD2SooL2ui2JOB7UB0t1nbqjqetbRCTE1Hl8bDnScG16dO/gj/RuTkTlEQBKqupxe33t/n7yXwpqEZEQs/lwBR6fga/0ML1TOqYb2uGpJiEqDAPIr9B16o6koBYRCSEenz8wC1ndluUd0ppulJXQsHzw0fLaDntPUVCLiISU7Udd1Hp8xEc68ez/okPfOyux4Vq4Rn53LAW1iEiI8PkNcg82jCg/v1dSUOf0bo3GoC5w1el+6g6koBYRCRG7CiuprPMSFeZgSGZ8h79/UnQYUWEOfH6D4kp3h79/V6WgFhEJAYZhkHugoTU9qmciTkfH//m22WxkJTZep1b3d0dRUIuIhIBDZbWUVNcT5rAxvHuCaXVkJjR0f+dXaEBZR1FQi4iEgMaR3kMy44kIc5hWR3p8BABF6vruMApqERGLK6upZ9+xhiUmR2QnmlpLalxDUFfWeamp95paS1ehoBYRsbjG9aZ7p0STFB1uai0RTgdJ0WGAWtUdRUEtImJhfkc42/NdAIzqmWRyNQ3S4hsGlBW5FNQdQUEtImJh1alD8fgMUmLCye6AxTdaI/1493ehSyO/O4KCWkTEonx+g+r0EQCMzE7s0OlCTyUt7niLWl3fHUJBLSJiUSu2F+KLSCAyzM6gjDizywloHFBW5fZii+r4iVe6GgW1iIhF/f3zAwCcm5VgygQnLQl32kmOaRjU5kjpaXI1nZ91/p8XEZGA/ceq+XTPMTAMhpk4wUlL0o63qhXU7U9BLSJiQf9YfxCAiIoDxEeFmVzNybrFHg/qpO4mV9L5KahFRCym3uvntQ2HAYgp2mJyNc3rFnu861tB3e4U1CIiFvP+9gJKqutJj48gsnyf2eU0q7FFbY9Lw+vTkpftSUEtImIxL69t6Pa+eXQ2NgyTq2ledLiDqDAHNrudkup6s8vp1BTUIiIWsu9YNZ99VYLNBjdfaN2BWjabjZTj3d8lVQrq9qSgFhGxkH+sa2hNjz0nle6J1piJrCXdYhq6v49VaeKT9qSgFhGxCLfXx2u5DYPIbhnTy+RqTi8lrqFFfaxaQd2eFNQiIhaxcnsRpdX1ZMRHcvnAVLPLOa1Ai7pSXd/tSUEtImIR//qioTU99fzulpqJrCUpseEYhp9aj09rU7cj6/8miIh0AcWVbj7aVQzA9ef1MLma1glz2PFXHgPgmAaUtRsFtYiIBby58Qg+v8HI7ET6pcaaXU6r+cuPAlCqW7TajYJaRMQCGgeRTT0/NFrTjXzlBYCCuj0pqEVETFYf3Y2dBZWEO+xcMzzT7HLOiK8iH4AyBXW7UVCLiJisptsQAMYPSSMxOtzkas6Mv7FFXaOgbi8KahERE/n8BrUpAwGYGiKDyE7kq2gI6pp6H3Uen8nVdE4KahEREx0oqcYfFk232HAuO8f6906fxOsmNsIJ6Dp1e1FQi4iYaEd+JQDXjuxOWAjcO92c5JiG7voydX+3i9D8rRAR6QTcHh/7jlUDodnt3Sj5+HV1tajbh4JaRMQke4qr8BkGzppjDMmKN7ucNkuKCQMU1O3FaXYBIiJdVV5hQ7d3dMkukys5O//t+vY02Z63cyeXXDGh2eekpSSxdMmr7V5bZ6CgFhExQbXby+HSWgCiSvNMrubsJB3v+q6o9eD1+QPzlHv9BjfMe6rZ57y2YE6H1Rfq1PUtImKC3UVVGEBGfCROt8vscs5KdLiDCGdDnHy9VS1nT0EtImKCvIKGbu9z0kNnXu+W2Gy2QKu6vFbXqYNNQS0i0sEqaj0UuOqwAeekx5ldTlAkRjcMKCtXizroFNQiIh2scRBZj6QoYiI6x1AhBXX7UVCLiHSwXce7vQdmdI7WNPx3QJkmPQk+BbWISAc6VuWmpLoeh81G/xBad/p0EqPUom4vCmoRkQ7UOIisV0o0EWEOk6sJnsZVv2o9PtxanCOoOsfFERGRDjTlxpspKilrdl/ert2nfO7uoiqg8wwiaxTutBMd7qCm3kdZrYeMTvQlxGwKahGRM1RUUtbiRB4PzxjX4vMcyT2oqPXgsNvo0y2mvcozTVJ0ODX1tZTX1JMRH2l2OZ2Gur5FRDpIWK/zAOidEk24s/P9+dXI7/bR+X5TREQsyDAMwno3BHX/tM4ziOxECur2oaAWEekAJdX1OBIycNg6Z7c3QGKUbtFqDwpqEZEOsOf4ILKeKdFEODvnQKukE1rUhmGYXE3noaAWEekAjUE9oJN2ewMkHL+Xut7np87jN7mazkNBLSLSzkqr6ymprsfweTtttzeA02En9viUqBW1uk4dLApqEZF2truoYZITb/5OIjv5/cXxUQrqYFNQi4i0s8Zub8/+XJMraX+N3d8VdQrqYFFQi4i0o7Kaeo5V1WO3gefgJrPLaXcJkceDWrdoBY3lg/rIkSPceuutpKSkEBUVxbBhw9iwYUNgv2EYPPTQQ2RmZhIVFcX48ePZvbvpFH6lpaVMnz6d+Ph4EhMTuf3226mqqurojyIiXVBja7pHUjRGfY3J1bS/hOMjv13q+g4aSwd1WVkZl1xyCWFhYfz73/9m+/bt/O53vyMpKSlwzKOPPsoTTzzB008/zdq1a4mJiWHixInU1dUFjpk+fTrbtm1jxYoVLFu2jI8//phZs2aZ8ZFEpIvpCqO9T6Su7+Cz9Fzfv/nNb8jOzub5558PbOvTp0/g34ZhsHDhQh544AGuvfZaAF588UXS09N54403mDZtGjt27GD58uWsX7+e0aNHA/Dkk09y5ZVX8thjj5GVlXXS+7rdbtxud+Bnl8vVXh9RRDqxiloPRZVubEDf1M472vtE8ce7vivrvGDv3APnOoqlW9RvvfUWo0eP5sYbbyQtLY1Ro0bx7LPPBvbv27ePgoICxo8fH9iWkJDAmDFjWLNmDQBr1qwhMTExENIA48ePx263s3bt2mbfd8GCBSQkJAQe2dnZ7fQJRaQza2xNd0+KIjrc0u2ioIkOd+C02wCwx6SYXE3nYOmg3rt3L3/6058YMGAA7733HnfddRc//OEPeeGFFwAoKCgAID09vcnz0tPTA/sKCgpIS0trst/pdJKcnBw45uvmzZtHRUVF4HHo0KFgfzQR6QIab8vqKt3eADabLdD9bY/vZnI1nYOlv+L5/X5Gjx7Nr371KwBGjRrF1q1befrpp7ntttva7X0jIiKIiIhot9cXkc7PVeuh0NVwCa1fatcJami4Tl1SXY89NtXsUjoFS7eoMzMzGTJkSJNtgwcP5uDBgwBkZGQAUFhY2OSYwsLCwL6MjAyKioqa7Pd6vZSWlgaOEREJtj3Fx7u9E6OIibB0myjoAi3qOLWog6FNQd23b19KSkpO2l5eXk7fvn3PuqhGl1xyCXl5eU227dq1i169egENA8syMjJYtWpVYL/L5WLt2rXk5OQAkJOTQ3l5Obm5/51o4IMPPsDv9zNmzJig1SoicqKuNtr7RArq4GrT17z9+/fj8/lO2u52uzly5MhZF9Xovvvu4+KLL+ZXv/oVN910E+vWreOZZ57hmWeeARquhdx777388pe/ZMCAAfTp04cHH3yQrKwsrrvuOqChBT5p0iTuuOMOnn76aTweD3PmzGHatGnNjvgWETlblXUe8isabhHt1wWDOv54UDvi1PUdDGcU1G+99Vbg3++99x4JCQmBn30+H6tWraJ3795BK+6CCy5g6dKlzJs3j/nz59OnTx8WLlzI9OnTA8f8+Mc/prq6mlmzZlFeXs6ll17K8uXLiYyMDBzz0ksvMWfOHMaNG4fdbmfq1Kk88cQTQatTROREXxVXA5CZEBlYpKIrObFFbRgGNpvN5IpC2xn9BjW2Um0220mDucLCwujduze/+93vglYcwNVXX83VV1/d4n6bzcb8+fOZP39+i8ckJyfz8ssvB7UuEZGWdMXR3ieKj2yIFltYJLUeX5e5Na29nNHZ8/sb1hft06cP69evp1s3XX8QETmRLSqeo+UN3d79u2hQNy53WeX24qr1KqjPUpvO3r59+4Jdh4iIpUy58WaKSsqa3Ze3a3ez2wHCeo0CICM+krjjs3R1RQlRYVS5vVTUeshIiDz9E6RFbf6as2rVKlatWkVRUVGgpd3oueeeO+vCRETMVFRSxg3znmp238MzxrX4vLBe5wFdt9u7UXyUkyPlWpc6GNoU1A8//DDz589n9OjRZGZmaqCAiAhQ7fbiTB8AdN1u70aBxTkU1GetTUH99NNPs3jxYmbMmBHsekREQtbe4mpsdjtpcRGBW5S6KgV18LRpwpP6+nouvvjiYNciIhLSdhd37dHeJ1JQB0+bgvr73/++bncSETlBbb2Pw2W1gLq94b9BXeX24v3aOCY5M23q+q6rq+OZZ55h5cqVDB8+nLCwpl08jz/+eFCKExEJFV8VV2EY4C05SGL0ALPLMV1UmAPDU4ctLJLKWi9JMeFmlxSy2hTUmzdvZuTIkQBs3bq1yT4NLBORrqhxbm/P/i+AlkeFdxU2mw1/5TEcyT2oqPUoqM9Cm4L6P//5T7DrEBEJWXUeH4fKagDwHPjC5Gqsw3dCUEvbWXqZSxGRULC3uBq/ASmx4fhdRad/QhfhrywGoKJOQX022tSivvzyy0/Zxf3BBx+0uSARkVATmNs7NZavTK7FSvxVxwCoqFFQn402BXXj9elGHo+HjRs3snXr1pMW6xAR6czcXh8HSxu6vTXauyl/ZQkALrWoz0qbgvr3v/99s9t//vOfU1VVdVYFiYiEkn3Hu72TY8JJiY0wuxxLaWxRu2q9Wu7yLAT1GvWtt96qeb5FpEvZfXy0t1rTJ/NXNbSo631+3F7dS91WQQ3qNWvWEBmpVVJEpGtwe30cON7trdnImuHzEBXmANT9fTba1PV9/fXXN/nZMAzy8/PZsGEDDz74YFAKExGxuv3HavD5DRKjw0jRfcLNSogKo9bjw1XrJS3O7GpCU5uCOiEhocnPdrudgQMHMn/+fCZMmBCUwkRErK5xtHf/1Fhdf21BfKSTApda1GejTUH9/PPPB7sOEZGQUu/1s7+kodv7nHQ1FVvSuIqYS5OetFmbgrpRbm4uO3bsAGDo0KGMGjUqKEWJiFjd3mNVgW7vbrHq9m5JfOTxoK7zmlxJ6GpTUBcVFTFt2jQ+/PBDEhMTASgvL+fyyy/nlVdeITU1NZg1iohYzu7ChtHe56TFqdv7FOKjGmJGLeq2a9Oo77vvvpvKykq2bdtGaWkppaWlbN26FZfLxQ9/+MNg1ygiYi1hkRw43u09IF2jvU8l0PVd58EwDJOrCU1talEvX76clStXMnjw4MC2IUOGsGjRIg0mE5FOLyx7BD7DIDk6XKO9TyMuoiFmPD6DOo+fqHCHyRWFnja1qP1+/0lrUAOEhYXh1wLhItLJhfc5H2hoTavb+9ScDjsx4bqX+my0KaivuOIK7rnnHo4ePRrYduTIEe677z7GjdM6rCLSedV5fDizhgCa5KS1NPL77LQpqJ966ilcLhe9e/emX79+9OvXjz59+uByuXjyySeDXaOIiGXsLa7G5nCSorm9W00jv89Om65RZ2dn88UXX7By5Up27twJwODBgxk/fnxQixMRsZpdjUtaahBZqzWO/K5Qi7pNzqhF/cEHHzBkyBBcLhc2m41vfetb3H333dx9991ccMEFDB06lE8++aS9ahURMVWtx8eh43N7n6P5MFvtvy1qBXVbnFFQL1y4kDvuuIP4+PiT9iUkJHDnnXfy+OOPB604EREr+aqoCr8BvtLDJGm0d6s1XqOurFXXd1ucUVBv2rSJSZMmtbh/woQJ5ObmnnVRIiJWtLOgodu7fu86kysJLfGRxyc90b3UbXJGQV1YWNjsbVmNnE4nxcXFZ12UiIjVuGo9HCmvBaB+73qTqwktcce7vr1+g5p6n8nVhJ4zGkzWvXt3tm7dSv/+/Zvdv3nzZjIzM4NSmIhIsEy58WaKSsqa3ZeWksTSJa+e9jXyChta0z0Soyivaf61pHkOu43YCCdVbi+VdV5iIs5qmYku54zO1pVXXsmDDz7IpEmTiIyMbLKvtraWn/3sZ1x99dVBLVBE5GwVlZRxw7ynmt332oI5p32+YRiBbu+BmXFsDWp1XUN8VENQV9R6yEiIPP0TJOCMgvqBBx7g9ddf55xzzmHOnDkMHDgQgJ07d7Jo0SJ8Ph8//elP26VQERGzHKuqp7S6HofdxoBU3ZbVFvGRYRylTiO/2+CMgjo9PZ3PPvuMu+66i3nz5gUGBdhsNiZOnMiiRYtIT09vl0JFRMyys8AFQJ+UGCLCNFd1W5y4OIecmTO+UNCrVy/effddysrK2LNnD4ZhMGDAAJKSktqjPhERU/kNI3B9elCm7p1uq8DIb92idcbafEU/KSmJCy64IJi1iIhYzuGyWqrdPiKcdnqlRJtdTsjSpCdt16a5vkVEuorGbu8BabE47fqT2VYJJ0x6onupz4zGyItIp3CqW7Dydu1u02t6fH6+KqoGYFDGyTMySuvFRjix2cBnGFTrXuozoqAWkU7hVLdgPTyjbcvv7imqot7nJz7SSVaibik6G/bj91JX1nm13OUZUj+OiEgLth6tAGBoVgI2m83kakJfgq5Tt4mCWkSkGZ7IRI6W12EDhmSq2zsY4qI08rstFNQiIs2o6TYUgF4p0cRG6iphMKhF3TYKahGRr/H4/NSkDgHg3O4JJlfTeQQmPdE16jOioBYR+ZoPdhbhD4smOtxB75QYs8vpNP57L7W6vs+EglpE5GteXX8IgMGZ8TjsGkQWLPHHr1FX1nkw0HltLQW1iMgJCirq+DCvCIChWRpEFkwxEU7sNvAb4AtXT0VrKahFRE7wWu4h/AaEuw6TFB1udjmdit1mI+5497cvXF+CWktBLSJynNfn5+W1BwGIKd5mcjWdU+PiHL4IBXVrKahFRI5bsb2QoxV1pMSEE1XatmlH5dQaR357FdStpqAWETnu+c/2A3DLmJ7YDM1H3R4aR36rRd16CmoREWDb0QrW7SvFabcxfUwvs8vptBpHfqtF3XoKahERYPHq/QBMHpZJRoIW4GgvalGfOQW1iHR5JVVu3tx0FIDvXNzb3GI6ucZr1L7wOLw+v8nVhAYFtYh0ea+sP0S918/wHgmc1zPR7HI6tZhwBw6bDWx28ivqzC4nJCioRaRLM2x2/rbmANDQmtZylu3LZrMRd/wWrcNltSZXExoU1CLSpdUm9afAVUe32AiuGp5pdjldQmP396GyGpMrCQ0KahHpsgzDoCpzNAC3XtSTCKfD5Iq6hni1qM+IglpEuqx9JdV4YlKJCXdoEFkHamxRH1aLulUU1CLSJRmGwfp9ZQDcelEvEjWvd4dpvEXrcKla1K2hoBaRLulwWS0Frjrwe7n9G33MLqdLaZz0RC3q1lFQi0iXtH5/KdCw+EZanCY46UiNLeoCVx31Xt1LfToKahHpcgoq6jhUVovdBrH5uWaX0+VEhzvA78VvQH6Fur9PR0EtIl1OY2t6YEYczvpKk6vpemw2G063C9DI79ZQUItIl1Jc6WbvsWoALuiVbHI1XZcjENS6Tn06TrMLEBE5E1NuvJmikrKTtuftat360au/OgbAOemxJMVopLdZnG4XbuCQRn6floJaREJKUUkZN8x76qTtD88Yd9rnHimr5UBJDXYb5PRNaY/ypJUc7gpALerWCKmu71//+tfYbDbuvffewLa6ujpmz55NSkoKsbGxTJ06lcLCwibPO3jwIFdddRXR0dGkpaXxox/9CK/X28HVi4iZDMMItKaHZiXovmmTNV6jPqRr1KcVMkG9fv16/vznPzN8+PAm2++77z7efvttlixZwkcffcTRo0e5/vrrA/t9Ph9XXXUV9fX1fPbZZ7zwwgssXryYhx56qKM/goiYaH9JDfkVdTjtNi7so2vTZnMcH8SnFvXphURQV1VVMX36dJ599lmSkpIC2ysqKvjrX//K448/zhVXXMH555/P888/z2effcbnn38OwPvvv8/27dv5+9//zsiRI5k8eTK/+MUvWLRoEfX19c2+n9vtxuVyNXmISCiz8dnx1vSI7ERiI3TVz2yNXd+FLjdur8/kaqwtJIJ69uzZXHXVVYwfP77J9tzcXDweT5PtgwYNomfPnqxZswaANWvWMGzYMNLT0wPHTJw4EZfLxbZt25p9vwULFpCQkBB4ZGdnt8OnEpGOEtbnfI5V1RPutDO6V9LpnyDtzu6ta7ifmoaxA9Iyy3+tfOWVV/jiiy9Yv379SfsKCgoIDw8nMTGxyfb09HQKCgoCx5wY0o37G/c1Z968ecydOzfws8vlUliLhCiv30/kqGsBOL9nEpFhWiHLCnbt3EniuYUQ3Y0b77iXSNdBANJSkli65FWTq7MWSwf1oUOHuOeee1ixYgWRkR03xV9ERAQREREd9n4i0n42HarAEd+wQtbI7ESzy5HjvH6D7J692HesmhHX3cmw7gkAvLZgjsmVWY+lu75zc3MpKirivPPOw+l04nQ6+eijj3jiiSdwOp2kp6dTX19PeXl5k+cVFhaSkZEBQEZGxkmjwBt/bjxGRDqnmnov6/Y1zEJ2cf9uhDst/Sevy2lcl9pV6zG5Emuz9G/tuHHj2LJlCxs3bgw8Ro8ezfTp0wP/DgsLY9WqVYHn5OXlcfDgQXJycgDIyclhy5YtFBUVBY5ZsWIF8fHxDBkypMM/k4h0nDV7S6j3+fEeO8DgjDizy5GvaVyX2lWnoD4VS3d9x8XFce655zbZFhMTQ0pKSmD77bffzty5c0lOTiY+Pp67776bnJwcLrroIgAmTJjAkCFDmDFjBo8++igFBQU88MADzJ49W93bIp1YcaWbbUca7tioXbcE283jT/MM6WiNq2i5ajWvxalYOqhb4/e//z12u52pU6fidruZOHEif/zjHwP7HQ4Hy5Yt46677iInJ4eYmBhuu+025s+fb2LVInIqLU0TCq2bKtQwDD7ZXYwBDEiLZX3RniBXKMEQ6PpWi/qUQi6oP/zwwyY/R0ZGsmjRIhYtWtTic3r16sW7777bzpWJSLC0NE0otG6q0H3HqjlUVovDbuOS/t04+Z4RsYLGru+aeh9enx+nw9JXY02jsyIinYrX5+ejXcUAjMpOJOF4GIj1RDjthB8PZ1edur9bEnItahEJLS11Y7fX/bIbDpThqvMSG+Hkgt6aKtTKbDYb8VFOjlXV46r1kKzVzJqloBaRdtVSN3Z73C9bXlPPhgMNXwouG6DbsUJBfGRYQ1DrOnWL9FssIp3Gh7uK8fkNeiZH0z8t1uxypBUCt2hp5HeLFNQi0ik4s0cE1poee04qNpvN7JKkFTTy+/QU1CIS8jw+P9FjbgLgvJ5JJOlaZ8jQpCenp6AWkZC3dm8p9tgUYiOcWms6xGjSk9NTUItISCty1fHFwYYBZJcPSiVM9+KGlPiohq7vWo+Peq/f5GqsSb/RIhKy/H6DlTuLMID6fevp200DyEJNhNNBhLPxXmp1fzdHQS0iIevLQ+UUV7qJcNqpXftPs8uRNkrQdepTUlCLSEgqr6lnzd4SAC4bkIpRV2lyRdJWccdHflfqOnWzFNQiEnIMw2DVziJ8foPspCgGZ2oJy1DWOPK7Qi3qZimoRSTkbDpcweGyWpx2G1cMStM90yEuITDyW0HdHAW1iIQUe0I6n+45BsCl/buRGK17pkNd3PGR35VamKNZCmoRCRk+v0H0N74XmCZ0eI8Es0uSIGi8l7pCLepmKahFJGSs21+Ks1svIpx2vjU4XV3enURjULu9fvwO9ZB8nYJaREJCQUUd6/eXAnDFoDRiI7X4X2cR7rQTFeYAwBceb3I11qOgFhHLq/P4+PfWfAwD6r9axznpGuXd2TTOUOaNUFB/nYJaRCzNMAze316Iq85LfKST2rX/MLskaQeN3d8+BfVJFNQiYmkbDpSx71g1DruNq4ZnYtTXml2StIPGoFaL+mQKahGxrMNlNaz5qmH2sbHnpJIWF2lyRdJeGru+1aI+mYJaRCypyu3l31sLMIDBmXEMzdIf8M5MLeqWKahFxHL89jDe2niUmnofKbHhXD5Qs491dgnRjdeoEzAMw+RqrEVBLSKW4vX5Ke1/JcVVbqLCHFwzPEtrTHcB8ZFh2ADDEU5xpdvscixFNyKKyFmbcuPNFJWUNbsvb9fuVr+OYRg8+OZW3Im9cdptfHtEVmAJROncHHYb8VFhVNR62HesmrR4jUdopKAWkbNWVFLGDfOeanbfwzPGtfp1/vjhV/xj3SEwDCadm0lGgv5YdyWJx4N6f0k1Y/qmmF2OZag/SUQs4c2NR/jte3kAJBz8iH6psSZXJB0t8fh16v0lNSZXYi0KahEx3ed7S/jRks0AfP/SPsQWbjK5IjFD42WO/ceqTa7EWhTUImKqPUWVzHpxA/U+P5PPzeD/rhxsdkliksYlS/cpqJtQUIuIaYor3Xzn+fW46ryc1zOR3988Ertdt2F1VY1d3wdKanSL1gk0mExEWiVYI7sb+e1Obn9hPYfLaumdEs2zM0cTeXwFJema4iPDwPBT64GiSjfpGvkNKKhFpJWCNbIbwG8YlPWbTP7hCpKiw1j83QtJiY0IRpkSwhx2Gw63C19kIvuOVSuoj1PXt4h0KMMw+GhXMXVJfQl32vnLbaPp3S3G7LLEIpx15YAGlJ1ILWoRCQh293ZzvjxYzubDFWAY/OHmkZzfKzkoryudg9NdjhvdonUiBbWIBASze7s5uwsr+WTPMQDiD33C5GFXn/VrSueiFvXJ1PUtIh3iaHkt720vBGBEjwRiC740uSKxokBQlyioGymoRaTdldXU8/bmo/j8Bn27xXDZOanoJixpjrOuAmgIat2i1UBBLSLtyhYRy5sbj1Ln8ZMeH8GkczOwa8lKaYGj3oXDbqPO46fQpVW0QEEtIu3I4/MTM+4HVNR6iI90aslKOS2b4Sc7KQrQDGWN9F+MiLQLv99g+dYCnGl9iXDauXZkd2IiNH5VTq/xdj1dp26goBaRoDMMg//sKmLvsWoMn4drRmSRHBNudlkSInqnKKhPpKAWkaBbv7+MrUdcANR89Fe6J0aZXJGEkt4p0YBu0WqkoBaRoNp+1MWavSUAjD0nFc/BjeYWJCEn0PV9TJOegIJaRIJo/7FqVu5suFd6dK8kRmQnmluQhKTGru8DpdX4/bpFS0EtIkFR6Krj3a35GAYMyojj4n4pZpckIapHUhTOxlu0KuvMLsd0CmoROWv2xEze2HgEj8+gZ3I04wenY9O90tJGToed7OSG69S6RUtBLSJnqaymntgJ9wYmNLlqWCYOu0Jazk6v4wPKDmhxDgW1iLSdq9bD618cwR6dQLfYcK4b2Z1wp/6syNlrvE6tFrWCWkTaqMrt5fUvj1Dl9uIrz2fKqO5EhjnMLks6iX5psQB8VVRlciXmU1CLyBmrqffy+heHqaj1kBAVRtX7fyA6XLOOSfD0S21oUe8pVlArqEXkjNR5fCz98ghlNR5iI5xcP6o7Rk252WVJJ9P/eIv6UGkNdR6fydWYS0EtIq3m9vp4Y+MRjlXVEx3u4PrzuhMfFWZ2WdIJpcZGEB/pxG9oKlEFtYi0jiOMtzflU+hyExlmZ8qo7iRFa/5uaR82m+2E69QKahGRU/L5DWLG3sGR8lrCnXamjOxOt9gIs8uSTq5/akNQ7+niA8oU1CJySoZhsHJHIWHZw3HabXx7RBZp8ZFmlyVdQGOLuqsPKFNQi0iLDMPg413H2FlQieH3ceWwTK2EJR2msUXd1W/RUlCLSIvW7y9j4+FyAGo+fYE+x1c1EukIjSO/9x6r6tKLcyioRaRZuwsrA8tVfvOcVDx715lckXQ1PZKiCHfYqfP4OVJea3Y5plFQi8hJilx1vL+9YbnKUdmJjNRylWICp8Me6MXpytepFdQi0kS128vbm/Px+g16pURzaf9uZpckXVhj9/fuwkqTKzGPglpEAgybg2Wb86lye0mKDmPy0AzsWglLTHROehwAuwq7botak/OKSEB5r29S46ojwmnnmhFZRGiRDTHZwIyGFvUutahFpKtbtvkoNWnDAJh8boZmHRNL+G+LurLLjvxWUIsIh0prmPevLQBc0DuJXim6DUusoVdKDOHOhpHfh8pqzC7HFOr6Fumkptx4M0UlZc3uS0tJYumSVwHw+PzM+ceXVLq9hFceZUyf/h1ZpsgpOew2BqTFsu2oi7yCyi75JVJBLdJJFZWUccO8p5rd99qCOYF/P/Z+HpsOlRMf6SRq43Ic9m92VIkirTIwPY5tR13sKqxkwtAMs8vpcOr6FunCPtpVzJ8/2gvAozcMx1nfdQfsiHWdk9FwnTqvi478tnRQL1iwgAsuuIC4uDjS0tK47rrryMvLa3JMXV0ds2fPJiUlhdjYWKZOnUphYWGTYw4ePMhVV11FdHQ0aWlp/OhHP8Lr9XbkRxGxnKLKOv73nxsBuPWinkw6N9PcgkRaMLBxQFlB1/wiaemu748++ojZs2dzwQUX4PV6+b//+z8mTJjA9u3biYlpuE5x33338c4777BkyRISEhKYM2cO119/PatXrwbA5/Nx1VVXkZGRwWeffUZ+fj4zZ84kLCyMX/3qV2Z+PBHTGMDcVzdxrKqeQRlxPHDVELNLEmlRoEVdUMHF4yZhM/wnHXPiuIvOxtJBvXz58iY/L168mLS0NHJzc7nsssuoqKjgr3/9Ky+//DJXXHEFAM8//zyDBw/m888/56KLLuL9999n+/btrFy5kvT0dEaOHMkvfvELfvKTn/Dzn/+c8HDdgiJdT1XmaD7dc4zIMDtP3TKKSN0vLRaWlRBJbISTKreXy+f8ttm10E8cd9HZWLrr++sqKioASE5OBiA3NxePx8P48eMDxwwaNIiePXuyZs0aANasWcOwYcNIT08PHDNx4kRcLhfbtm1r9n3cbjcul6vJQ6SzyK+oxdUjB4CHvz2U/mlxJlckcmo2m42Bx1vVx6rcJlfT8Szdoj6R3+/n3nvv5ZJLLuHcc88FoKCggPDwcBITE5scm56eTkFBQeCYE0O6cX/jvuYsWLCAhx9+OMifQCT4TnULVt6u3Sdtq/P4+PfWArA1zDx20+js9i5RJCiGZMaTe6CMY5X10MUGfodMUM+ePZutW7fy6aeftvt7zZs3j7lz5wZ+drlcZGfrD5pYz6luwXp4xrgmPxuGwXvbCqis8+KoK+eRKROw2TSPt4SGIVnxABSrRW1Nc+bMYdmyZXz88cf06NEjsD0jI4P6+nrKy8ubtKoLCwvJyMgIHLNuXdN1dBtHhTce83URERFERJx8DUTELC21nJtrNbdk/YEy9pfU4LDbSN7zDvGR04NZoki7GtoY1JVuDMPoUl8yLR3UhmFw9913s3TpUj788EP69OnTZP/5559PWFgYq1atYurUqQDk5eVx8OBBcnIarsHl5OTwyCOPUFRURFpaGgArVqwgPj6eIUM00lVCQ0st56+3mltysLSGz78qAWDswFR2fn4sqPWJtLdz0uPA8FPrgep6H7ERlo6voLL0J509ezYvv/wyb775JnFxcYFrygkJCURFRZGQkMDtt9/O3LlzSU5OJj4+nrvvvpucnBwuuugiACZMmMCQIUOYMWMGjz76KAUFBTzwwAPMnj1brWbpEqrqvCzfWoBBw3W+c7MS2Gl2USJnKDLMgbO2FG90N4or3V0qqC096vtPf/oTFRUVjB07lszMzMDj1Vf/e6/c73//e66++mqmTp3KZZddRkZGBq+//npgv8PhYNmyZTgcDnJycrj11luZOXMm8+fPN+MjiXQoj8/Psi1HqfX46BYbzuUDU80uSaTNwmoaeoKKK7vWdWpLfyUxjNMvaRYZGcmiRYtYtGhRi8f06tWLd999N5iliYQAG+9vK6TQ5SbSaeeqYZk4HZb+bi5ySmE1xdQyqMsNKLN0UIt0JWd6q9WpGIZB1IU3sqe4CofNxtXDs0jU+tIS4sJqigG1qEUkCFoK3VNNc3gmt1qdzpq9JUQMaZitb/yQNLonRZ3R80WsqDGoK2o9uL0+IpxdY0Y9BbVIO2gpdNt7mkPDMPjsqxI2HGj4knD5wFQGZcS363uKdBSHty4wlWhxpZseSdFml9QhdMFKpJPw+w0+yCsKhHTtuiUM75FoblEiQZYe33C3TqGr63R/K6hFOoFaj483Nh1h65GGeenHDUrDvX2VyVWJBF96fCQAha46kyvpOOr6FglxR8treW9bAa46L067jYlDM+ifFsu/zC5MpB0oqEUkZHh8fiLPu47Xcg9jAPGRTq4ZkdXsEoAinUVj17erzktNvZfo8M4fY53/E4p0MoZhsKe4ik93HyNy+CQMYHBGHN8cmNplRsFK1xXhdJAUHUZZjYcil5ve3Tp/jHX+TyjSSRiGwb5j1Xy+tzQw4YO/qpRvXzyUfqmxJlcn0nHS4yMpq/FQ6Kqjd7cYs8tpdxpMJmJxfr9BWK/zeGX9Id7enE9xlZtwh50L+yTjeuPnCmnpcgLXqbvIxCdqUYtYVJ3Hx7ajLjYdLifm8lkUVboJc9gY0SOR83olERXm4H1vvdllinS4xuvUBRV1XWLJSwW1iMWUVdfz5aFyduS78Pob5rv311Vy0aBejMhO6BKDZ0ROJTU2AofNRq3HR0Wtp9NPj6uubxGLqI/JYNnmo7z4+QG2HKnA6zfoFhvO+MFpuJbMI6dfikJaBHA67KQdb1XnV3T+27T0X72IyT7bc4yFq3ZTPPRmiourAejTLYZR2Yn0SIrCZrPxms9rcpUi1pKZEEl+RR1Hy2sZnNm5p8lVUIuYZE9RJb96dycf7Cxq2OD3MaR7Euf3SiI5pnN35YmcrazEKL44WN4lWtTq+hbpYOU19TzwxhYmLvyED3YW4bTbuC2nFxmbFvOtIekKaZFWyExoGPldUl1PncdncjXtSy1qkQ5UF9+TiQs/DiwoMGFIOvdPHkTf1FhW/qHK5OpEQkd0uJPEqDDKaz2dvlWtoBZpo5bWnAbI27W7yc8en5/Ve45RMmgKuNz07RbDI1OGkdMvpSNKFemUMhMjjwd1rdmltCsFtUgbtbTmNMDDM8YF/l1eU8/bm/IprWm45/m2nF7cP3kwUeGa7lPkbGQlRLEjv5Kj5Z27Ra1r1CLtqKCijn9uOExpTT0x4Q5S8pby8LXnKqRFgqB7UhRwfOITW+f9b0pBLdJO9h6r4l9fHKbW4yMtLoL/ubAnkRUHzS5LpNNIjAojNsKJzzBwx2WZXU67UVCLtIPwcy5l2aZ8vH6DXsnRTD2vBzERutIkEkw2m43s461qd3y2ydW0HwW1SBAZhsGar0qIvvhWDGBIZjzXjMgi3Kn/1ETaQ4/kaADc8T1MrqT96Cu+SJD4/AardhayI78SgDF9khnTJ7nTLxggYqYex1vUnph0XHUe4iPDTK4o+PQ1XyQI6r1+3tp0lB35ldhsULP6b1zUN0UhLdLO4iPDSIgKA5ud9ftKzS6nXSioRc5StdvLa18c5mBpDU67jWuGZ1G/e7XZZYl0GY3XqVfvKTG5kvahoBY5C6XV9by64RDFlW6iwhxMPb8HfbrFmF2WSJeSffw69ce7i02upH3oGrV0GS3NJJaWksTSJa+e8eu5Y7P454ZDuL1+EqPCuHZkVqdfF1fEinolR4PhZ09RFYdKawLB3VkoqKXLaGkmsdcWzDnj11r65WGODZoCXj8Z8ZFcMyJTa0WLmCQizEF45VHq43vwn7wiZub0NrukoFLXt8gZ8Pr8zH97O/e9ugnsTvp2i+H687orpEVMFlmxH4D/NC4b24koqEVaqbS6npnPreO51fsAiDuylquHZxLm0H9GImaLLN8PwGdflVBb37mWvVQzQOQUGq9r18VnU97nW/gi4rD56kna+z4H1y7HNvNWs0sUEcBZW0JWQiRHK+r4fG8Jlw9KM7ukoFFQi5xCQXkN3aY8xJYjFQAkRIVx9fCedJswlIdXLzO5OhFptGvnTtJ6r4e0Ycx+9DmS9n8AtH2wqJUoqKVTOZM1ok/F7fXx6vpDFA6fSf7xkB7WPYFL+3fTdKAiFuT1G0yYMJE3Nh7F6D6S66dNwW6ztWmwqNUoqKVTae0a0S2pqPHw2heHee7TfRwpr4WwaJJjwhl7Tmqnu+VDpLPpkRRNhNNOrcfH0fJaeiR1jv9mFdQScoLVam5kAJsPl/PS5wd5c9MR6jx+ANLiInBvWc4t370Dh11TgYpYncNuo29qDDvyK9lTVKWgFmlvLQVy3q7d/PT595p9TmtazdCwylVRpZs9RVUUDr+Nbz/13yk/B2XEMf2iXtx4fg/GTXxUIS0SQgakxQWC+pvnpJpdTlAoqMWyWurGbm0YnyQskj1FVRwoqWZ/SQ1Vbm/D9shEIpx2Jg7NYGZOL87vlaTFNERCVHZyFOEOO9X1Po5W1JldTlAoqKXTMgyD4ko3B8tqOHCshoT/+R3vbMkP7HfabfTpFsOxz/7Jpy/9gZgI/ecgEuqcdjt9U2PYWVBJXkGl2eUEhf4ySadhGAb2hHQ2HSrnUFkNR8pqqfP6A/ttdgcJUWH0Tommd0oMPZKicDrsvLZst0JapBMZnBnPzoJKdhVWkmJzmF3OWdNfJwlprloPh8pqOFRWy+HSGuKnPMyHu/67gk6Yw0b3xCh6pcTw9oL/xz1/fMXEakWkI/RIiiI2wkmV20ttUl+zyzlrCmox1ZmO4K6t9xHW+3xW7SjkUFktFbWeJvsNn4fsbvFkJ0WTnRxFWlxkYDDYm5Wdcwk8EWnKbrMxODOO9fvLqOk22OxyzpqCWkx1uvuevT4/RyvqOFhaw6HSGooq3cSMvYOtR10A2GyQER9Jj6QospOieW7uFO5d3PyIcBHpOgZnxLN+fxnuhF4UuepIi480u6Q2U1CL5ZTV1LOvuJqYb/2Qpz/ei89vNNnvKzvC+cOH0jM5mqzESCKcJ1yD8nk7uFoRsaKkmHAyEyLJr6jjlfWH+OG4AWaX1GYKagmKU3Vhn26uXb9hUFBRx95j1ewtrqKspqE7O6z7EHx+g5hwBz2To+mZHE12cjSPff//8c0bVrXL5xCRzmN4jwTyK+p4ae0B7hrbL2RXulNQS1Ccqgu7ubl2fX6DdftKKet9BX/5ZB+1nv8uS2e3QfekKHYtf4E77v7/SI4J133NInLGBqTFseLLvRS64P1thVw1PNPsktpEQS0dxjAMvjhYzrLNR3lncz5FlW5IGwYeHxFOO71TYuibGkOvlGginA4efvwDUmJ/anbZIhKiHHYbMcVbqew+hhfW7FdQS9dwqmk9W+ILi+WJVbv554ZDHC6rDWxPiArDc+BLJkyYQI+kaE3VKSJBF1O0hZrsi1i3r5RNh8oZkZ1odklnTEEtZ6S103oahsH+khq2HKmgYOR3eXzFLgBiwh1MGJrBNSMyubR/KpdPeIxeKVM6pHYR6XocnmquHZnF618cYdF/9vDMzNFml3TGFNQSVD6/QV5hJV8cKKOkur5ho83OhX2S+Z8Ls5k0NJOo8NCfKUhEQscPxvZn6ZdHeH97ITsLXAzKiDe7pDMSmkPgxHpsNrYcqWDxZ/tZsb2Qkup6wh12RmUnkrb5Bf55Zw5TRvVQSItIh+ufFsvkczMAWPSfr0yu5swpqOWsHSmvJfbqeXyws4gqt5eYcAeX9E/he5f25rJzUgmrKze7RBHp4mZf3h+AZZuPsu1ohcnVnBl1fUubVdZ5+HTPMXYVVuFM6Um4085FfZIZ1iMBp13fAUXEfHk7d3LJFRMAiOo3idqUgVz/i5dJyVtK+mnmeLAKBbWcMa/PzxcHy1m/vxTv8VnD3Hkfc8f3byM6XL9SImIdXr8RGABbUevhb2sO4E7oyQWzfsOGZ35icnWto2aPtJphGNQm9uVvnx9gzd4SvH6DzIRI/ueCbGrXvKyQFhFLS4gKY0R2AgAf7yrGCJElMPWXVVpld2ElD7+9ndJzroE6L7ERTi7pn8LA9DjNGiYiIePC3snsLKikrMaDN+sCs8tpFQW1nFJFrYeFK3fx4poDDYtj+L1c0DeV0b2SCXeqQ0ZEQktEmIOx56Ty7tYCKjNHk1dQycCMOLPLOiX9pZVm+fwG/1h3kMsf+5DnV+/H5zf41pB00rf8nYv7dVNIi0jI6p8WS99uMWB3cN+rG6k7Ya0BK9JfW2nCMAxW7Sjkyj98wrzXt1BaXU+/1Bhe/N6FPDtzNE53aN3WICLydTabjcsHpWH31LA938Uj7+wwu6RTUte3BOQeKOU3/85j3f5SAOIindwzbgC3Xdw7ZJeHExFpTmyEk6S971My8Dr+9vkBRvdO4tqR3c0uq1kK6i7O5zdYuaOQv36yLxDQNr+PmMIviT26gec/dvP8CcefavENEZFQEllxgB+M7ccfP/yKHy3ZTEZ8JGP6pphd1kkU1F1UcaWbtzYd5W9r9rO/pAYAp93G9ed156O/PMy0//018D8nPe/ri2+IiISy/50wkL3F1SzfVsAdL27glVk5DMmy1lzgCuoupMrtZdWOQpZ+eYQPdxaCraE72+atI6ZoC7GFm1j9eTVfqdUsIl2Ew25j4bSR3PLs53xxsJz/efZzXvjehYy00HKYCupO7kh5Lat2FLJyRxGff1VCvc/fsMNmJz0+gsGZ8QzOiCfcOQy4BVCrWUS6lsgwB89/90K++/w6vjhYzvRnP+fxm0cycWiG2aUBCupOYcqNN1NUUgaA3xGBO74H7vhs3PHZeKOSmxzbOyWab4/sziu/f4Bp9/3SjHJFRCwnISqMv90+hll/28DqPSXc+bdc7hrbj3vHDyDCae4MZgrqEFdWXc8BXyJ9bryHw2U1FLncGCceYPi5oE8K4wanM35wGv1SY7HZbPxrQblJFYuIWFNMhJPF372QBe/u5LnV+/jTh1+xcnshj0wZxoV9kk//Au1EQR1CfH6DvcVVbD5cwYYDZWzYX8ruoio459uUHigLHJcUHUbP5Giyk6PJff4hlvxmmYlVi4iEjjCHnYeuGcLo3kk89OZWdhdVcdOf1/DNc1KZfXl/Luid1OHTJnepoF60aBG//e1vKSgoYMSIETz55JNceOGFZpd1EsMwOFZVz8HSanYWVLLtqIvtR13sLHBR5/GfdLyztpSB/XqTlRhFdlIUcZFhgX1f+uo7snQRkU7hymGZ5PRN4bfv5/HP9Yf4aFcxH+0qZkBaLN+9pA+3jOnZYbV0maB+9dVXmTt3Lk8//TRjxoxh4cKFTJw4kby8PNLS0jqsDp/foKymnmNVbkqqGv63uNJNUaWbAyXVHCip4VBpDdX1zU9pZ/PVE1ZzjPCqfMIrjxJelc+e7ZsZ//x7HfYZREQ6gxPXqv66tONrVf9qyjDuvKwvT3/0FW98eZTdRVVsPFSmoG4Pjz/+OHfccQff/e53AXj66ad55513eO6557j//vs7pIZ1+0qZ9swa/Mbpj8UwcNRX4qwrI6y6mGNfbWbWjx8mMSrspG4XjdIWETlzJ65V/XWP3Db+pBBPdIQTnjKIzYcq4YY/d0SJQBcJ6vr6enJzc5k3b15gm91uZ/z48axZs+ak491uN263O/BzRUXD/NYul+us6nD6avHWNUwuYvfUYvfWYvPW4PDUYvfU4Kx3Ubg/j+/NfZjYSCdOe1bgub+e9QxRRj3umpO7sg2/n7rqqmbf0+v1Nlu31+tt8Tmner2W9rWlhrbW0Zb6TrUv2PV15Hu19Vx01O/FqfbpXJy+hrbWEexzcao6Ouu58Hh9XP3DXze7743H/7+zzoNGcXGtWCrY6AKOHDliAMZnn33WZPuPfvQj48ILLzzp+J/97GcGoIceeuihhx7t+qioqDhthnWJFvWZmjdvHnPnzg387Pf7KS0tJSUl5ZTffFwuF9nZ2Rw6dIj4eGtNQReKdD6DS+czuHQ+g6urns+4uNOvhd0lgrpbt244HA4KCwubbC8sLCQj4+SZZyIiIoiIiGiyLTExsdXvFx8f36V+0dqbzmdw6XwGl85ncOl8nqxLrF0YHh7O+eefz6pVqwLb/H4/q1atIicnx8TKRERETq1LtKgB5s6dy2233cbo0aO58MILWbhwIdXV1YFR4CIiIlbUZYL65ptvpri4mIceeoiCggJGjhzJ8uXLSU9PD9p7RERE8LOf/eykbnNpG53P4NL5DC6dz+DS+WyZzTAMw+wiREREpHld4hq1iIhIqFJQi4iIWJiCWkRExMIU1CIiIhamoG6DP/3pTwwfPjxwY35OTg7//ve/Adi/fz82m63Zx5IlS0yu3JpOdT4BCgoKmDFjBhkZGcTExHDeeefxr3/9y8SKret05/Krr75iypQppKamEh8fz0033XTSREDSsl//+tfYbDbuvffewLa6ujpmz55NSkoKsbGxTJ06Vee0lZo7n8888wxjx44lPj4em81GeXm5afVZhYK6DXr06MGvf/1rcnNz2bBhA1dccQXXXnst27ZtIzs7m/z8/CaPhx9+mNjYWCZPnmx26ZZ0qvMJMHPmTPLy8njrrbfYsmUL119/PTfddBNffvmlyZVbz6nOZXV1NRMmTMBms/HBBx+wevVq6uvrueaaa/D7T17nXJpav349f/7znxk+fHiT7ffddx9vv/02S5Ys4aOPPuLo0aNcf/31JlUZOlo6nzU1NUyaNIn/+7//M6kyCwrSuhddXlJSkvGXv/yl2X0jR440vve973VwRaHtxPMZExNjvPjii032JycnG88++6wZpYWcxnP53nvvGXa7vckiAOXl5YbNZjNWrFhhYoXWV1lZaQwYMMBYsWKF8c1vftO45557DMNoOH9hYWHGkiVLAsfu2LHDAIw1a9aYVK31tXQ+T/Sf//zHAIyysrIOr89q1KI+Sz6fj1deeYXq6upmpyPNzc1l48aN3H777SZUF3qaO58XX3wxr776KqWlpfj9fl555RXq6uoYO3asucVa3NfPpdvtxmazNZlQIjIyErvdzqeffmpipdY3e/ZsrrrqKsaPH99ke25uLh6Pp8n2QYMG0bNnz2aX0JUGLZ1PaV6XmZks2LZs2UJOTg51dXXExsaydOlShgwZctJxf/3rXxk8eDAXX3yxCVWGjlOdz3/+85/cfPPNpKSk4HQ6iY6OZunSpfTv39/kqq2ppXOZmppKTEwMP/nJT/jVr36FYRjcf//9+Hw+8vPzzS7bsl555RW++OIL1q9ff9K+goICwsPDT1q0Jz09nYKCgg6qMLSc6nxK89SibqOBAweyceNG1q5dy1133cVtt93G9u3bmxxTW1vLyy+/rNZ0K5zqfD744IOUl5ezcuVKNmzYwNy5c7npppvYsmWLyVVbU0vnMjU1lSVLlvD2228TGxtLQkIC5eXlnHfeedjt+lPQnEOHDnHPPffw0ksvERkZaXY5IU/ns43M7nvvLMaNG2fMmjWrybYXX3zRCAsLM4qKikyqKnQ1ns89e/YYgLF169aT9t95550mVRdamvvdLC4uDlz7S09PNx599FETKrO+pUuXGoDhcDgCD8Cw2WyGw+EwVq5c2ex11J49exqPP/64OUVb2OnOp9frDRyra9T/pa7vIPH7/bjd7ibb/vrXv/Ltb3+b1NRUk6oKXY3ns6amBuCkFp/D4dBI5VZq7nezW7duAHzwwQcUFRXx7W9/24zSLG/cuHEn9dx897vfZdCgQfzkJz8hOzubsLAwVq1axdSpUwHIy8vj4MGDWkK3Gac7nw6Hw6TKrE1B3Qbz5s1j8uTJ9OzZk8rKSl5++WU+/PBD3nvvvcAxe/bs4eOPP+bdd981sdLQcKrzOWjQIPr378+dd97JY489RkpKCm+88QYrVqxg2bJlZpduOaf73Xz++ecZPHgwqamprFmzhnvuuYf77ruPgQMHmly5NcXFxXHuuec22RYTE0NKSkpg++23387cuXNJTk4mPj6eu+++m5ycHC666CIzSra01pzPgoICCgoK2LNnD9Aw5iIuLo6ePXuSnJzc4TVbgYK6DYqKipg5cyb5+fkkJCQwfPhw3nvvPb71rW8Fjnnuuefo0aMHEyZMMLHS0HC68/nuu+9y//33c80111BVVUX//v154YUXuPLKK02u3HpOdy7z8vKYN28epaWl9O7dm5/+9Kfcd999Jlcd2n7/+99jt9uZOnUqbrebiRMn8sc//tHsskLW008/zcMPPxz4+bLLLgMavmR+5zvfMakqc2mZSxEREQvTUE8RERELU1CLiIhYmIJaRETEwhTUIiIiFqagFhERsTAFtYiIiIUpqEVERCxMQS0iImJhCmoRaeI73/kO1113ndlliMhxCmqREPWd73wHm80WeKSkpDBp0iQ2b95sdmkAjB07tkl9X3+MHTvW7BJFQoKCWiSETZo0ifz8fPLz81m1ahVOp5Orr77a7LIAeP311wO1rVu3DoCVK1cGtr3++usmVygSGhTUIiEsIiKCjIwMMjIyGDlyJPfffz+HDh2iuLgYaFh56IorriAqKoqUlBRmzZpFVVVV4Pk+n4+5c+eSmJhISkoKP/7xjzlx+v8XX3yRlJSUk5bJvO6665gxY8Ypa0tOTg7U1rjUa0pKSmDb9u3b+cY3vkFUVBTZ2dn88Ic/pLq6OvD83r1788tf/pKZM2cSGxtLr169eOuttyguLubaa68lNjaW4cOHs2HDhsBzFi9eTGJiIm+88QYDBgwgMjKSiRMncujQobafZBGTKahFOomqqir+/ve/079/f1JSUqiurmbixIkkJSWxfv16lixZwsqVK5kzZ07gOb/73e9YvHgxzz33HJ9++imlpaUsXbo0sP/GG2/E5/Px1ltvBbYVFRXxzjvv8L3vfa/NtX711VdMmjSJqVOnsnnzZl599VU+/fTTJrVBw8pUl1xyCV9++SVXXXUVM2bMYObMmdx666188cUX9OvXj5kzZzb5clFTU8MjjzzCiy++yOrVqykvL2fatGltrlXEdIaIhKTbbrvNcDgcRkxMjBETE2MARmZmppGbm2sYhmE888wzRlJSklFVVRV4zjvvvGPY7XajoKDAMAzDyMzMNB599NHAfo/HY/To0cO49tprA9vuuusuY/LkyYGff/e73xl9+/Y1/H5/q2vdt2+fARhffvmlYRiGcfvttxuzZs1qcswnn3xi2O12o7a21jAMw+jVq5dx6623Bvbn5+cbgPHggw8Gtq1Zs8YAjPz8fMMwDOP55583AOPzzz8PHLNjxw4DMNauXdvqekWsRC1qkRB2+eWXs3HjRjZu3Mi6deuYOHEikydP5sCBA+zYsYMRI0YQExMTOP6SSy7B7/eTl5dHRUUF+fn5jBkzJrDf6XQyevToJu9xxx138P7773PkyBGgoXu5cSBbW23atInFixcTGxsbeEycOBG/38++ffsCxw0fPjzw7/T0dACGDRt20raioqImn+GCCy4I/Dxo0CASExPZsWNHm+sVMZPT7AJEpO1iYmLo379/4Oe//OUvJCQk8OyzzwbtPUaNGsWIESN48cUXmTBhAtu2beOdd945q9esqqrizjvv5Ic//OFJ+3r27Bn4d1hYWODfjV8Mmtvm9/vPqh4RK1OLWqQTsdls2O12amtrGTx4MJs2bWoyQGv16tXY7XYGDhxIQkICmZmZrF27NrDf6/WSm5t70ut+//vfZ/HixTz//POMHz+e7Ozss6rzvPPOY/v27fTv3/+kR3h4+Fm9ttfrbTLALC8vj/LycgYPHnxWrytiFgW1SAhzu90UFBRQUFDAjh07uPvuu6mqquKaa65h+vTpREZGctttt7F161b+85//cPfddzNjxoxAl/E999zDr3/9a9544w127tzJD37wA8rLy096n1tuuYXDhw/z7LPPntUgskY/+clP+Oyzz5gzZw4bN25k9+7dvPnmmycNJmuLsLAw7r77btauXUtubi7f+c53uOiii7jwwgvP+rVFzKCgFglhy5cvJzMzk8zMTMaMGRMY3T127Fiio6N57733KC0t5YILLuCGG25g3LhxPPXUU4Hn/+///i8zZszgtttuIycnh7i4OKZMmXLS+yQkJDB16lRiY2ODMmvZ8OHD+eijj9i1axff+MY3GDVqFA899BBZWVln/drR0dH85Cc/4ZZbbuGSSy4hNjaWV1999axfV8QsNsM44b4GEZEWjBs3jqFDh/LEE0+YXUqLFi9ezL333ttsr4BIqNJgMhE5pbKyMj788EM+/PBD/vjHP5pdjkiXo6AWkVMaNWoUZWVl/OY3v2HgwIFN9g0dOpQDBw40+7w///nPTJ8+vSNKFOnU1PUtIm124MABPB5Ps/vS09OJi4vr4IpEOh8FtYiIiIVp1LeIiIiFKahFREQsTEEtIiJiYQpqERERC1NQi4iIWJiCWkRExMIU1CIiIhb2/wNGbfGeTN1WggAAAABJRU5ErkJggg==\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# distribution plot for Calories\n",
        "sns.displot(data=calorie_burnt_data, x = 'Calories', kde=True)"
      ],
      "metadata": {
        "id": "mDZF_LJygYJ-",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 524
        },
        "outputId": "5384e511-2f2b-4619-b53a-c8c0ecd62437"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<seaborn.axisgrid.FacetGrid at 0x78f759707820>"
            ]
          },
          "metadata": {},
          "execution_count": 21
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 500x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#setting the figure parameters\n",
        "plt.rcParams['figure.figsize'] = (20, 10)\n",
        "plt.rcParams['figure.dpi'] = 200"
      ],
      "metadata": {
        "id": "G8hXuc8wgBdE"
      },
      "execution_count": 22,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#plotting the histplot for each column in dataset using subplots\n",
        "columns = calorie_burnt_data.columns\n",
        "for i, col in enumerate(columns):\n",
        "    plt.subplot(3,3, i+1)\n",
        "    if calorie_burnt_data[col].dtype == 'object':\n",
        "        sns.countplot(x=col, data=calorie_burnt_data,hue=col)\n",
        "    else:\n",
        "      sns.histplot(x=col, data=calorie_burnt_data,kde=True)\n",
        "    plt.xlabel(col)\n",
        "    plt.title(\"{}\".format(col))\n",
        "    plt.tight_layout()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 602
        },
        "id": "OQdw0gLViCSW",
        "outputId": "cae4b94e-9e94-4477-d81d-81bd9386b884"
      },
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 4000x2000 with 8 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# constructing a heat map to understand correlation\n",
        "correlation = calorie_burnt_data.corr()\n",
        "plt.figure(figsize=(10,10))\n",
        "sns.heatmap(correlation, vmin=-0.025 , vmax=0.025,cbar=True,square=True,annot=True,fmt='.3f', annot_kws={'size':8})"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "PpDZa2kWhOeV",
        "outputId": "e3b11c5f-65df-4355-9d19-5da4e2ec8d12"
      },
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: >"
            ]
          },
          "metadata": {},
          "execution_count": 24
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 2000x2000 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Data Preprocessing & Splitting"
      ],
      "metadata": {
        "id": "WzgdzhRXurCK"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# seperating the data and labels\n",
        "X = calorie_burnt_data.drop(columns=['Calories'],axis=1)\n",
        "y = calorie_burnt_data['Calories']"
      ],
      "metadata": {
        "id": "j4XFfFKjvRk1"
      },
      "execution_count": 25,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#importing the train_test_split to split the data\n",
        "from sklearn.model_selection import train_test_split"
      ],
      "metadata": {
        "id": "fqczv27ZvRhG"
      },
      "execution_count": 26,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# spliting the data in training & testing data\n",
        "X_train , X_test , y_train , y_test = train_test_split(X,y,test_size=0.2,random_state=2)"
      ],
      "metadata": {
        "id": "XO1I7X-4vRcf"
      },
      "execution_count": 27,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(X.shape,X_train.shape,X_test.shape)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "uPjSsPLHvh2j",
        "outputId": "02162190-9bc7-49dc-9281-05ec5d2ba433"
      },
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(15000, 7) (12000, 7) (3000, 7)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# saving the all columns of training data\n",
        "all_columns = X_train.columns"
      ],
      "metadata": {
        "id": "skTUr6iuk1Su"
      },
      "execution_count": 29,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Data Standardization"
      ],
      "metadata": {
        "id": "zmGDpEF7wsy1"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# importing the Standard Scaler to standardize the data\n",
        "from sklearn.preprocessing import StandardScaler"
      ],
      "metadata": {
        "id": "eBgOqwZ8ttii"
      },
      "execution_count": 30,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "scaler = StandardScaler()"
      ],
      "metadata": {
        "id": "h3W4Xmujttd6"
      },
      "execution_count": 31,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# scaling the Training Data\n",
        "X_train[all_columns] = scaler.fit_transform(X_train[all_columns])"
      ],
      "metadata": {
        "id": "Y7uX0pstlhZi"
      },
      "execution_count": 32,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Test Data Preprocessed\n",
        "# scaling the test data\n",
        "X_test[all_columns] = scaler.transform(X_test[all_columns])"
      ],
      "metadata": {
        "id": "H1izLIRMWC3S"
      },
      "execution_count": 33,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# first 5 rows after standardization\n",
        "X_train.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "H6F4gtsflhWd",
        "outputId": "2172397b-0797-4af2-c791-87ceb06a15d7"
      },
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        Gender       Age    Height    Weight  Duration  Heart_Rate  Body_Temp\n",
              "1154  0.990545 -0.274388 -0.380052 -0.525818 -1.507168   -1.094345  -1.959348\n",
              "9804 -1.009546 -0.746377  1.372604  1.402021 -0.786586   -0.470505  -0.548830\n",
              "7919  0.990545  2.085557  0.531329  0.271908 -1.026780   -1.198319  -0.805288\n",
              "4854 -1.009546  0.433596 -0.239839  0.138954  1.615356    1.608962   0.989916\n",
              "5947  0.990545 -0.628379 -0.169733 -0.592295  1.615356    0.985121   0.989916"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5777e44b-bd02-4a95-b3f6-c4ef0ba88542\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Gender</th>\n",
              "      <th>Age</th>\n",
              "      <th>Height</th>\n",
              "      <th>Weight</th>\n",
              "      <th>Duration</th>\n",
              "      <th>Heart_Rate</th>\n",
              "      <th>Body_Temp</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1154</th>\n",
              "      <td>0.990545</td>\n",
              "      <td>-0.274388</td>\n",
              "      <td>-0.380052</td>\n",
              "      <td>-0.525818</td>\n",
              "      <td>-1.507168</td>\n",
              "      <td>-1.094345</td>\n",
              "      <td>-1.959348</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9804</th>\n",
              "      <td>-1.009546</td>\n",
              "      <td>-0.746377</td>\n",
              "      <td>1.372604</td>\n",
              "      <td>1.402021</td>\n",
              "      <td>-0.786586</td>\n",
              "      <td>-0.470505</td>\n",
              "      <td>-0.548830</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7919</th>\n",
              "      <td>0.990545</td>\n",
              "      <td>2.085557</td>\n",
              "      <td>0.531329</td>\n",
              "      <td>0.271908</td>\n",
              "      <td>-1.026780</td>\n",
              "      <td>-1.198319</td>\n",
              "      <td>-0.805288</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4854</th>\n",
              "      <td>-1.009546</td>\n",
              "      <td>0.433596</td>\n",
              "      <td>-0.239839</td>\n",
              "      <td>0.138954</td>\n",
              "      <td>1.615356</td>\n",
              "      <td>1.608962</td>\n",
              "      <td>0.989916</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5947</th>\n",
              "      <td>0.990545</td>\n",
              "      <td>-0.628379</td>\n",
              "      <td>-0.169733</td>\n",
              "      <td>-0.592295</td>\n",
              "      <td>1.615356</td>\n",
              "      <td>0.985121</td>\n",
              "      <td>0.989916</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5777e44b-bd02-4a95-b3f6-c4ef0ba88542')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-5777e44b-bd02-4a95-b3f6-c4ef0ba88542 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-5777e44b-bd02-4a95-b3f6-c4ef0ba88542');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-89d88378-3aef-4521-9b40-8c5e007511a7\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-89d88378-3aef-4521-9b40-8c5e007511a7')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-89d88378-3aef-4521-9b40-8c5e007511a7 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "X_train",
              "summary": "{\n  \"name\": \"X_train\",\n  \"rows\": 12000,\n  \"fields\": [\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0000416692710143,\n        \"min\": -1.0095455567711473,\n        \"max\": 0.9905446993381093,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          -1.0095455567711473,\n          0.9905446993381093\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0000416692710141,\n        \"min\": -1.3363628442940554,\n        \"max\": 2.1445553510570594,\n        \"num_unique_values\": 60,\n        \"samples\": [\n          -0.2743878016445628,\n          0.8465858544854572\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Height\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0000416692710141,\n        \"min\": -3.6049384493102563,\n        \"max\": 3.3355786177497593,\n        \"num_unique_values\": 90,\n        \"samples\": [\n          0.39111683172429806,\n          0.7416479967273292\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Weight\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0000416692710141,\n        \"min\": -2.5866118104095572,\n        \"max\": 3.5292919555534534,\n        \"num_unique_values\": 90,\n        \"samples\": [\n          0.4048628577245241,\n          0.6042945022667962\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Duration\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0000416692710141,\n        \"min\": -1.747362616914485,\n        \"max\": 1.7354529888373451,\n        \"num_unique_values\": 30,\n        \"samples\": [\n          -1.146877167646928,\n          -0.5463917183793711\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Heart_Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0000416692710141,\n        \"min\": -2.9658657046625665,\n        \"max\": 3.3765084369984724,\n        \"num_unique_values\": 58,\n        \"samples\": [\n          -1.0943454661396368,\n          0.3612813860448639\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Body_Temp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0000416692710141,\n        \"min\": -3.626323213777032,\n        \"max\": 1.8875183246111302,\n        \"num_unique_values\": 44,\n        \"samples\": [\n          -2.9851788488481756,\n          -0.16414364316121235\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 34
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# statistical description about scaled training data\n",
        "X_train.describe()"
      ],
      "metadata": {
        "id": "K0lUJCCulhTW",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "outputId": "a076f801-7f60-4909-c49f-506c6ffe6fed"
      },
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             Gender           Age        Height        Weight      Duration  \\\n",
              "count  1.200000e+04  1.200000e+04  1.200000e+04  1.200000e+04  1.200000e+04   \n",
              "mean  -1.053972e-16 -1.207923e-16 -6.457797e-16 -1.644610e-16  8.763360e-17   \n",
              "std    1.000042e+00  1.000042e+00  1.000042e+00  1.000042e+00  1.000042e+00   \n",
              "min   -1.009546e+00 -1.336363e+00 -3.604938e+00 -2.586612e+00 -1.747363e+00   \n",
              "25%   -1.009546e+00 -8.643739e-01 -7.305829e-01 -7.917270e-01 -9.066830e-01   \n",
              "50%    9.905447e-01 -2.153892e-01 -2.952057e-02 -6.047765e-02  5.409373e-02   \n",
              "75%    9.905447e-01  7.875872e-01  7.416480e-01  7.372489e-01  8.947734e-01   \n",
              "max    9.905447e-01  2.144555e+00  3.335579e+00  3.529292e+00  1.735453e+00   \n",
              "\n",
              "         Heart_Rate     Body_Temp  \n",
              "count  1.200000e+04  1.200000e+04  \n",
              "mean   2.161234e-17 -7.779851e-15  \n",
              "std    1.000042e+00  1.000042e+00  \n",
              "min   -2.965866e+00 -3.626323e+00  \n",
              "25%   -7.824254e-01 -5.488303e-01  \n",
              "50%    4.936135e-02  2.205430e-01  \n",
              "75%    7.771748e-01  7.334585e-01  \n",
              "max    3.376508e+00  1.887518e+00  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-20ab1078-b99d-470b-92d5-ccc46531eb81\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Gender</th>\n",
              "      <th>Age</th>\n",
              "      <th>Height</th>\n",
              "      <th>Weight</th>\n",
              "      <th>Duration</th>\n",
              "      <th>Heart_Rate</th>\n",
              "      <th>Body_Temp</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>1.200000e+04</td>\n",
              "      <td>1.200000e+04</td>\n",
              "      <td>1.200000e+04</td>\n",
              "      <td>1.200000e+04</td>\n",
              "      <td>1.200000e+04</td>\n",
              "      <td>1.200000e+04</td>\n",
              "      <td>1.200000e+04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>-1.053972e-16</td>\n",
              "      <td>-1.207923e-16</td>\n",
              "      <td>-6.457797e-16</td>\n",
              "      <td>-1.644610e-16</td>\n",
              "      <td>8.763360e-17</td>\n",
              "      <td>2.161234e-17</td>\n",
              "      <td>-7.779851e-15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>1.000042e+00</td>\n",
              "      <td>1.000042e+00</td>\n",
              "      <td>1.000042e+00</td>\n",
              "      <td>1.000042e+00</td>\n",
              "      <td>1.000042e+00</td>\n",
              "      <td>1.000042e+00</td>\n",
              "      <td>1.000042e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>-1.009546e+00</td>\n",
              "      <td>-1.336363e+00</td>\n",
              "      <td>-3.604938e+00</td>\n",
              "      <td>-2.586612e+00</td>\n",
              "      <td>-1.747363e+00</td>\n",
              "      <td>-2.965866e+00</td>\n",
              "      <td>-3.626323e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>-1.009546e+00</td>\n",
              "      <td>-8.643739e-01</td>\n",
              "      <td>-7.305829e-01</td>\n",
              "      <td>-7.917270e-01</td>\n",
              "      <td>-9.066830e-01</td>\n",
              "      <td>-7.824254e-01</td>\n",
              "      <td>-5.488303e-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>9.905447e-01</td>\n",
              "      <td>-2.153892e-01</td>\n",
              "      <td>-2.952057e-02</td>\n",
              "      <td>-6.047765e-02</td>\n",
              "      <td>5.409373e-02</td>\n",
              "      <td>4.936135e-02</td>\n",
              "      <td>2.205430e-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>9.905447e-01</td>\n",
              "      <td>7.875872e-01</td>\n",
              "      <td>7.416480e-01</td>\n",
              "      <td>7.372489e-01</td>\n",
              "      <td>8.947734e-01</td>\n",
              "      <td>7.771748e-01</td>\n",
              "      <td>7.334585e-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>9.905447e-01</td>\n",
              "      <td>2.144555e+00</td>\n",
              "      <td>3.335579e+00</td>\n",
              "      <td>3.529292e+00</td>\n",
              "      <td>1.735453e+00</td>\n",
              "      <td>3.376508e+00</td>\n",
              "      <td>1.887518e+00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-20ab1078-b99d-470b-92d5-ccc46531eb81')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-20ab1078-b99d-470b-92d5-ccc46531eb81 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-20ab1078-b99d-470b-92d5-ccc46531eb81');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-550c335e-1bb7-481f-9dc0-7c5765d10e71\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-550c335e-1bb7-481f-9dc0-7c5765d10e71')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-550c335e-1bb7-481f-9dc0-7c5765d10e71 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"X_train\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4242.542158245785,\n        \"min\": -1.0095455567711473,\n        \"max\": 12000.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          -1.0539717247108153e-16,\n          0.9905446993381093,\n          1.0000416692710143\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4242.564257223853,\n        \"min\": -1.3363628442940554,\n        \"max\": 12000.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          -1.2079226507921704e-16,\n          -0.2153891881640354,\n          12000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Height\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4242.6051542467885,\n        \"min\": -3.6049384493102563,\n        \"max\": 12000.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          -6.457797259902994e-16,\n          -0.029520566279339248,\n          12000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Weight\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4242.548721914152,\n        \"min\": -2.5866118104095572,\n        \"max\": 12000.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          -1.6446103738113986e-16,\n          -0.06047764620744418,\n          12000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Duration\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4242.58879206098,\n        \"min\": -1.747362616914485,\n        \"max\": 12000.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          8.763360407707902e-17,\n          0.05409373088818583,\n          12000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Heart_Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4242.567581178093,\n        \"min\": -2.9658657046625665,\n        \"max\": 12000.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          2.161234154603638e-17,\n          0.04936134629104229,\n          12000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Body_Temp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4242.657848954204,\n        \"min\": -3.626323213777032,\n        \"max\": 12000.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          -7.779850837626631e-15,\n          0.22054297579610702,\n          12000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 35
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Model Selection"
      ],
      "metadata": {
        "id": "DYS_7Ogn8yYh"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Comparing the models with default hyperparameter values using Cross Validation"
      ],
      "metadata": {
        "id": "QjczlN4G9DdO"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# importing the standard classification models from sklearn library\n",
        "from sklearn.linear_model import LinearRegression\n",
        "from sklearn.linear_model import Ridge\n",
        "from sklearn.linear_model import Lasso\n",
        "from sklearn.svm import SVR\n",
        "from sklearn.neighbors import KNeighborsRegressor\n",
        "from sklearn.ensemble import RandomForestRegressor\n",
        "from xgboost import XGBRegressor"
      ],
      "metadata": {
        "id": "jlHcIhnY9H04"
      },
      "execution_count": 36,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# all models in a dictionary\n",
        "models = {\n",
        "    'Linear Regression': LinearRegression(),\n",
        "    'Ridge': Ridge(),\n",
        "    'Lasso': Lasso(),\n",
        "    'SVM': SVR(),\n",
        "    'KNN': KNeighborsRegressor(),\n",
        "    'RandomForestRegressor': RandomForestRegressor(),\n",
        "    'XGBoost': XGBRegressor()\n",
        "}"
      ],
      "metadata": {
        "id": "VjvVqFhe6xBh"
      },
      "execution_count": 37,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# importing cross validation score function to calculate the cross validation score\n",
        "from sklearn.model_selection import cross_val_score"
      ],
      "metadata": {
        "id": "Ouc6Xr_i9eS7"
      },
      "execution_count": 38,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# defining a function who can give you cross validation scores on given data with given set of model\n",
        "def compare_models_cross_validation(models,X,y):\n",
        "  for name, model in models.items():\n",
        "    cv_score = cross_val_score(model, X, y, cv=5,scoring='r2')\n",
        "    mean_r2 = cv_score.mean()\n",
        "    print(f\"Model: {name}\")\n",
        "    print('Cross Validation accuracies for the',model,'=', cv_score)\n",
        "    print('Mean R square score of the ',model,'=',mean_r2)\n",
        "    print(\"=\"*50)"
      ],
      "metadata": {
        "id": "VXV1qK8X6w7w"
      },
      "execution_count": 39,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# calling the compare function for the models we choose\n",
        "compare_models_cross_validation(models,X_train,y_train)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4hdQn7bg6w44",
        "outputId": "cd56db98-8b16-4a3c-9a9f-776f229a5198"
      },
      "execution_count": 40,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model: Linear Regression\n",
            "Cross Validation accuracies for the LinearRegression() = [0.9678846  0.96746259 0.96736874 0.96668357 0.96680672]\n",
            "Mean R square score of the  LinearRegression() = 0.9672412441657814\n",
            "==================================================\n",
            "Model: Ridge\n",
            "Cross Validation accuracies for the Ridge() = [0.96788392 0.96746416 0.96736489 0.96668339 0.96680976]\n",
            "Mean R square score of the  Ridge() = 0.967241224203337\n",
            "==================================================\n",
            "Model: Lasso\n",
            "Cross Validation accuracies for the Lasso() = [0.96176588 0.96146932 0.9608587  0.96121976 0.96089017]\n",
            "Mean R square score of the  Lasso() = 0.9612407633752372\n",
            "==================================================\n",
            "Model: SVM\n",
            "Cross Validation accuracies for the SVR() = [0.9894379  0.99134403 0.98847727 0.99088404 0.98871851]\n",
            "Mean R square score of the  SVR() = 0.9897723504210093\n",
            "==================================================\n",
            "Model: KNN\n",
            "Cross Validation accuracies for the KNeighborsRegressor() = [0.99266717 0.99197467 0.99210501 0.99263501 0.99282059]\n",
            "Mean R square score of the  KNeighborsRegressor() = 0.9924404902034591\n",
            "==================================================\n",
            "Model: RandomForestRegressor\n",
            "Cross Validation accuracies for the RandomForestRegressor() = [0.9975162  0.99701214 0.99790954 0.99778359 0.99754267]\n",
            "Mean R square score of the  RandomForestRegressor() = 0.997552828144984\n",
            "==================================================\n",
            "Model: XGBoost\n",
            "Cross Validation accuracies for the XGBRegressor(base_score=None, booster=None, callbacks=None,\n",
            "             colsample_bylevel=None, colsample_bynode=None,\n",
            "             colsample_bytree=None, device=None, early_stopping_rounds=None,\n",
            "             enable_categorical=False, eval_metric=None, feature_types=None,\n",
            "             gamma=None, grow_policy=None, importance_type=None,\n",
            "             interaction_constraints=None, learning_rate=None, max_bin=None,\n",
            "             max_cat_threshold=None, max_cat_to_onehot=None,\n",
            "             max_delta_step=None, max_depth=None, max_leaves=None,\n",
            "             min_child_weight=None, missing=nan, monotone_constraints=None,\n",
            "             multi_strategy=None, n_estimators=None, n_jobs=None,\n",
            "             num_parallel_tree=None, random_state=None, ...) = [0.99862124 0.99861282 0.99867514 0.99848757 0.99873669]\n",
            "Mean R square score of the  XGBRegressor(base_score=None, booster=None, callbacks=None,\n",
            "             colsample_bylevel=None, colsample_bynode=None,\n",
            "             colsample_bytree=None, device=None, early_stopping_rounds=None,\n",
            "             enable_categorical=False, eval_metric=None, feature_types=None,\n",
            "             gamma=None, grow_policy=None, importance_type=None,\n",
            "             interaction_constraints=None, learning_rate=None, max_bin=None,\n",
            "             max_cat_threshold=None, max_cat_to_onehot=None,\n",
            "             max_delta_step=None, max_depth=None, max_leaves=None,\n",
            "             min_child_weight=None, missing=nan, monotone_constraints=None,\n",
            "             multi_strategy=None, n_estimators=None, n_jobs=None,\n",
            "             num_parallel_tree=None, random_state=None, ...) = 0.9986266919022148\n",
            "==================================================\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Top 3:\n",
        "\n",
        "XGBRegressor() = 0.9986266919022148\n",
        "\n",
        "RandomForestRegressor() = 0.997552828144984\n",
        "\n",
        "KNeighborsRegressor() = 0.9924404902034591"
      ],
      "metadata": {
        "id": "RmRlgK2S-BM4"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Feature Selection"
      ],
      "metadata": {
        "id": "bNrgsqWTjEds"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#importing the RFE\n",
        "from sklearn.feature_selection import RFE"
      ],
      "metadata": {
        "id": "wEirjHFBhBlJ"
      },
      "execution_count": 41,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# defining a function who will give you n best features for the given model and data\n",
        "def find_best_feature(n,mdl,X,y):\n",
        "    model = mdl\n",
        "    rfe = RFE(model, n_features_to_select=n, verbose=0)\n",
        "    rfe = rfe.fit(X, y)\n",
        "    selected_col = X.columns[rfe.support_]\n",
        "    cv_score = cross_val_score(model,X[selected_col],y, cv=5,scoring='r2')\n",
        "    mean_r2 = cv_score.mean()\n",
        "    print(\"Selected columns: \", list(selected_col))\n",
        "    print(n, mean_r2)\n",
        "    print(\"----------------------\\n\")\n",
        "    return list(selected_col),mean_r2"
      ],
      "metadata": {
        "id": "P0kj1m_BjF4E"
      },
      "execution_count": 42,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#importing the SelectKBest, f_classif\n",
        "from sklearn.feature_selection import SelectKBest, f_classif"
      ],
      "metadata": {
        "id": "PNVTV_ERjF1Z"
      },
      "execution_count": 43,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# defining a function who will give you n best features for the knn model and data\n",
        "def find_best_feature_knn(n, mdl, X, y):\n",
        "    selector = SelectKBest(f_classif, k=n)\n",
        "    X_new = selector.fit_transform(X, y)\n",
        "    selected_col = X.columns[selector.get_support()]\n",
        "    cv_score = cross_val_score(mdl, X_new, y, cv=5,scoring='r2')\n",
        "    mean_r2 = cv_score.mean()\n",
        "    print(\"Selected columns: \", list(selected_col))\n",
        "    print(n, mean_r2)\n",
        "    print(\"----------------------\\n\")\n",
        "    return list(selected_col), mean_r2"
      ],
      "metadata": {
        "id": "vuh_Xlf5jFyp"
      },
      "execution_count": 44,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# 1. XG Boost Regressor"
      ],
      "metadata": {
        "id": "fD3xuroYej4a"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "XG Boost Regressor Model as the 3rd highest r2 based on cross validation score according to its default hyperparameters\n",
        "\n",
        "XGBRegressor() = 0.9986266919022148"
      ],
      "metadata": {
        "id": "Jp43Dexxe2uV"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# loading the XG Boost Regressor model\n",
        "xgb = XGBRegressor()"
      ],
      "metadata": {
        "id": "QgPkJdCPe2at"
      },
      "execution_count": 45,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# getting the best features of XG Boost Regressor by calling the feature selection function\n",
        "best_score_xgb = 0\n",
        "best_features_xgb = None\n",
        "for i in range(X_train.shape[1]):\n",
        "    col , score = find_best_feature(i+1,xgb,X_train,y_train)\n",
        "    if best_score_xgb < score:\n",
        "        best_score_xgb = score\n",
        "        best_features_xgb = col\n",
        "print(best_features_xgb)\n",
        "print(best_score_xgb)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "MmzuzEP4eaKV",
        "outputId": "53f4f836-c334-44c3-9077-5b49d7e8ba4c"
      },
      "execution_count": 46,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Selected columns:  ['Duration']\n",
            "1 0.9288467227104586\n",
            "----------------------\n",
            "\n",
            "Selected columns:  ['Duration', 'Heart_Rate']\n",
            "2 0.9594960941420663\n",
            "----------------------\n",
            "\n",
            "Selected columns:  ['Age', 'Duration', 'Heart_Rate']\n",
            "3 0.984197973842306\n",
            "----------------------\n",
            "\n",
            "Selected columns:  ['Gender', 'Age', 'Duration', 'Heart_Rate']\n",
            "4 0.9964771451510076\n",
            "----------------------\n",
            "\n",
            "Selected columns:  ['Gender', 'Age', 'Weight', 'Duration', 'Heart_Rate']\n",
            "5 0.9987818458599064\n",
            "----------------------\n",
            "\n",
            "Selected columns:  ['Gender', 'Age', 'Height', 'Weight', 'Duration', 'Heart_Rate']\n",
            "6 0.9986967218211815\n",
            "----------------------\n",
            "\n",
            "Selected columns:  ['Gender', 'Age', 'Height', 'Weight', 'Duration', 'Heart_Rate', 'Body_Temp']\n",
            "7 0.9986266919022148\n",
            "----------------------\n",
            "\n",
            "['Gender', 'Age', 'Weight', 'Duration', 'Heart_Rate']\n",
            "0.9987818458599064\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Best Features : ['Gender', 'Age', 'Weight', 'Duration', 'Heart_Rate']\n",
        "\n",
        "Best Score : 0.9987818458599064"
      ],
      "metadata": {
        "id": "BCSZZF7QflYe"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# using a diffferent df to store\n",
        "X_train_best_features_xgb = X_train[best_features_xgb]"
      ],
      "metadata": {
        "id": "wJ7iYwFmeaGp"
      },
      "execution_count": 47,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# getting the cross val score of xgb with its best features\n",
        "cv_score_xgb = cross_val_score(xgb, X_train_best_features_xgb, y_train, cv=5)\n",
        "print(cv_score_xgb)\n",
        "print(cv_score_xgb.mean())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Wk5fKTP5eaA5",
        "outputId": "a7cd3dfe-660d-410c-b42a-70a5e16172b1"
      },
      "execution_count": 48,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[0.9988524  0.99877922 0.99876739 0.99861853 0.99889169]\n",
            "0.9987818458599064\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# fitting the default model with its best features\n",
        "xgb.fit(X_train_best_features_xgb,y_train)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 254
        },
        "id": "2Ft6pbc4eZ-P",
        "outputId": "aa9ede0c-11c3-4f21-c24b-d62976960387"
      },
      "execution_count": 49,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "XGBRegressor(base_score=None, booster=None, callbacks=None,\n",
              "             colsample_bylevel=None, colsample_bynode=None,\n",
              "             colsample_bytree=None, device=None, early_stopping_rounds=None,\n",
              "             enable_categorical=False, eval_metric=None, feature_types=None,\n",
              "             gamma=None, grow_policy=None, importance_type=None,\n",
              "             interaction_constraints=None, learning_rate=None, max_bin=None,\n",
              "             max_cat_threshold=None, max_cat_to_onehot=None,\n",
              "             max_delta_step=None, max_depth=None, max_leaves=None,\n",
              "             min_child_weight=None, missing=nan, monotone_constraints=None,\n",
              "             multi_strategy=None, n_estimators=None, n_jobs=None,\n",
              "             num_parallel_tree=None, random_state=None, ...)"
            ],
            "text/html": [
              "<style>#sk-container-id-1 {\n",
              "  /* Definition of color scheme common for light and dark mode */\n",
              "  --sklearn-color-text: black;\n",
              "  --sklearn-color-line: gray;\n",
              "  /* Definition of color scheme for unfitted estimators */\n",
              "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
              "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
              "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
              "  --sklearn-color-unfitted-level-3: chocolate;\n",
              "  /* Definition of color scheme for fitted estimators */\n",
              "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
              "  --sklearn-color-fitted-level-1: #d4ebff;\n",
              "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
              "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
              "\n",
              "  /* Specific color for light theme */\n",
              "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
              "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-icon: #696969;\n",
              "\n",
              "  @media (prefers-color-scheme: dark) {\n",
              "    /* Redefinition of color scheme for dark theme */\n",
              "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
              "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-icon: #878787;\n",
              "  }\n",
              "}\n",
              "\n",
              "#sk-container-id-1 {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 pre {\n",
              "  padding: 0;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 input.sk-hidden--visually {\n",
              "  border: 0;\n",
              "  clip: rect(1px 1px 1px 1px);\n",
              "  clip: rect(1px, 1px, 1px, 1px);\n",
              "  height: 1px;\n",
              "  margin: -1px;\n",
              "  overflow: hidden;\n",
              "  padding: 0;\n",
              "  position: absolute;\n",
              "  width: 1px;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-dashed-wrapped {\n",
              "  border: 1px dashed var(--sklearn-color-line);\n",
              "  margin: 0 0.4em 0.5em 0.4em;\n",
              "  box-sizing: border-box;\n",
              "  padding-bottom: 0.4em;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-container {\n",
              "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
              "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
              "     so we also need the `!important` here to be able to override the\n",
              "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
              "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
              "  display: inline-block !important;\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-text-repr-fallback {\n",
              "  display: none;\n",
              "}\n",
              "\n",
              "div.sk-parallel-item,\n",
              "div.sk-serial,\n",
              "div.sk-item {\n",
              "  /* draw centered vertical line to link estimators */\n",
              "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
              "  background-size: 2px 100%;\n",
              "  background-repeat: no-repeat;\n",
              "  background-position: center center;\n",
              "}\n",
              "\n",
              "/* Parallel-specific style estimator block */\n",
              "\n",
              "#sk-container-id-1 div.sk-parallel-item::after {\n",
              "  content: \"\";\n",
              "  width: 100%;\n",
              "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
              "  flex-grow: 1;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-parallel {\n",
              "  display: flex;\n",
              "  align-items: stretch;\n",
              "  justify-content: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-parallel-item {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-parallel-item:first-child::after {\n",
              "  align-self: flex-end;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-parallel-item:last-child::after {\n",
              "  align-self: flex-start;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-parallel-item:only-child::after {\n",
              "  width: 0;\n",
              "}\n",
              "\n",
              "/* Serial-specific style estimator block */\n",
              "\n",
              "#sk-container-id-1 div.sk-serial {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "  align-items: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  padding-right: 1em;\n",
              "  padding-left: 1em;\n",
              "}\n",
              "\n",
              "\n",
              "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
              "clickable and can be expanded/collapsed.\n",
              "- Pipeline and ColumnTransformer use this feature and define the default style\n",
              "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
              "*/\n",
              "\n",
              "/* Pipeline and ColumnTransformer style (default) */\n",
              "\n",
              "#sk-container-id-1 div.sk-toggleable {\n",
              "  /* Default theme specific background. It is overwritten whether we have a\n",
              "  specific estimator or a Pipeline/ColumnTransformer */\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "/* Toggleable label */\n",
              "#sk-container-id-1 label.sk-toggleable__label {\n",
              "  cursor: pointer;\n",
              "  display: block;\n",
              "  width: 100%;\n",
              "  margin-bottom: 0;\n",
              "  padding: 0.5em;\n",
              "  box-sizing: border-box;\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 label.sk-toggleable__label-arrow:before {\n",
              "  /* Arrow on the left of the label */\n",
              "  content: \"▸\";\n",
              "  float: left;\n",
              "  margin-right: 0.25em;\n",
              "  color: var(--sklearn-color-icon);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "/* Toggleable content - dropdown */\n",
              "\n",
              "#sk-container-id-1 div.sk-toggleable__content {\n",
              "  max-height: 0;\n",
              "  max-width: 0;\n",
              "  overflow: hidden;\n",
              "  text-align: left;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-toggleable__content.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-toggleable__content pre {\n",
              "  margin: 0.2em;\n",
              "  border-radius: 0.25em;\n",
              "  color: var(--sklearn-color-text);\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-toggleable__content.fitted pre {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
              "  /* Expand drop-down */\n",
              "  max-height: 200px;\n",
              "  max-width: 100%;\n",
              "  overflow: auto;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
              "  content: \"▾\";\n",
              "}\n",
              "\n",
              "/* Pipeline/ColumnTransformer-specific style */\n",
              "\n",
              "#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator-specific style */\n",
              "\n",
              "/* Colorize estimator box */\n",
              "#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-label label.sk-toggleable__label,\n",
              "#sk-container-id-1 div.sk-label label {\n",
              "  /* The background is the default theme color */\n",
              "  color: var(--sklearn-color-text-on-default-background);\n",
              "}\n",
              "\n",
              "/* On hover, darken the color of the background */\n",
              "#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "/* Label box, darken color on hover, fitted */\n",
              "#sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator label */\n",
              "\n",
              "#sk-container-id-1 div.sk-label label {\n",
              "  font-family: monospace;\n",
              "  font-weight: bold;\n",
              "  display: inline-block;\n",
              "  line-height: 1.2em;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-label-container {\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "/* Estimator-specific */\n",
              "#sk-container-id-1 div.sk-estimator {\n",
              "  font-family: monospace;\n",
              "  border: 1px dotted var(--sklearn-color-border-box);\n",
              "  border-radius: 0.25em;\n",
              "  box-sizing: border-box;\n",
              "  margin-bottom: 0.5em;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-estimator.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "/* on hover */\n",
              "#sk-container-id-1 div.sk-estimator:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-estimator.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
              "\n",
              "/* Common style for \"i\" and \"?\" */\n",
              "\n",
              ".sk-estimator-doc-link,\n",
              "a:link.sk-estimator-doc-link,\n",
              "a:visited.sk-estimator-doc-link {\n",
              "  float: right;\n",
              "  font-size: smaller;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1em;\n",
              "  height: 1em;\n",
              "  width: 1em;\n",
              "  text-decoration: none !important;\n",
              "  margin-left: 1ex;\n",
              "  /* unfitted */\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted,\n",
              "a:link.sk-estimator-doc-link.fitted,\n",
              "a:visited.sk-estimator-doc-link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "/* Span, style for the box shown on hovering the info icon */\n",
              ".sk-estimator-doc-link span {\n",
              "  display: none;\n",
              "  z-index: 9999;\n",
              "  position: relative;\n",
              "  font-weight: normal;\n",
              "  right: .2ex;\n",
              "  padding: .5ex;\n",
              "  margin: .5ex;\n",
              "  width: min-content;\n",
              "  min-width: 20ex;\n",
              "  max-width: 50ex;\n",
              "  color: var(--sklearn-color-text);\n",
              "  box-shadow: 2pt 2pt 4pt #999;\n",
              "  /* unfitted */\n",
              "  background: var(--sklearn-color-unfitted-level-0);\n",
              "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted span {\n",
              "  /* fitted */\n",
              "  background: var(--sklearn-color-fitted-level-0);\n",
              "  border: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link:hover span {\n",
              "  display: block;\n",
              "}\n",
              "\n",
              "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
              "\n",
              "#sk-container-id-1 a.estimator_doc_link {\n",
              "  float: right;\n",
              "  font-size: 1rem;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1rem;\n",
              "  height: 1rem;\n",
              "  width: 1rem;\n",
              "  text-decoration: none;\n",
              "  /* unfitted */\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 a.estimator_doc_link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "#sk-container-id-1 a.estimator_doc_link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 a.estimator_doc_link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>XGBRegressor(base_score=None, booster=None, callbacks=None,\n",
              "             colsample_bylevel=None, colsample_bynode=None,\n",
              "             colsample_bytree=None, device=None, early_stopping_rounds=None,\n",
              "             enable_categorical=False, eval_metric=None, feature_types=None,\n",
              "             gamma=None, grow_policy=None, importance_type=None,\n",
              "             interaction_constraints=None, learning_rate=None, max_bin=None,\n",
              "             max_cat_threshold=None, max_cat_to_onehot=None,\n",
              "             max_delta_step=None, max_depth=None, max_leaves=None,\n",
              "             min_child_weight=None, missing=nan, monotone_constraints=None,\n",
              "             multi_strategy=None, n_estimators=None, n_jobs=None,\n",
              "             num_parallel_tree=None, random_state=None, ...)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;XGBRegressor<span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>XGBRegressor(base_score=None, booster=None, callbacks=None,\n",
              "             colsample_bylevel=None, colsample_bynode=None,\n",
              "             colsample_bytree=None, device=None, early_stopping_rounds=None,\n",
              "             enable_categorical=False, eval_metric=None, feature_types=None,\n",
              "             gamma=None, grow_policy=None, importance_type=None,\n",
              "             interaction_constraints=None, learning_rate=None, max_bin=None,\n",
              "             max_cat_threshold=None, max_cat_to_onehot=None,\n",
              "             max_delta_step=None, max_depth=None, max_leaves=None,\n",
              "             min_child_weight=None, missing=nan, monotone_constraints=None,\n",
              "             multi_strategy=None, n_estimators=None, n_jobs=None,\n",
              "             num_parallel_tree=None, random_state=None, ...)</pre></div> </div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 49
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# taking only best features of xgb to test data\n",
        "X_test_best_features_xgb = X_test[best_features_xgb]"
      ],
      "metadata": {
        "id": "bFKpAppPeZ7L"
      },
      "execution_count": 50,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "best_features_xgb"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Uxank-GGeZ4E",
        "outputId": "52532ebc-15d6-4448-d72a-22b96cb1f003"
      },
      "execution_count": 51,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['Gender', 'Age', 'Weight', 'Duration', 'Heart_Rate']"
            ]
          },
          "metadata": {},
          "execution_count": 51
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# predicting the labels on test data\n",
        "y_predict_xgb = xgb.predict(X_test_best_features_xgb)"
      ],
      "metadata": {
        "id": "E3okJF6YeZ04"
      },
      "execution_count": 52,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#importing mae,mse,rmse,r2 for evaluation\n",
        "from sklearn.metrics import mean_absolute_error, mean_squared_error,root_mean_squared_error, r2_score"
      ],
      "metadata": {
        "id": "j2CPGgAJ2H0Z"
      },
      "execution_count": 55,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# calcuation the mae , mse , rmse , r2\n",
        "mae_xgb = mean_absolute_error(y_test, y_predict_xgb)\n",
        "mse_xgb = mean_squared_error(y_test, y_predict_xgb)\n",
        "rmse_xgb = root_mean_squared_error(y_test, y_predict_xgb)\n",
        "r2_xgb = r2_score(y_test, y_predict_xgb)"
      ],
      "metadata": {
        "id": "MDmpt4BkeZyB"
      },
      "execution_count": 56,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"Mean Absolute Error (MAE):\", mae_xgb)\n",
        "print(\"Mean Squared Error (MSE):\",mse_xgb)\n",
        "print(\"Root Mean Squared Error (RMSE):\" ,rmse_xgb)\n",
        "print(\"R-squared (R2):\", r2_xgb)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1eT9Q0ixg_v_",
        "outputId": "2d9fb906-a20a-4b8e-9c66-21b0080496fd"
      },
      "execution_count": 57,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mean Absolute Error (MAE): 1.3957069020072619\n",
            "Mean Squared Error (MSE): 4.0845372046183215\n",
            "Root Mean Squared Error (RMSE): 2.021023801101393\n",
            "R-squared (R2): 0.9989600519200188\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Hyperparameter Tuning : XG Boost Regressor"
      ],
      "metadata": {
        "id": "BVJn5bblhHz9"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# importing gridsearchcv to check the best hyperparameters\n",
        "from sklearn.model_selection import GridSearchCV"
      ],
      "metadata": {
        "id": "jOfqcdqq2R8L"
      },
      "execution_count": 60,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# parameters for XG Boost Classifier\n",
        "params_xgb = {\n",
        "    'n_estimators': [300, 350, 400],\n",
        "    'learning_rate': [0.01, 0.1, 1],\n",
        "    'max_depth': [1,2,3,4,5],\n",
        "    }"
      ],
      "metadata": {
        "id": "ZcBhvZ5mhLK1"
      },
      "execution_count": 61,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "grid_xgb = GridSearchCV(estimator=xgb, param_grid=params_xgb, cv=5, n_jobs=-1)\n",
        "grid_xgb.fit(X_train_best_features_xgb, y_train)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 134
        },
        "id": "NTwODdi4hTVa",
        "outputId": "954f3f36-6ee2-409d-bda3-96fed6915a3c"
      },
      "execution_count": 62,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "GridSearchCV(cv=5,\n",
              "             estimator=XGBRegressor(base_score=None, booster=None,\n",
              "                                    callbacks=None, colsample_bylevel=None,\n",
              "                                    colsample_bynode=None,\n",
              "                                    colsample_bytree=None, device=None,\n",
              "                                    early_stopping_rounds=None,\n",
              "                                    enable_categorical=False, eval_metric=None,\n",
              "                                    feature_types=None, gamma=None,\n",
              "                                    grow_policy=None, importance_type=None,\n",
              "                                    interaction_constraints=None,\n",
              "                                    learning_rate=None, m...\n",
              "                                    max_cat_threshold=None,\n",
              "                                    max_cat_to_onehot=None, max_delta_step=None,\n",
              "                                    max_depth=None, max_leaves=None,\n",
              "                                    min_child_weight=None, missing=nan,\n",
              "                                    monotone_constraints=None,\n",
              "                                    multi_strategy=None, n_estimators=None,\n",
              "                                    n_jobs=None, num_parallel_tree=None,\n",
              "                                    random_state=None, ...),\n",
              "             n_jobs=-1,\n",
              "             param_grid={'learning_rate': [0.01, 0.1, 1],\n",
              "                         'max_depth': [1, 2, 3, 4, 5],\n",
              "                         'n_estimators': [300, 350, 400]})"
            ],
            "text/html": [
              "<style>#sk-container-id-2 {\n",
              "  /* Definition of color scheme common for light and dark mode */\n",
              "  --sklearn-color-text: black;\n",
              "  --sklearn-color-line: gray;\n",
              "  /* Definition of color scheme for unfitted estimators */\n",
              "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
              "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
              "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
              "  --sklearn-color-unfitted-level-3: chocolate;\n",
              "  /* Definition of color scheme for fitted estimators */\n",
              "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
              "  --sklearn-color-fitted-level-1: #d4ebff;\n",
              "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
              "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
              "\n",
              "  /* Specific color for light theme */\n",
              "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
              "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-icon: #696969;\n",
              "\n",
              "  @media (prefers-color-scheme: dark) {\n",
              "    /* Redefinition of color scheme for dark theme */\n",
              "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
              "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-icon: #878787;\n",
              "  }\n",
              "}\n",
              "\n",
              "#sk-container-id-2 {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 pre {\n",
              "  padding: 0;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 input.sk-hidden--visually {\n",
              "  border: 0;\n",
              "  clip: rect(1px 1px 1px 1px);\n",
              "  clip: rect(1px, 1px, 1px, 1px);\n",
              "  height: 1px;\n",
              "  margin: -1px;\n",
              "  overflow: hidden;\n",
              "  padding: 0;\n",
              "  position: absolute;\n",
              "  width: 1px;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-dashed-wrapped {\n",
              "  border: 1px dashed var(--sklearn-color-line);\n",
              "  margin: 0 0.4em 0.5em 0.4em;\n",
              "  box-sizing: border-box;\n",
              "  padding-bottom: 0.4em;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-container {\n",
              "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
              "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
              "     so we also need the `!important` here to be able to override the\n",
              "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
              "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
              "  display: inline-block !important;\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-text-repr-fallback {\n",
              "  display: none;\n",
              "}\n",
              "\n",
              "div.sk-parallel-item,\n",
              "div.sk-serial,\n",
              "div.sk-item {\n",
              "  /* draw centered vertical line to link estimators */\n",
              "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
              "  background-size: 2px 100%;\n",
              "  background-repeat: no-repeat;\n",
              "  background-position: center center;\n",
              "}\n",
              "\n",
              "/* Parallel-specific style estimator block */\n",
              "\n",
              "#sk-container-id-2 div.sk-parallel-item::after {\n",
              "  content: \"\";\n",
              "  width: 100%;\n",
              "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
              "  flex-grow: 1;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-parallel {\n",
              "  display: flex;\n",
              "  align-items: stretch;\n",
              "  justify-content: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-parallel-item {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-parallel-item:first-child::after {\n",
              "  align-self: flex-end;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-parallel-item:last-child::after {\n",
              "  align-self: flex-start;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-parallel-item:only-child::after {\n",
              "  width: 0;\n",
              "}\n",
              "\n",
              "/* Serial-specific style estimator block */\n",
              "\n",
              "#sk-container-id-2 div.sk-serial {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "  align-items: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  padding-right: 1em;\n",
              "  padding-left: 1em;\n",
              "}\n",
              "\n",
              "\n",
              "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
              "clickable and can be expanded/collapsed.\n",
              "- Pipeline and ColumnTransformer use this feature and define the default style\n",
              "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
              "*/\n",
              "\n",
              "/* Pipeline and ColumnTransformer style (default) */\n",
              "\n",
              "#sk-container-id-2 div.sk-toggleable {\n",
              "  /* Default theme specific background. It is overwritten whether we have a\n",
              "  specific estimator or a Pipeline/ColumnTransformer */\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "/* Toggleable label */\n",
              "#sk-container-id-2 label.sk-toggleable__label {\n",
              "  cursor: pointer;\n",
              "  display: block;\n",
              "  width: 100%;\n",
              "  margin-bottom: 0;\n",
              "  padding: 0.5em;\n",
              "  box-sizing: border-box;\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 label.sk-toggleable__label-arrow:before {\n",
              "  /* Arrow on the left of the label */\n",
              "  content: \"▸\";\n",
              "  float: left;\n",
              "  margin-right: 0.25em;\n",
              "  color: var(--sklearn-color-icon);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "/* Toggleable content - dropdown */\n",
              "\n",
              "#sk-container-id-2 div.sk-toggleable__content {\n",
              "  max-height: 0;\n",
              "  max-width: 0;\n",
              "  overflow: hidden;\n",
              "  text-align: left;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-toggleable__content.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-toggleable__content pre {\n",
              "  margin: 0.2em;\n",
              "  border-radius: 0.25em;\n",
              "  color: var(--sklearn-color-text);\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-toggleable__content.fitted pre {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
              "  /* Expand drop-down */\n",
              "  max-height: 200px;\n",
              "  max-width: 100%;\n",
              "  overflow: auto;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
              "  content: \"▾\";\n",
              "}\n",
              "\n",
              "/* Pipeline/ColumnTransformer-specific style */\n",
              "\n",
              "#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator-specific style */\n",
              "\n",
              "/* Colorize estimator box */\n",
              "#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-label label.sk-toggleable__label,\n",
              "#sk-container-id-2 div.sk-label label {\n",
              "  /* The background is the default theme color */\n",
              "  color: var(--sklearn-color-text-on-default-background);\n",
              "}\n",
              "\n",
              "/* On hover, darken the color of the background */\n",
              "#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "/* Label box, darken color on hover, fitted */\n",
              "#sk-container-id-2 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator label */\n",
              "\n",
              "#sk-container-id-2 div.sk-label label {\n",
              "  font-family: monospace;\n",
              "  font-weight: bold;\n",
              "  display: inline-block;\n",
              "  line-height: 1.2em;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-label-container {\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "/* Estimator-specific */\n",
              "#sk-container-id-2 div.sk-estimator {\n",
              "  font-family: monospace;\n",
              "  border: 1px dotted var(--sklearn-color-border-box);\n",
              "  border-radius: 0.25em;\n",
              "  box-sizing: border-box;\n",
              "  margin-bottom: 0.5em;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-estimator.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "/* on hover */\n",
              "#sk-container-id-2 div.sk-estimator:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-estimator.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
              "\n",
              "/* Common style for \"i\" and \"?\" */\n",
              "\n",
              ".sk-estimator-doc-link,\n",
              "a:link.sk-estimator-doc-link,\n",
              "a:visited.sk-estimator-doc-link {\n",
              "  float: right;\n",
              "  font-size: smaller;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1em;\n",
              "  height: 1em;\n",
              "  width: 1em;\n",
              "  text-decoration: none !important;\n",
              "  margin-left: 1ex;\n",
              "  /* unfitted */\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted,\n",
              "a:link.sk-estimator-doc-link.fitted,\n",
              "a:visited.sk-estimator-doc-link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "/* Span, style for the box shown on hovering the info icon */\n",
              ".sk-estimator-doc-link span {\n",
              "  display: none;\n",
              "  z-index: 9999;\n",
              "  position: relative;\n",
              "  font-weight: normal;\n",
              "  right: .2ex;\n",
              "  padding: .5ex;\n",
              "  margin: .5ex;\n",
              "  width: min-content;\n",
              "  min-width: 20ex;\n",
              "  max-width: 50ex;\n",
              "  color: var(--sklearn-color-text);\n",
              "  box-shadow: 2pt 2pt 4pt #999;\n",
              "  /* unfitted */\n",
              "  background: var(--sklearn-color-unfitted-level-0);\n",
              "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted span {\n",
              "  /* fitted */\n",
              "  background: var(--sklearn-color-fitted-level-0);\n",
              "  border: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link:hover span {\n",
              "  display: block;\n",
              "}\n",
              "\n",
              "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
              "\n",
              "#sk-container-id-2 a.estimator_doc_link {\n",
              "  float: right;\n",
              "  font-size: 1rem;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1rem;\n",
              "  height: 1rem;\n",
              "  width: 1rem;\n",
              "  text-decoration: none;\n",
              "  /* unfitted */\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 a.estimator_doc_link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "#sk-container-id-2 a.estimator_doc_link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 a.estimator_doc_link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(cv=5,\n",
              "             estimator=XGBRegressor(base_score=None, booster=None,\n",
              "                                    callbacks=None, colsample_bylevel=None,\n",
              "                                    colsample_bynode=None,\n",
              "                                    colsample_bytree=None, device=None,\n",
              "                                    early_stopping_rounds=None,\n",
              "                                    enable_categorical=False, eval_metric=None,\n",
              "                                    feature_types=None, gamma=None,\n",
              "                                    grow_policy=None, importance_type=None,\n",
              "                                    interaction_constraints=None,\n",
              "                                    learning_rate=None, m...\n",
              "                                    max_cat_threshold=None,\n",
              "                                    max_cat_to_onehot=None, max_delta_step=None,\n",
              "                                    max_depth=None, max_leaves=None,\n",
              "                                    min_child_weight=None, missing=nan,\n",
              "                                    monotone_constraints=None,\n",
              "                                    multi_strategy=None, n_estimators=None,\n",
              "                                    n_jobs=None, num_parallel_tree=None,\n",
              "                                    random_state=None, ...),\n",
              "             n_jobs=-1,\n",
              "             param_grid={&#x27;learning_rate&#x27;: [0.01, 0.1, 1],\n",
              "                         &#x27;max_depth&#x27;: [1, 2, 3, 4, 5],\n",
              "                         &#x27;n_estimators&#x27;: [300, 350, 400]})</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" ><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;GridSearchCV<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.model_selection.GridSearchCV.html\">?<span>Documentation for GridSearchCV</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>GridSearchCV(cv=5,\n",
              "             estimator=XGBRegressor(base_score=None, booster=None,\n",
              "                                    callbacks=None, colsample_bylevel=None,\n",
              "                                    colsample_bynode=None,\n",
              "                                    colsample_bytree=None, device=None,\n",
              "                                    early_stopping_rounds=None,\n",
              "                                    enable_categorical=False, eval_metric=None,\n",
              "                                    feature_types=None, gamma=None,\n",
              "                                    grow_policy=None, importance_type=None,\n",
              "                                    interaction_constraints=None,\n",
              "                                    learning_rate=None, m...\n",
              "                                    max_cat_threshold=None,\n",
              "                                    max_cat_to_onehot=None, max_delta_step=None,\n",
              "                                    max_depth=None, max_leaves=None,\n",
              "                                    min_child_weight=None, missing=nan,\n",
              "                                    monotone_constraints=None,\n",
              "                                    multi_strategy=None, n_estimators=None,\n",
              "                                    n_jobs=None, num_parallel_tree=None,\n",
              "                                    random_state=None, ...),\n",
              "             n_jobs=-1,\n",
              "             param_grid={&#x27;learning_rate&#x27;: [0.01, 0.1, 1],\n",
              "                         &#x27;max_depth&#x27;: [1, 2, 3, 4, 5],\n",
              "                         &#x27;n_estimators&#x27;: [300, 350, 400]})</pre></div> </div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" ><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">best_estimator_: XGBRegressor</label><div class=\"sk-toggleable__content fitted\"><pre>XGBRegressor(base_score=None, booster=None, callbacks=None,\n",
              "             colsample_bylevel=None, colsample_bynode=None,\n",
              "             colsample_bytree=None, device=None, early_stopping_rounds=None,\n",
              "             enable_categorical=False, eval_metric=None, feature_types=None,\n",
              "             gamma=None, grow_policy=None, importance_type=None,\n",
              "             interaction_constraints=None, learning_rate=0.1, max_bin=None,\n",
              "             max_cat_threshold=None, max_cat_to_onehot=None,\n",
              "             max_delta_step=None, max_depth=5, max_leaves=None,\n",
              "             min_child_weight=None, missing=nan, monotone_constraints=None,\n",
              "             multi_strategy=None, n_estimators=400, n_jobs=None,\n",
              "             num_parallel_tree=None, random_state=None, ...)</pre></div> </div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" ><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">XGBRegressor</label><div class=\"sk-toggleable__content fitted\"><pre>XGBRegressor(base_score=None, booster=None, callbacks=None,\n",
              "             colsample_bylevel=None, colsample_bynode=None,\n",
              "             colsample_bytree=None, device=None, early_stopping_rounds=None,\n",
              "             enable_categorical=False, eval_metric=None, feature_types=None,\n",
              "             gamma=None, grow_policy=None, importance_type=None,\n",
              "             interaction_constraints=None, learning_rate=0.1, max_bin=None,\n",
              "             max_cat_threshold=None, max_cat_to_onehot=None,\n",
              "             max_delta_step=None, max_depth=5, max_leaves=None,\n",
              "             min_child_weight=None, missing=nan, monotone_constraints=None,\n",
              "             multi_strategy=None, n_estimators=400, n_jobs=None,\n",
              "             num_parallel_tree=None, random_state=None, ...)</pre></div> </div></div></div></div></div></div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 62
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# getting the best hyperparameters\n",
        "print(grid_xgb.best_estimator_, grid_xgb.best_params_, grid_xgb.best_score_)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dtQ0gNz9hTPz",
        "outputId": "ae80a2ce-4b2f-414c-c2a3-7826dcf4d9cb"
      },
      "execution_count": 63,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "XGBRegressor(base_score=None, booster=None, callbacks=None,\n",
            "             colsample_bylevel=None, colsample_bynode=None,\n",
            "             colsample_bytree=None, device=None, early_stopping_rounds=None,\n",
            "             enable_categorical=False, eval_metric=None, feature_types=None,\n",
            "             gamma=None, grow_policy=None, importance_type=None,\n",
            "             interaction_constraints=None, learning_rate=0.1, max_bin=None,\n",
            "             max_cat_threshold=None, max_cat_to_onehot=None,\n",
            "             max_delta_step=None, max_depth=5, max_leaves=None,\n",
            "             min_child_weight=None, missing=nan, monotone_constraints=None,\n",
            "             multi_strategy=None, n_estimators=400, n_jobs=None,\n",
            "             num_parallel_tree=None, random_state=None, ...) {'learning_rate': 0.1, 'max_depth': 5, 'n_estimators': 400} 0.9994537507592913\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# testing grid_xgb model on test data\n",
        "y_predict_grid_xgb = grid_xgb.predict(X_test_best_features_xgb)"
      ],
      "metadata": {
        "id": "Uv7ewH6lhTNE"
      },
      "execution_count": 64,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# calcuation the mae , mse , rmse , r2\n",
        "mae_grid_xgb = mean_absolute_error(y_test, y_predict_grid_xgb)\n",
        "mse_grid_xgb = mean_squared_error(y_test, y_predict_grid_xgb)\n",
        "rmse_grid_xgb = root_mean_squared_error(y_test, y_predict_grid_xgb)\n",
        "r2_grid_xgb = r2_score(y_test, y_predict_grid_xgb)\n",
        "\n",
        "print(\"Mean Absolute Error (MAE):\", mae_grid_xgb)\n",
        "print(\"Mean Squared Error (MSE):\",mse_grid_xgb)\n",
        "print(\"Root Mean Squared Error (RMSE):\" ,rmse_grid_xgb)\n",
        "print(\"R-squared (R2):\", r2_grid_xgb)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "MjtPfFORhvjg",
        "outputId": "5114e91a-9de2-4ac1-d048-37fdcf148ee4"
      },
      "execution_count": 65,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mean Absolute Error (MAE): 0.943971168388923\n",
            "Mean Squared Error (MSE): 1.7806869162044179\n",
            "Root Mean Squared Error (RMSE): 1.3344238143125362\n",
            "R-squared (R2): 0.9995466262524282\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Best Parameters : {'learning_rate': 0.1, 'max_depth': 4, 'n_estimators': 400}"
      ],
      "metadata": {
        "id": "e9GmkYQOiCLb"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Final Model : XG Boost Regressor"
      ],
      "metadata": {
        "id": "wvfvPzAmiERz"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# loading the model with best hyper parameter\n",
        "model1 = XGBRegressor(learning_rate= 0.1, max_depth= 4, n_estimators= 400)"
      ],
      "metadata": {
        "id": "Llp-Ez9zhvgd"
      },
      "execution_count": 66,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# fitting the training data with best features of xgb\n",
        "model1.fit(X_train_best_features_xgb,y_train)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 254
        },
        "id": "0vB64I1EhvdR",
        "outputId": "6fd3a1a2-7ba9-410b-b4e1-bf230cb54b08"
      },
      "execution_count": 67,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "XGBRegressor(base_score=None, booster=None, callbacks=None,\n",
              "             colsample_bylevel=None, colsample_bynode=None,\n",
              "             colsample_bytree=None, device=None, early_stopping_rounds=None,\n",
              "             enable_categorical=False, eval_metric=None, feature_types=None,\n",
              "             gamma=None, grow_policy=None, importance_type=None,\n",
              "             interaction_constraints=None, learning_rate=0.1, max_bin=None,\n",
              "             max_cat_threshold=None, max_cat_to_onehot=None,\n",
              "             max_delta_step=None, max_depth=4, max_leaves=None,\n",
              "             min_child_weight=None, missing=nan, monotone_constraints=None,\n",
              "             multi_strategy=None, n_estimators=400, n_jobs=None,\n",
              "             num_parallel_tree=None, random_state=None, ...)"
            ],
            "text/html": [
              "<style>#sk-container-id-3 {\n",
              "  /* Definition of color scheme common for light and dark mode */\n",
              "  --sklearn-color-text: black;\n",
              "  --sklearn-color-line: gray;\n",
              "  /* Definition of color scheme for unfitted estimators */\n",
              "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
              "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
              "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
              "  --sklearn-color-unfitted-level-3: chocolate;\n",
              "  /* Definition of color scheme for fitted estimators */\n",
              "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
              "  --sklearn-color-fitted-level-1: #d4ebff;\n",
              "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
              "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
              "\n",
              "  /* Specific color for light theme */\n",
              "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
              "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-icon: #696969;\n",
              "\n",
              "  @media (prefers-color-scheme: dark) {\n",
              "    /* Redefinition of color scheme for dark theme */\n",
              "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
              "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-icon: #878787;\n",
              "  }\n",
              "}\n",
              "\n",
              "#sk-container-id-3 {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "#sk-container-id-3 pre {\n",
              "  padding: 0;\n",
              "}\n",
              "\n",
              "#sk-container-id-3 input.sk-hidden--visually {\n",
              "  border: 0;\n",
              "  clip: rect(1px 1px 1px 1px);\n",
              "  clip: rect(1px, 1px, 1px, 1px);\n",
              "  height: 1px;\n",
              "  margin: -1px;\n",
              "  overflow: hidden;\n",
              "  padding: 0;\n",
              "  position: absolute;\n",
              "  width: 1px;\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-dashed-wrapped {\n",
              "  border: 1px dashed var(--sklearn-color-line);\n",
              "  margin: 0 0.4em 0.5em 0.4em;\n",
              "  box-sizing: border-box;\n",
              "  padding-bottom: 0.4em;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-container {\n",
              "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
              "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
              "     so we also need the `!important` here to be able to override the\n",
              "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
              "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
              "  display: inline-block !important;\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-text-repr-fallback {\n",
              "  display: none;\n",
              "}\n",
              "\n",
              "div.sk-parallel-item,\n",
              "div.sk-serial,\n",
              "div.sk-item {\n",
              "  /* draw centered vertical line to link estimators */\n",
              "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
              "  background-size: 2px 100%;\n",
              "  background-repeat: no-repeat;\n",
              "  background-position: center center;\n",
              "}\n",
              "\n",
              "/* Parallel-specific style estimator block */\n",
              "\n",
              "#sk-container-id-3 div.sk-parallel-item::after {\n",
              "  content: \"\";\n",
              "  width: 100%;\n",
              "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
              "  flex-grow: 1;\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-parallel {\n",
              "  display: flex;\n",
              "  align-items: stretch;\n",
              "  justify-content: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-parallel-item {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-parallel-item:first-child::after {\n",
              "  align-self: flex-end;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-parallel-item:last-child::after {\n",
              "  align-self: flex-start;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-parallel-item:only-child::after {\n",
              "  width: 0;\n",
              "}\n",
              "\n",
              "/* Serial-specific style estimator block */\n",
              "\n",
              "#sk-container-id-3 div.sk-serial {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "  align-items: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  padding-right: 1em;\n",
              "  padding-left: 1em;\n",
              "}\n",
              "\n",
              "\n",
              "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
              "clickable and can be expanded/collapsed.\n",
              "- Pipeline and ColumnTransformer use this feature and define the default style\n",
              "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
              "*/\n",
              "\n",
              "/* Pipeline and ColumnTransformer style (default) */\n",
              "\n",
              "#sk-container-id-3 div.sk-toggleable {\n",
              "  /* Default theme specific background. It is overwritten whether we have a\n",
              "  specific estimator or a Pipeline/ColumnTransformer */\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "/* Toggleable label */\n",
              "#sk-container-id-3 label.sk-toggleable__label {\n",
              "  cursor: pointer;\n",
              "  display: block;\n",
              "  width: 100%;\n",
              "  margin-bottom: 0;\n",
              "  padding: 0.5em;\n",
              "  box-sizing: border-box;\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "#sk-container-id-3 label.sk-toggleable__label-arrow:before {\n",
              "  /* Arrow on the left of the label */\n",
              "  content: \"▸\";\n",
              "  float: left;\n",
              "  margin-right: 0.25em;\n",
              "  color: var(--sklearn-color-icon);\n",
              "}\n",
              "\n",
              "#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "/* Toggleable content - dropdown */\n",
              "\n",
              "#sk-container-id-3 div.sk-toggleable__content {\n",
              "  max-height: 0;\n",
              "  max-width: 0;\n",
              "  overflow: hidden;\n",
              "  text-align: left;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-toggleable__content.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-toggleable__content pre {\n",
              "  margin: 0.2em;\n",
              "  border-radius: 0.25em;\n",
              "  color: var(--sklearn-color-text);\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-toggleable__content.fitted pre {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
              "  /* Expand drop-down */\n",
              "  max-height: 200px;\n",
              "  max-width: 100%;\n",
              "  overflow: auto;\n",
              "}\n",
              "\n",
              "#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
              "  content: \"▾\";\n",
              "}\n",
              "\n",
              "/* Pipeline/ColumnTransformer-specific style */\n",
              "\n",
              "#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator-specific style */\n",
              "\n",
              "/* Colorize estimator box */\n",
              "#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-label label.sk-toggleable__label,\n",
              "#sk-container-id-3 div.sk-label label {\n",
              "  /* The background is the default theme color */\n",
              "  color: var(--sklearn-color-text-on-default-background);\n",
              "}\n",
              "\n",
              "/* On hover, darken the color of the background */\n",
              "#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "/* Label box, darken color on hover, fitted */\n",
              "#sk-container-id-3 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator label */\n",
              "\n",
              "#sk-container-id-3 div.sk-label label {\n",
              "  font-family: monospace;\n",
              "  font-weight: bold;\n",
              "  display: inline-block;\n",
              "  line-height: 1.2em;\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-label-container {\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "/* Estimator-specific */\n",
              "#sk-container-id-3 div.sk-estimator {\n",
              "  font-family: monospace;\n",
              "  border: 1px dotted var(--sklearn-color-border-box);\n",
              "  border-radius: 0.25em;\n",
              "  box-sizing: border-box;\n",
              "  margin-bottom: 0.5em;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-estimator.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "/* on hover */\n",
              "#sk-container-id-3 div.sk-estimator:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-estimator.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
              "\n",
              "/* Common style for \"i\" and \"?\" */\n",
              "\n",
              ".sk-estimator-doc-link,\n",
              "a:link.sk-estimator-doc-link,\n",
              "a:visited.sk-estimator-doc-link {\n",
              "  float: right;\n",
              "  font-size: smaller;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1em;\n",
              "  height: 1em;\n",
              "  width: 1em;\n",
              "  text-decoration: none !important;\n",
              "  margin-left: 1ex;\n",
              "  /* unfitted */\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted,\n",
              "a:link.sk-estimator-doc-link.fitted,\n",
              "a:visited.sk-estimator-doc-link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "/* Span, style for the box shown on hovering the info icon */\n",
              ".sk-estimator-doc-link span {\n",
              "  display: none;\n",
              "  z-index: 9999;\n",
              "  position: relative;\n",
              "  font-weight: normal;\n",
              "  right: .2ex;\n",
              "  padding: .5ex;\n",
              "  margin: .5ex;\n",
              "  width: min-content;\n",
              "  min-width: 20ex;\n",
              "  max-width: 50ex;\n",
              "  color: var(--sklearn-color-text);\n",
              "  box-shadow: 2pt 2pt 4pt #999;\n",
              "  /* unfitted */\n",
              "  background: var(--sklearn-color-unfitted-level-0);\n",
              "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted span {\n",
              "  /* fitted */\n",
              "  background: var(--sklearn-color-fitted-level-0);\n",
              "  border: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link:hover span {\n",
              "  display: block;\n",
              "}\n",
              "\n",
              "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
              "\n",
              "#sk-container-id-3 a.estimator_doc_link {\n",
              "  float: right;\n",
              "  font-size: 1rem;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1rem;\n",
              "  height: 1rem;\n",
              "  width: 1rem;\n",
              "  text-decoration: none;\n",
              "  /* unfitted */\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "}\n",
              "\n",
              "#sk-container-id-3 a.estimator_doc_link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "#sk-container-id-3 a.estimator_doc_link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "#sk-container-id-3 a.estimator_doc_link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>XGBRegressor(base_score=None, booster=None, callbacks=None,\n",
              "             colsample_bylevel=None, colsample_bynode=None,\n",
              "             colsample_bytree=None, device=None, early_stopping_rounds=None,\n",
              "             enable_categorical=False, eval_metric=None, feature_types=None,\n",
              "             gamma=None, grow_policy=None, importance_type=None,\n",
              "             interaction_constraints=None, learning_rate=0.1, max_bin=None,\n",
              "             max_cat_threshold=None, max_cat_to_onehot=None,\n",
              "             max_delta_step=None, max_depth=4, max_leaves=None,\n",
              "             min_child_weight=None, missing=nan, monotone_constraints=None,\n",
              "             multi_strategy=None, n_estimators=400, n_jobs=None,\n",
              "             num_parallel_tree=None, random_state=None, ...)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" checked><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;XGBRegressor<span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>XGBRegressor(base_score=None, booster=None, callbacks=None,\n",
              "             colsample_bylevel=None, colsample_bynode=None,\n",
              "             colsample_bytree=None, device=None, early_stopping_rounds=None,\n",
              "             enable_categorical=False, eval_metric=None, feature_types=None,\n",
              "             gamma=None, grow_policy=None, importance_type=None,\n",
              "             interaction_constraints=None, learning_rate=0.1, max_bin=None,\n",
              "             max_cat_threshold=None, max_cat_to_onehot=None,\n",
              "             max_delta_step=None, max_depth=4, max_leaves=None,\n",
              "             min_child_weight=None, missing=nan, monotone_constraints=None,\n",
              "             multi_strategy=None, n_estimators=400, n_jobs=None,\n",
              "             num_parallel_tree=None, random_state=None, ...)</pre></div> </div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 67
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Model Evaluation : XG Boost Regressor"
      ],
      "metadata": {
        "id": "xjntWixpiPtT"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# predicting the train data\n",
        "y_predict_train_model1 = model1.predict(X_train_best_features_xgb)"
      ],
      "metadata": {
        "id": "pj7vSZbGhvZf"
      },
      "execution_count": 68,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# calcuation the mae , mse , rmse , r2\n",
        "mae_train_model1 = mean_absolute_error(y_train, y_predict_train_model1)\n",
        "mse_train_model1 = mean_squared_error(y_train, y_predict_train_model1)\n",
        "rmse_train_model1 = root_mean_squared_error(y_train, y_predict_train_model1)\n",
        "r2_train_model1 = r2_score(y_train, y_predict_train_model1)"
      ],
      "metadata": {
        "id": "wVE1U1RJhvUr"
      },
      "execution_count": 69,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"Model1 on Training Data:\")\n",
        "print(\"Mean Absolute Error (MAE):\", mae_train_model1)\n",
        "print(\"Mean Squared Error (MSE):\",mse_train_model1)\n",
        "print(\"Root Mean Squared Error (RMSE):\" ,rmse_train_model1)\n",
        "print(\"R-squared (R2):\", r2_train_model1)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CUTxxg8ci5kW",
        "outputId": "7b6db7fb-369e-43a2-a4b6-f38fe1fc212c"
      },
      "execution_count": 70,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model1 on Training Data:\n",
            "Mean Absolute Error (MAE): 0.9744055098046859\n",
            "Mean Squared Error (MSE): 1.6841850380140206\n",
            "Root Mean Squared Error (RMSE): 1.2977615489811758\n",
            "R-squared (R2): 0.9995674753443553\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# predicting the test data\n",
        "y_predict_test_model1 = model1.predict(X_test_best_features_xgb)"
      ],
      "metadata": {
        "id": "MkIieKgXi9_P"
      },
      "execution_count": 71,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# calcuation the mae , mse , rmse , r2\n",
        "mae_test_model1 = mean_absolute_error(y_test, y_predict_test_model1)\n",
        "mse_test_model1 = mean_squared_error(y_test, y_predict_test_model1)\n",
        "rmse_test_model1 = root_mean_squared_error(y_test, y_predict_test_model1)\n",
        "r2_test_model1 = r2_score(y_test, y_predict_test_model1)"
      ],
      "metadata": {
        "id": "FulZCZU-i98L"
      },
      "execution_count": 72,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"Model1 on Test Data:\")\n",
        "print(\"Mean Absolute Error (MAE):\", mae_test_model1)\n",
        "print(\"Mean Squared Error (MSE):\",mse_test_model1)\n",
        "print(\"Root Mean Squared Error (RMSE):\" ,rmse_test_model1)\n",
        "print(\"R-squared (R2):\", r2_test_model1)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "aYE3MLPdi94_",
        "outputId": "0ebd8afa-c1fd-449c-f7d8-82fa0c10f027"
      },
      "execution_count": 73,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model1 on Test Data:\n",
            "Mean Absolute Error (MAE): 1.14324543261528\n",
            "Mean Squared Error (MSE): 2.5198672216040787\n",
            "Root Mean Squared Error (RMSE): 1.5874089648241498\n",
            "R-squared (R2): 0.9993584264391198\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#graphical analysis of actual price and predicted price with different colors for actual and predicted price\n",
        "\n",
        "indices = range(len(y_test))\n",
        "plt.figure(figsize=(12, 6))\n",
        "plt.plot(indices, y_test, color='blue', label='Actual Price',alpha=0.4)\n",
        "plt.plot(indices, y_predict_test_model1, color='orange', label='Predicted Price')\n",
        "plt.xlabel('Index')\n",
        "plt.ylabel('Price')\n",
        "plt.title('Actual vs Predicted Prices')\n",
        "plt.legend()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 657
        },
        "id": "FsiLcd1vjejU",
        "outputId": "3c1a27f7-c049-4cee-ddd7-e1df16b0cd32"
      },
      "execution_count": 74,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 2400x1200 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "a09rjVXt1XOi"
      },
      "execution_count": 74,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# 2. Random Forest Regressor"
      ],
      "metadata": {
        "id": "KWfPNaEqxjDB"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "RandomForestRegressor Model as the 2nd highest r2 score based on cross validation score according to its default hyperparameters\n",
        "\n",
        "RandomForestRegressor() = 0.997552828144984"
      ],
      "metadata": {
        "id": "ChtNYf4axoXX"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# loading the Random Forest Regressor model\n",
        "rfr = RandomForestRegressor()"
      ],
      "metadata": {
        "id": "Os5jDEmysEtq"
      },
      "execution_count": 75,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# getting the best features of RFC by calling the feature selection function\n",
        "best_score_rfr = 0\n",
        "best_features_rfr = None\n",
        "for i in range(X_train.shape[1]):\n",
        "    col , score = find_best_feature(i+1,rfr,X_train,y_train)\n",
        "    if best_score_rfr < score:\n",
        "        best_score_rfr = score\n",
        "        best_features_rfr = col\n",
        "print(best_features_rfr)\n",
        "print(best_score_rfr)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LvrrNVDisEqE",
        "outputId": "1f55ca18-bd41-44a5-eeca-42b94bd38946"
      },
      "execution_count": 76,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Selected columns:  ['Duration']\n",
            "1 0.9288488860473706\n",
            "----------------------\n",
            "\n",
            "Selected columns:  ['Duration', 'Heart_Rate']\n",
            "2 0.9593292940553007\n",
            "----------------------\n",
            "\n",
            "Selected columns:  ['Age', 'Duration', 'Heart_Rate']\n",
            "3 0.9842100328249039\n",
            "----------------------\n",
            "\n",
            "Selected columns:  ['Gender', 'Age', 'Duration', 'Heart_Rate']\n",
            "4 0.9961800608900973\n",
            "----------------------\n",
            "\n",
            "Selected columns:  ['Gender', 'Age', 'Weight', 'Duration', 'Heart_Rate']\n",
            "5 0.9978848062336272\n",
            "----------------------\n",
            "\n",
            "Selected columns:  ['Gender', 'Age', 'Height', 'Weight', 'Duration', 'Heart_Rate']\n",
            "6 0.997737264972856\n",
            "----------------------\n",
            "\n",
            "Selected columns:  ['Gender', 'Age', 'Height', 'Weight', 'Duration', 'Heart_Rate', 'Body_Temp']\n",
            "7 0.9975446089599134\n",
            "----------------------\n",
            "\n",
            "['Gender', 'Age', 'Weight', 'Duration', 'Heart_Rate']\n",
            "0.9978848062336272\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Best Features : ['Gender', 'Age', 'Weight', 'Duration', 'Heart_Rate']\n",
        "\n",
        "Best Score : 0.9978848062336272"
      ],
      "metadata": {
        "id": "b-vL9dvpfsL5"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# using a diffferent df to store\n",
        "X_train_best_features_rfr = X_train[best_features_rfr]"
      ],
      "metadata": {
        "id": "eTXcKfXOyaq5"
      },
      "execution_count": 77,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# getting the cross val score of rfr with its best features\n",
        "cv_score_rfr = cross_val_score(rfr, X_train_best_features_rfr, y_train, cv=5)\n",
        "print(cv_score_rfr)\n",
        "print(cv_score_rfr.mean())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ROimsxFByam1",
        "outputId": "303ca977-44eb-4b55-c123-3cbda66dc238"
      },
      "execution_count": 78,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[0.99780869 0.9974266  0.99813539 0.99809355 0.99783608]\n",
            "0.9978600596239522\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# fitting the default model with its best features\n",
        "rfr.fit(X_train_best_features_rfr,y_train)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 80
        },
        "id": "6Bftb0x0bAIO",
        "outputId": "76e6bc36-f5ca-4c1a-d7dc-96794ea51bb9"
      },
      "execution_count": 79,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "RandomForestRegressor()"
            ],
            "text/html": [
              "<style>#sk-container-id-4 {\n",
              "  /* Definition of color scheme common for light and dark mode */\n",
              "  --sklearn-color-text: black;\n",
              "  --sklearn-color-line: gray;\n",
              "  /* Definition of color scheme for unfitted estimators */\n",
              "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
              "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
              "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
              "  --sklearn-color-unfitted-level-3: chocolate;\n",
              "  /* Definition of color scheme for fitted estimators */\n",
              "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
              "  --sklearn-color-fitted-level-1: #d4ebff;\n",
              "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
              "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
              "\n",
              "  /* Specific color for light theme */\n",
              "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
              "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-icon: #696969;\n",
              "\n",
              "  @media (prefers-color-scheme: dark) {\n",
              "    /* Redefinition of color scheme for dark theme */\n",
              "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
              "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-icon: #878787;\n",
              "  }\n",
              "}\n",
              "\n",
              "#sk-container-id-4 {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "#sk-container-id-4 pre {\n",
              "  padding: 0;\n",
              "}\n",
              "\n",
              "#sk-container-id-4 input.sk-hidden--visually {\n",
              "  border: 0;\n",
              "  clip: rect(1px 1px 1px 1px);\n",
              "  clip: rect(1px, 1px, 1px, 1px);\n",
              "  height: 1px;\n",
              "  margin: -1px;\n",
              "  overflow: hidden;\n",
              "  padding: 0;\n",
              "  position: absolute;\n",
              "  width: 1px;\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-dashed-wrapped {\n",
              "  border: 1px dashed var(--sklearn-color-line);\n",
              "  margin: 0 0.4em 0.5em 0.4em;\n",
              "  box-sizing: border-box;\n",
              "  padding-bottom: 0.4em;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-container {\n",
              "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
              "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
              "     so we also need the `!important` here to be able to override the\n",
              "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
              "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
              "  display: inline-block !important;\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-text-repr-fallback {\n",
              "  display: none;\n",
              "}\n",
              "\n",
              "div.sk-parallel-item,\n",
              "div.sk-serial,\n",
              "div.sk-item {\n",
              "  /* draw centered vertical line to link estimators */\n",
              "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
              "  background-size: 2px 100%;\n",
              "  background-repeat: no-repeat;\n",
              "  background-position: center center;\n",
              "}\n",
              "\n",
              "/* Parallel-specific style estimator block */\n",
              "\n",
              "#sk-container-id-4 div.sk-parallel-item::after {\n",
              "  content: \"\";\n",
              "  width: 100%;\n",
              "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
              "  flex-grow: 1;\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-parallel {\n",
              "  display: flex;\n",
              "  align-items: stretch;\n",
              "  justify-content: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-parallel-item {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-parallel-item:first-child::after {\n",
              "  align-self: flex-end;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-parallel-item:last-child::after {\n",
              "  align-self: flex-start;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-parallel-item:only-child::after {\n",
              "  width: 0;\n",
              "}\n",
              "\n",
              "/* Serial-specific style estimator block */\n",
              "\n",
              "#sk-container-id-4 div.sk-serial {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "  align-items: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  padding-right: 1em;\n",
              "  padding-left: 1em;\n",
              "}\n",
              "\n",
              "\n",
              "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
              "clickable and can be expanded/collapsed.\n",
              "- Pipeline and ColumnTransformer use this feature and define the default style\n",
              "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
              "*/\n",
              "\n",
              "/* Pipeline and ColumnTransformer style (default) */\n",
              "\n",
              "#sk-container-id-4 div.sk-toggleable {\n",
              "  /* Default theme specific background. It is overwritten whether we have a\n",
              "  specific estimator or a Pipeline/ColumnTransformer */\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "/* Toggleable label */\n",
              "#sk-container-id-4 label.sk-toggleable__label {\n",
              "  cursor: pointer;\n",
              "  display: block;\n",
              "  width: 100%;\n",
              "  margin-bottom: 0;\n",
              "  padding: 0.5em;\n",
              "  box-sizing: border-box;\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "#sk-container-id-4 label.sk-toggleable__label-arrow:before {\n",
              "  /* Arrow on the left of the label */\n",
              "  content: \"▸\";\n",
              "  float: left;\n",
              "  margin-right: 0.25em;\n",
              "  color: var(--sklearn-color-icon);\n",
              "}\n",
              "\n",
              "#sk-container-id-4 label.sk-toggleable__label-arrow:hover:before {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "/* Toggleable content - dropdown */\n",
              "\n",
              "#sk-container-id-4 div.sk-toggleable__content {\n",
              "  max-height: 0;\n",
              "  max-width: 0;\n",
              "  overflow: hidden;\n",
              "  text-align: left;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-toggleable__content.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-toggleable__content pre {\n",
              "  margin: 0.2em;\n",
              "  border-radius: 0.25em;\n",
              "  color: var(--sklearn-color-text);\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-toggleable__content.fitted pre {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-4 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
              "  /* Expand drop-down */\n",
              "  max-height: 200px;\n",
              "  max-width: 100%;\n",
              "  overflow: auto;\n",
              "}\n",
              "\n",
              "#sk-container-id-4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
              "  content: \"▾\";\n",
              "}\n",
              "\n",
              "/* Pipeline/ColumnTransformer-specific style */\n",
              "\n",
              "#sk-container-id-4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator-specific style */\n",
              "\n",
              "/* Colorize estimator box */\n",
              "#sk-container-id-4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-label label.sk-toggleable__label,\n",
              "#sk-container-id-4 div.sk-label label {\n",
              "  /* The background is the default theme color */\n",
              "  color: var(--sklearn-color-text-on-default-background);\n",
              "}\n",
              "\n",
              "/* On hover, darken the color of the background */\n",
              "#sk-container-id-4 div.sk-label:hover label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "/* Label box, darken color on hover, fitted */\n",
              "#sk-container-id-4 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator label */\n",
              "\n",
              "#sk-container-id-4 div.sk-label label {\n",
              "  font-family: monospace;\n",
              "  font-weight: bold;\n",
              "  display: inline-block;\n",
              "  line-height: 1.2em;\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-label-container {\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "/* Estimator-specific */\n",
              "#sk-container-id-4 div.sk-estimator {\n",
              "  font-family: monospace;\n",
              "  border: 1px dotted var(--sklearn-color-border-box);\n",
              "  border-radius: 0.25em;\n",
              "  box-sizing: border-box;\n",
              "  margin-bottom: 0.5em;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-estimator.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "/* on hover */\n",
              "#sk-container-id-4 div.sk-estimator:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-estimator.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
              "\n",
              "/* Common style for \"i\" and \"?\" */\n",
              "\n",
              ".sk-estimator-doc-link,\n",
              "a:link.sk-estimator-doc-link,\n",
              "a:visited.sk-estimator-doc-link {\n",
              "  float: right;\n",
              "  font-size: smaller;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1em;\n",
              "  height: 1em;\n",
              "  width: 1em;\n",
              "  text-decoration: none !important;\n",
              "  margin-left: 1ex;\n",
              "  /* unfitted */\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted,\n",
              "a:link.sk-estimator-doc-link.fitted,\n",
              "a:visited.sk-estimator-doc-link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "/* Span, style for the box shown on hovering the info icon */\n",
              ".sk-estimator-doc-link span {\n",
              "  display: none;\n",
              "  z-index: 9999;\n",
              "  position: relative;\n",
              "  font-weight: normal;\n",
              "  right: .2ex;\n",
              "  padding: .5ex;\n",
              "  margin: .5ex;\n",
              "  width: min-content;\n",
              "  min-width: 20ex;\n",
              "  max-width: 50ex;\n",
              "  color: var(--sklearn-color-text);\n",
              "  box-shadow: 2pt 2pt 4pt #999;\n",
              "  /* unfitted */\n",
              "  background: var(--sklearn-color-unfitted-level-0);\n",
              "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted span {\n",
              "  /* fitted */\n",
              "  background: var(--sklearn-color-fitted-level-0);\n",
              "  border: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link:hover span {\n",
              "  display: block;\n",
              "}\n",
              "\n",
              "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
              "\n",
              "#sk-container-id-4 a.estimator_doc_link {\n",
              "  float: right;\n",
              "  font-size: 1rem;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1rem;\n",
              "  height: 1rem;\n",
              "  width: 1rem;\n",
              "  text-decoration: none;\n",
              "  /* unfitted */\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "}\n",
              "\n",
              "#sk-container-id-4 a.estimator_doc_link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "#sk-container-id-4 a.estimator_doc_link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "#sk-container-id-4 a.estimator_doc_link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "</style><div id=\"sk-container-id-4\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestRegressor()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-6\" type=\"checkbox\" checked><label for=\"sk-estimator-id-6\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;RandomForestRegressor<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.ensemble.RandomForestRegressor.html\">?<span>Documentation for RandomForestRegressor</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>RandomForestRegressor()</pre></div> </div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 79
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# taking only best features of lr to test data\n",
        "X_test_best_features_rfr = X_test[best_features_rfr]"
      ],
      "metadata": {
        "id": "INp-wjs4bAFY"
      },
      "execution_count": 80,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "best_features_rfr"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Uqp_bH_pbACs",
        "outputId": "71930cdb-158a-4bb5-d290-aee203524a86"
      },
      "execution_count": 81,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['Gender', 'Age', 'Weight', 'Duration', 'Heart_Rate']"
            ]
          },
          "metadata": {},
          "execution_count": 81
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# predicting the labels on test data\n",
        "y_predict_rfr = rfr.predict(X_test_best_features_rfr)"
      ],
      "metadata": {
        "id": "-G1cU0Rva__3"
      },
      "execution_count": 82,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# calcuation the mae , mse , rmse , r2\n",
        "mae_rfr = mean_absolute_error(y_test, y_predict_rfr)\n",
        "mse_rfr = mean_squared_error(y_test, y_predict_rfr)\n",
        "rmse_rfr = root_mean_squared_error(y_test, y_predict_rfr)\n",
        "r2_rfr = r2_score(y_test, y_predict_rfr)"
      ],
      "metadata": {
        "id": "KUuI3QYZbOXc"
      },
      "execution_count": 83,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"Mean Absolute Error (MAE):\", mae_rfr)\n",
        "print(\"Mean Squared Error (MSE):\",mse_rfr)\n",
        "print(\"Root Mean Squared Error (RMSE):\" ,rmse_rfr)\n",
        "print(\"R-squared (R2):\", r2_rfr)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "FxjHjphlbOUu",
        "outputId": "8ad5d305-a805-43a3-d618-763c48a8e403"
      },
      "execution_count": 84,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mean Absolute Error (MAE): 1.5406233333333332\n",
            "Mean Squared Error (MSE): 5.951451833333335\n",
            "Root Mean Squared Error (RMSE): 2.439559762197544\n",
            "R-squared (R2): 0.9984847240710215\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "SNXjLtNE2hEO"
      },
      "execution_count": 84,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Hyperparameter Tuning : Random Forest Regressor"
      ],
      "metadata": {
        "id": "1up8MZVEbj_a"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# parameters for Random Forest Regressor & fitting the data and model to grid search cv\n",
        "params_rfr = {\n",
        "    'n_estimators': [100, 200,300, 400],\n",
        "    'max_depth': [10, 20, 30,40],\n",
        "    'min_samples_split': [2, 5, 10],\n",
        "    'min_samples_leaf': [1, 2, 4]\n",
        "    }\n",
        "grid_rfr = GridSearchCV(estimator=rfr, param_grid=params_rfr, cv=5, n_jobs=-1)\n",
        "grid_rfr.fit(X_train_best_features_rfr, y_train)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 325
        },
        "id": "sk55Z-GqbORf",
        "outputId": "3b1644d6-c008-4d07-e966-a964c1c8255b"
      },
      "execution_count": 85,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/numpy/ma/core.py:2820: RuntimeWarning: invalid value encountered in cast\n",
            "  _data = np.array(data, dtype=dtype, copy=copy,\n",
            "/usr/local/lib/python3.10/dist-packages/numpy/ma/core.py:2820: RuntimeWarning: invalid value encountered in cast\n",
            "  _data = np.array(data, dtype=dtype, copy=copy,\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "GridSearchCV(cv=5, estimator=RandomForestRegressor(), n_jobs=-1,\n",
              "             param_grid={'max_depth': [10, 20, 30, 40],\n",
              "                         'min_samples_leaf': [1, 2, 4],\n",
              "                         'min_samples_split': [2, 5, 10],\n",
              "                         'n_estimators': [100, 200, 300, 400]})"
            ],
            "text/html": [
              "<style>#sk-container-id-5 {\n",
              "  /* Definition of color scheme common for light and dark mode */\n",
              "  --sklearn-color-text: black;\n",
              "  --sklearn-color-line: gray;\n",
              "  /* Definition of color scheme for unfitted estimators */\n",
              "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
              "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
              "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
              "  --sklearn-color-unfitted-level-3: chocolate;\n",
              "  /* Definition of color scheme for fitted estimators */\n",
              "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
              "  --sklearn-color-fitted-level-1: #d4ebff;\n",
              "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
              "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
              "\n",
              "  /* Specific color for light theme */\n",
              "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
              "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-icon: #696969;\n",
              "\n",
              "  @media (prefers-color-scheme: dark) {\n",
              "    /* Redefinition of color scheme for dark theme */\n",
              "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
              "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-icon: #878787;\n",
              "  }\n",
              "}\n",
              "\n",
              "#sk-container-id-5 {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 pre {\n",
              "  padding: 0;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 input.sk-hidden--visually {\n",
              "  border: 0;\n",
              "  clip: rect(1px 1px 1px 1px);\n",
              "  clip: rect(1px, 1px, 1px, 1px);\n",
              "  height: 1px;\n",
              "  margin: -1px;\n",
              "  overflow: hidden;\n",
              "  padding: 0;\n",
              "  position: absolute;\n",
              "  width: 1px;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-dashed-wrapped {\n",
              "  border: 1px dashed var(--sklearn-color-line);\n",
              "  margin: 0 0.4em 0.5em 0.4em;\n",
              "  box-sizing: border-box;\n",
              "  padding-bottom: 0.4em;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-container {\n",
              "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
              "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
              "     so we also need the `!important` here to be able to override the\n",
              "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
              "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
              "  display: inline-block !important;\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-text-repr-fallback {\n",
              "  display: none;\n",
              "}\n",
              "\n",
              "div.sk-parallel-item,\n",
              "div.sk-serial,\n",
              "div.sk-item {\n",
              "  /* draw centered vertical line to link estimators */\n",
              "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
              "  background-size: 2px 100%;\n",
              "  background-repeat: no-repeat;\n",
              "  background-position: center center;\n",
              "}\n",
              "\n",
              "/* Parallel-specific style estimator block */\n",
              "\n",
              "#sk-container-id-5 div.sk-parallel-item::after {\n",
              "  content: \"\";\n",
              "  width: 100%;\n",
              "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
              "  flex-grow: 1;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-parallel {\n",
              "  display: flex;\n",
              "  align-items: stretch;\n",
              "  justify-content: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-parallel-item {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-parallel-item:first-child::after {\n",
              "  align-self: flex-end;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-parallel-item:last-child::after {\n",
              "  align-self: flex-start;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-parallel-item:only-child::after {\n",
              "  width: 0;\n",
              "}\n",
              "\n",
              "/* Serial-specific style estimator block */\n",
              "\n",
              "#sk-container-id-5 div.sk-serial {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "  align-items: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  padding-right: 1em;\n",
              "  padding-left: 1em;\n",
              "}\n",
              "\n",
              "\n",
              "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
              "clickable and can be expanded/collapsed.\n",
              "- Pipeline and ColumnTransformer use this feature and define the default style\n",
              "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
              "*/\n",
              "\n",
              "/* Pipeline and ColumnTransformer style (default) */\n",
              "\n",
              "#sk-container-id-5 div.sk-toggleable {\n",
              "  /* Default theme specific background. It is overwritten whether we have a\n",
              "  specific estimator or a Pipeline/ColumnTransformer */\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "/* Toggleable label */\n",
              "#sk-container-id-5 label.sk-toggleable__label {\n",
              "  cursor: pointer;\n",
              "  display: block;\n",
              "  width: 100%;\n",
              "  margin-bottom: 0;\n",
              "  padding: 0.5em;\n",
              "  box-sizing: border-box;\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 label.sk-toggleable__label-arrow:before {\n",
              "  /* Arrow on the left of the label */\n",
              "  content: \"▸\";\n",
              "  float: left;\n",
              "  margin-right: 0.25em;\n",
              "  color: var(--sklearn-color-icon);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 label.sk-toggleable__label-arrow:hover:before {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "/* Toggleable content - dropdown */\n",
              "\n",
              "#sk-container-id-5 div.sk-toggleable__content {\n",
              "  max-height: 0;\n",
              "  max-width: 0;\n",
              "  overflow: hidden;\n",
              "  text-align: left;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-toggleable__content.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-toggleable__content pre {\n",
              "  margin: 0.2em;\n",
              "  border-radius: 0.25em;\n",
              "  color: var(--sklearn-color-text);\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-toggleable__content.fitted pre {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
              "  /* Expand drop-down */\n",
              "  max-height: 200px;\n",
              "  max-width: 100%;\n",
              "  overflow: auto;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
              "  content: \"▾\";\n",
              "}\n",
              "\n",
              "/* Pipeline/ColumnTransformer-specific style */\n",
              "\n",
              "#sk-container-id-5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator-specific style */\n",
              "\n",
              "/* Colorize estimator box */\n",
              "#sk-container-id-5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-label label.sk-toggleable__label,\n",
              "#sk-container-id-5 div.sk-label label {\n",
              "  /* The background is the default theme color */\n",
              "  color: var(--sklearn-color-text-on-default-background);\n",
              "}\n",
              "\n",
              "/* On hover, darken the color of the background */\n",
              "#sk-container-id-5 div.sk-label:hover label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "/* Label box, darken color on hover, fitted */\n",
              "#sk-container-id-5 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator label */\n",
              "\n",
              "#sk-container-id-5 div.sk-label label {\n",
              "  font-family: monospace;\n",
              "  font-weight: bold;\n",
              "  display: inline-block;\n",
              "  line-height: 1.2em;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-label-container {\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "/* Estimator-specific */\n",
              "#sk-container-id-5 div.sk-estimator {\n",
              "  font-family: monospace;\n",
              "  border: 1px dotted var(--sklearn-color-border-box);\n",
              "  border-radius: 0.25em;\n",
              "  box-sizing: border-box;\n",
              "  margin-bottom: 0.5em;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-estimator.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "/* on hover */\n",
              "#sk-container-id-5 div.sk-estimator:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-estimator.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
              "\n",
              "/* Common style for \"i\" and \"?\" */\n",
              "\n",
              ".sk-estimator-doc-link,\n",
              "a:link.sk-estimator-doc-link,\n",
              "a:visited.sk-estimator-doc-link {\n",
              "  float: right;\n",
              "  font-size: smaller;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1em;\n",
              "  height: 1em;\n",
              "  width: 1em;\n",
              "  text-decoration: none !important;\n",
              "  margin-left: 1ex;\n",
              "  /* unfitted */\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted,\n",
              "a:link.sk-estimator-doc-link.fitted,\n",
              "a:visited.sk-estimator-doc-link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "/* Span, style for the box shown on hovering the info icon */\n",
              ".sk-estimator-doc-link span {\n",
              "  display: none;\n",
              "  z-index: 9999;\n",
              "  position: relative;\n",
              "  font-weight: normal;\n",
              "  right: .2ex;\n",
              "  padding: .5ex;\n",
              "  margin: .5ex;\n",
              "  width: min-content;\n",
              "  min-width: 20ex;\n",
              "  max-width: 50ex;\n",
              "  color: var(--sklearn-color-text);\n",
              "  box-shadow: 2pt 2pt 4pt #999;\n",
              "  /* unfitted */\n",
              "  background: var(--sklearn-color-unfitted-level-0);\n",
              "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted span {\n",
              "  /* fitted */\n",
              "  background: var(--sklearn-color-fitted-level-0);\n",
              "  border: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link:hover span {\n",
              "  display: block;\n",
              "}\n",
              "\n",
              "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
              "\n",
              "#sk-container-id-5 a.estimator_doc_link {\n",
              "  float: right;\n",
              "  font-size: 1rem;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1rem;\n",
              "  height: 1rem;\n",
              "  width: 1rem;\n",
              "  text-decoration: none;\n",
              "  /* unfitted */\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 a.estimator_doc_link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "#sk-container-id-5 a.estimator_doc_link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 a.estimator_doc_link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "</style><div id=\"sk-container-id-5\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(cv=5, estimator=RandomForestRegressor(), n_jobs=-1,\n",
              "             param_grid={&#x27;max_depth&#x27;: [10, 20, 30, 40],\n",
              "                         &#x27;min_samples_leaf&#x27;: [1, 2, 4],\n",
              "                         &#x27;min_samples_split&#x27;: [2, 5, 10],\n",
              "                         &#x27;n_estimators&#x27;: [100, 200, 300, 400]})</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-7\" type=\"checkbox\" ><label for=\"sk-estimator-id-7\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;GridSearchCV<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.model_selection.GridSearchCV.html\">?<span>Documentation for GridSearchCV</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>GridSearchCV(cv=5, estimator=RandomForestRegressor(), n_jobs=-1,\n",
              "             param_grid={&#x27;max_depth&#x27;: [10, 20, 30, 40],\n",
              "                         &#x27;min_samples_leaf&#x27;: [1, 2, 4],\n",
              "                         &#x27;min_samples_split&#x27;: [2, 5, 10],\n",
              "                         &#x27;n_estimators&#x27;: [100, 200, 300, 400]})</pre></div> </div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-8\" type=\"checkbox\" ><label for=\"sk-estimator-id-8\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">best_estimator_: RandomForestRegressor</label><div class=\"sk-toggleable__content fitted\"><pre>RandomForestRegressor(max_depth=20, n_estimators=400)</pre></div> </div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-9\" type=\"checkbox\" ><label for=\"sk-estimator-id-9\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;RandomForestRegressor<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.ensemble.RandomForestRegressor.html\">?<span>Documentation for RandomForestRegressor</span></a></label><div class=\"sk-toggleable__content fitted\"><pre>RandomForestRegressor(max_depth=20, n_estimators=400)</pre></div> </div></div></div></div></div></div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 85
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "GridSearchCV(cv=5, estimator=RandomForestRegressor(), n_jobs=-1,\n",
              "             param_grid={'max_depth': [10, 20, 30, 40],\n",
              "                         'min_samples_leaf': [1, 2, 4],\n",
              "                         'min_samples_split': [2, 5, 10],\n",
              "                         'n_estimators': [100, 200, 300, 400]})"
            ],
            "text/html": [
              "<style>#sk-container-id-5 {\n",
              "  /* Definition of color scheme common for light and dark mode */\n",
              "  --sklearn-color-text: black;\n",
              "  --sklearn-color-line: gray;\n",
              "  /* Definition of color scheme for unfitted estimators */\n",
              "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
              "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
              "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
              "  --sklearn-color-unfitted-level-3: chocolate;\n",
              "  /* Definition of color scheme for fitted estimators */\n",
              "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
              "  --sklearn-color-fitted-level-1: #d4ebff;\n",
              "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
              "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
              "\n",
              "  /* Specific color for light theme */\n",
              "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
              "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-icon: #696969;\n",
              "\n",
              "  @media (prefers-color-scheme: dark) {\n",
              "    /* Redefinition of color scheme for dark theme */\n",
              "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
              "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-icon: #878787;\n",
              "  }\n",
              "}\n",
              "\n",
              "#sk-container-id-5 {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 pre {\n",
              "  padding: 0;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 input.sk-hidden--visually {\n",
              "  border: 0;\n",
              "  clip: rect(1px 1px 1px 1px);\n",
              "  clip: rect(1px, 1px, 1px, 1px);\n",
              "  height: 1px;\n",
              "  margin: -1px;\n",
              "  overflow: hidden;\n",
              "  padding: 0;\n",
              "  position: absolute;\n",
              "  width: 1px;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-dashed-wrapped {\n",
              "  border: 1px dashed var(--sklearn-color-line);\n",
              "  margin: 0 0.4em 0.5em 0.4em;\n",
              "  box-sizing: border-box;\n",
              "  padding-bottom: 0.4em;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-container {\n",
              "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
              "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
              "     so we also need the `!important` here to be able to override the\n",
              "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
              "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
              "  display: inline-block !important;\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-text-repr-fallback {\n",
              "  display: none;\n",
              "}\n",
              "\n",
              "div.sk-parallel-item,\n",
              "div.sk-serial,\n",
              "div.sk-item {\n",
              "  /* draw centered vertical line to link estimators */\n",
              "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
              "  background-size: 2px 100%;\n",
              "  background-repeat: no-repeat;\n",
              "  background-position: center center;\n",
              "}\n",
              "\n",
              "/* Parallel-specific style estimator block */\n",
              "\n",
              "#sk-container-id-5 div.sk-parallel-item::after {\n",
              "  content: \"\";\n",
              "  width: 100%;\n",
              "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
              "  flex-grow: 1;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-parallel {\n",
              "  display: flex;\n",
              "  align-items: stretch;\n",
              "  justify-content: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-parallel-item {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-parallel-item:first-child::after {\n",
              "  align-self: flex-end;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-parallel-item:last-child::after {\n",
              "  align-self: flex-start;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-parallel-item:only-child::after {\n",
              "  width: 0;\n",
              "}\n",
              "\n",
              "/* Serial-specific style estimator block */\n",
              "\n",
              "#sk-container-id-5 div.sk-serial {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "  align-items: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  padding-right: 1em;\n",
              "  padding-left: 1em;\n",
              "}\n",
              "\n",
              "\n",
              "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
              "clickable and can be expanded/collapsed.\n",
              "- Pipeline and ColumnTransformer use this feature and define the default style\n",
              "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
              "*/\n",
              "\n",
              "/* Pipeline and ColumnTransformer style (default) */\n",
              "\n",
              "#sk-container-id-5 div.sk-toggleable {\n",
              "  /* Default theme specific background. It is overwritten whether we have a\n",
              "  specific estimator or a Pipeline/ColumnTransformer */\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "/* Toggleable label */\n",
              "#sk-container-id-5 label.sk-toggleable__label {\n",
              "  cursor: pointer;\n",
              "  display: block;\n",
              "  width: 100%;\n",
              "  margin-bottom: 0;\n",
              "  padding: 0.5em;\n",
              "  box-sizing: border-box;\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 label.sk-toggleable__label-arrow:before {\n",
              "  /* Arrow on the left of the label */\n",
              "  content: \"▸\";\n",
              "  float: left;\n",
              "  margin-right: 0.25em;\n",
              "  color: var(--sklearn-color-icon);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 label.sk-toggleable__label-arrow:hover:before {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "/* Toggleable content - dropdown */\n",
              "\n",
              "#sk-container-id-5 div.sk-toggleable__content {\n",
              "  max-height: 0;\n",
              "  max-width: 0;\n",
              "  overflow: hidden;\n",
              "  text-align: left;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-toggleable__content.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-toggleable__content pre {\n",
              "  margin: 0.2em;\n",
              "  border-radius: 0.25em;\n",
              "  color: var(--sklearn-color-text);\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-toggleable__content.fitted pre {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
              "  /* Expand drop-down */\n",
              "  max-height: 200px;\n",
              "  max-width: 100%;\n",
              "  overflow: auto;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
              "  content: \"▾\";\n",
              "}\n",
              "\n",
              "/* Pipeline/ColumnTransformer-specific style */\n",
              "\n",
              "#sk-container-id-5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator-specific style */\n",
              "\n",
              "/* Colorize estimator box */\n",
              "#sk-container-id-5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-label label.sk-toggleable__label,\n",
              "#sk-container-id-5 div.sk-label label {\n",
              "  /* The background is the default theme color */\n",
              "  color: var(--sklearn-color-text-on-default-background);\n",
              "}\n",
              "\n",
              "/* On hover, darken the color of the background */\n",
              "#sk-container-id-5 div.sk-label:hover label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "/* Label box, darken color on hover, fitted */\n",
              "#sk-container-id-5 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator label */\n",
              "\n",
              "#sk-container-id-5 div.sk-label label {\n",
              "  font-family: monospace;\n",
              "  font-weight: bold;\n",
              "  display: inline-block;\n",
              "  line-height: 1.2em;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-label-container {\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "/* Estimator-specific */\n",
              "#sk-container-id-5 div.sk-estimator {\n",
              "  font-family: monospace;\n",
              "  border: 1px dotted var(--sklearn-color-border-box);\n",
              "  border-radius: 0.25em;\n",
              "  box-sizing: border-box;\n",
              "  margin-bottom: 0.5em;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-estimator.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "/* on hover */\n",
              "#sk-container-id-5 div.sk-estimator:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-estimator.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
              "\n",
              "/* Common style for \"i\" and \"?\" */\n",
              "\n",
              ".sk-estimator-doc-link,\n",
              "a:link.sk-estimator-doc-link,\n",
              "a:visited.sk-estimator-doc-link {\n",
              "  float: right;\n",
              "  font-size: smaller;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1em;\n",
              "  height: 1em;\n",
              "  width: 1em;\n",
              "  text-decoration: none !important;\n",
              "  margin-left: 1ex;\n",
              "  /* unfitted */\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted,\n",
              "a:link.sk-estimator-doc-link.fitted,\n",
              "a:visited.sk-estimator-doc-link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "/* Span, style for the box shown on hovering the info icon */\n",
              ".sk-estimator-doc-link span {\n",
              "  display: none;\n",
              "  z-index: 9999;\n",
              "  position: relative;\n",
              "  font-weight: normal;\n",
              "  right: .2ex;\n",
              "  padding: .5ex;\n",
              "  margin: .5ex;\n",
              "  width: min-content;\n",
              "  min-width: 20ex;\n",
              "  max-width: 50ex;\n",
              "  color: var(--sklearn-color-text);\n",
              "  box-shadow: 2pt 2pt 4pt #999;\n",
              "  /* unfitted */\n",
              "  background: var(--sklearn-color-unfitted-level-0);\n",
              "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted span {\n",
              "  /* fitted */\n",
              "  background: var(--sklearn-color-fitted-level-0);\n",
              "  border: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link:hover span {\n",
              "  display: block;\n",
              "}\n",
              "\n",
              "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
              "\n",
              "#sk-container-id-5 a.estimator_doc_link {\n",
              "  float: right;\n",
              "  font-size: 1rem;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1rem;\n",
              "  height: 1rem;\n",
              "  width: 1rem;\n",
              "  text-decoration: none;\n",
              "  /* unfitted */\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 a.estimator_doc_link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "#sk-container-id-5 a.estimator_doc_link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 a.estimator_doc_link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "</style><div id=\"sk-container-id-5\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(cv=5, estimator=RandomForestRegressor(), n_jobs=-1,\n",
              "             param_grid={&#x27;max_depth&#x27;: [10, 20, 30, 40],\n",
              "                         &#x27;min_samples_leaf&#x27;: [1, 2, 4],\n",
              "                         &#x27;min_samples_split&#x27;: [2, 5, 10],\n",
              "                         &#x27;n_estimators&#x27;: [100, 200, 300, 400]})</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-7\" type=\"checkbox\" ><label for=\"sk-estimator-id-7\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;GridSearchCV<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.model_selection.GridSearchCV.html\">?<span>Documentation for GridSearchCV</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>GridSearchCV(cv=5, estimator=RandomForestRegressor(), n_jobs=-1,\n",
              "             param_grid={&#x27;max_depth&#x27;: [10, 20, 30, 40],\n",
              "                         &#x27;min_samples_leaf&#x27;: [1, 2, 4],\n",
              "                         &#x27;min_samples_split&#x27;: [2, 5, 10],\n",
              "                         &#x27;n_estimators&#x27;: [100, 200, 300, 400]})</pre></div> </div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-8\" type=\"checkbox\" ><label for=\"sk-estimator-id-8\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">best_estimator_: RandomForestRegressor</label><div class=\"sk-toggleable__content fitted\"><pre>RandomForestRegressor(max_depth=20, n_estimators=400)</pre></div> </div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-9\" type=\"checkbox\" ><label for=\"sk-estimator-id-9\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;RandomForestRegressor<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.ensemble.RandomForestRegressor.html\">?<span>Documentation for RandomForestRegressor</span></a></label><div class=\"sk-toggleable__content fitted\"><pre>RandomForestRegressor(max_depth=20, n_estimators=400)</pre></div> </div></div></div></div></div></div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 85
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# getting the best hyperparameters\n",
        "print(grid_rfr.best_estimator_, grid_rfr.best_params_, grid_rfr.best_score_)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "yZzp8sLFcFgE",
        "outputId": "65d0c624-023a-49d8-ece7-a1ef1e7afaa9"
      },
      "execution_count": 87,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "RandomForestRegressor(max_depth=20, n_estimators=400) {'max_depth': 20, 'min_samples_leaf': 1, 'min_samples_split': 2, 'n_estimators': 400} 0.9979259489483108\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# testing grid_rfr model on test data\n",
        "y_predict_grid_rfr = grid_rfr.predict(X_test_best_features_rfr)"
      ],
      "metadata": {
        "id": "54SN6McEcSLt"
      },
      "execution_count": 88,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# calcuation the mae , mse , rmse , r2\n",
        "mae_grid_rfr = mean_absolute_error(y_test, y_predict_grid_rfr)\n",
        "mse_grid_rfr = mean_squared_error(y_test, y_predict_grid_rfr)\n",
        "rmse_grid_rfr = root_mean_squared_error(y_test, y_predict_grid_rfr)\n",
        "r2_grid_rfr = r2_score(y_test, y_predict_grid_rfr)\n",
        "\n",
        "print(\"Mean Absolute Error (MAE):\", mae_grid_rfr)\n",
        "print(\"Mean Squared Error (MSE):\",mse_grid_rfr)\n",
        "print(\"Root Mean Squared Error (RMSE):\" ,rmse_grid_rfr)\n",
        "print(\"R-squared (R2):\", r2_grid_rfr)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "E9aZRUnWcM6l",
        "outputId": "0600a927-b4a4-4ffb-aff2-1b07d57c4b27"
      },
      "execution_count": 89,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mean Absolute Error (MAE): 1.5160967094456468\n",
            "Mean Squared Error (MSE): 5.923729524356452\n",
            "Root Mean Squared Error (RMSE): 2.4338713039839335\n",
            "R-squared (R2): 0.9984917823399388\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Best Parameters : {'max_depth': 20, 'min_samples_leaf': 1, 'min_samples_split': 2, 'n_estimators': 400}"
      ],
      "metadata": {
        "id": "OvaMbY9FcihQ"
      }
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "38DTVC9C2hAe"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Final Model : Random Forest Regressor"
      ],
      "metadata": {
        "id": "3yTybAgwckfx"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# loading the model with best hyper parameter\n",
        "model2 = RandomForestRegressor(max_depth=20, n_estimators=400)"
      ],
      "metadata": {
        "id": "Tg9ahRlQcf9R"
      },
      "execution_count": 90,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# fitting the training data with best features of rfr\n",
        "model2.fit(X_train_best_features_rfr,y_train)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 80
        },
        "id": "Ldq7vGoHcf6a",
        "outputId": "4df5b6a1-d84c-4280-e7e5-daebc61cd743"
      },
      "execution_count": 91,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "RandomForestRegressor(max_depth=20, n_estimators=400)"
            ],
            "text/html": [
              "<style>#sk-container-id-6 {\n",
              "  /* Definition of color scheme common for light and dark mode */\n",
              "  --sklearn-color-text: black;\n",
              "  --sklearn-color-line: gray;\n",
              "  /* Definition of color scheme for unfitted estimators */\n",
              "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
              "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
              "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
              "  --sklearn-color-unfitted-level-3: chocolate;\n",
              "  /* Definition of color scheme for fitted estimators */\n",
              "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
              "  --sklearn-color-fitted-level-1: #d4ebff;\n",
              "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
              "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
              "\n",
              "  /* Specific color for light theme */\n",
              "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
              "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-icon: #696969;\n",
              "\n",
              "  @media (prefers-color-scheme: dark) {\n",
              "    /* Redefinition of color scheme for dark theme */\n",
              "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
              "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-icon: #878787;\n",
              "  }\n",
              "}\n",
              "\n",
              "#sk-container-id-6 {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "#sk-container-id-6 pre {\n",
              "  padding: 0;\n",
              "}\n",
              "\n",
              "#sk-container-id-6 input.sk-hidden--visually {\n",
              "  border: 0;\n",
              "  clip: rect(1px 1px 1px 1px);\n",
              "  clip: rect(1px, 1px, 1px, 1px);\n",
              "  height: 1px;\n",
              "  margin: -1px;\n",
              "  overflow: hidden;\n",
              "  padding: 0;\n",
              "  position: absolute;\n",
              "  width: 1px;\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-dashed-wrapped {\n",
              "  border: 1px dashed var(--sklearn-color-line);\n",
              "  margin: 0 0.4em 0.5em 0.4em;\n",
              "  box-sizing: border-box;\n",
              "  padding-bottom: 0.4em;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-container {\n",
              "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
              "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
              "     so we also need the `!important` here to be able to override the\n",
              "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
              "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
              "  display: inline-block !important;\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-text-repr-fallback {\n",
              "  display: none;\n",
              "}\n",
              "\n",
              "div.sk-parallel-item,\n",
              "div.sk-serial,\n",
              "div.sk-item {\n",
              "  /* draw centered vertical line to link estimators */\n",
              "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
              "  background-size: 2px 100%;\n",
              "  background-repeat: no-repeat;\n",
              "  background-position: center center;\n",
              "}\n",
              "\n",
              "/* Parallel-specific style estimator block */\n",
              "\n",
              "#sk-container-id-6 div.sk-parallel-item::after {\n",
              "  content: \"\";\n",
              "  width: 100%;\n",
              "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
              "  flex-grow: 1;\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-parallel {\n",
              "  display: flex;\n",
              "  align-items: stretch;\n",
              "  justify-content: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-parallel-item {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-parallel-item:first-child::after {\n",
              "  align-self: flex-end;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-parallel-item:last-child::after {\n",
              "  align-self: flex-start;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-parallel-item:only-child::after {\n",
              "  width: 0;\n",
              "}\n",
              "\n",
              "/* Serial-specific style estimator block */\n",
              "\n",
              "#sk-container-id-6 div.sk-serial {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "  align-items: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  padding-right: 1em;\n",
              "  padding-left: 1em;\n",
              "}\n",
              "\n",
              "\n",
              "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
              "clickable and can be expanded/collapsed.\n",
              "- Pipeline and ColumnTransformer use this feature and define the default style\n",
              "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
              "*/\n",
              "\n",
              "/* Pipeline and ColumnTransformer style (default) */\n",
              "\n",
              "#sk-container-id-6 div.sk-toggleable {\n",
              "  /* Default theme specific background. It is overwritten whether we have a\n",
              "  specific estimator or a Pipeline/ColumnTransformer */\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "/* Toggleable label */\n",
              "#sk-container-id-6 label.sk-toggleable__label {\n",
              "  cursor: pointer;\n",
              "  display: block;\n",
              "  width: 100%;\n",
              "  margin-bottom: 0;\n",
              "  padding: 0.5em;\n",
              "  box-sizing: border-box;\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "#sk-container-id-6 label.sk-toggleable__label-arrow:before {\n",
              "  /* Arrow on the left of the label */\n",
              "  content: \"▸\";\n",
              "  float: left;\n",
              "  margin-right: 0.25em;\n",
              "  color: var(--sklearn-color-icon);\n",
              "}\n",
              "\n",
              "#sk-container-id-6 label.sk-toggleable__label-arrow:hover:before {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "/* Toggleable content - dropdown */\n",
              "\n",
              "#sk-container-id-6 div.sk-toggleable__content {\n",
              "  max-height: 0;\n",
              "  max-width: 0;\n",
              "  overflow: hidden;\n",
              "  text-align: left;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-toggleable__content.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-toggleable__content pre {\n",
              "  margin: 0.2em;\n",
              "  border-radius: 0.25em;\n",
              "  color: var(--sklearn-color-text);\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-toggleable__content.fitted pre {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-6 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
              "  /* Expand drop-down */\n",
              "  max-height: 200px;\n",
              "  max-width: 100%;\n",
              "  overflow: auto;\n",
              "}\n",
              "\n",
              "#sk-container-id-6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
              "  content: \"▾\";\n",
              "}\n",
              "\n",
              "/* Pipeline/ColumnTransformer-specific style */\n",
              "\n",
              "#sk-container-id-6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator-specific style */\n",
              "\n",
              "/* Colorize estimator box */\n",
              "#sk-container-id-6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-label label.sk-toggleable__label,\n",
              "#sk-container-id-6 div.sk-label label {\n",
              "  /* The background is the default theme color */\n",
              "  color: var(--sklearn-color-text-on-default-background);\n",
              "}\n",
              "\n",
              "/* On hover, darken the color of the background */\n",
              "#sk-container-id-6 div.sk-label:hover label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "/* Label box, darken color on hover, fitted */\n",
              "#sk-container-id-6 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator label */\n",
              "\n",
              "#sk-container-id-6 div.sk-label label {\n",
              "  font-family: monospace;\n",
              "  font-weight: bold;\n",
              "  display: inline-block;\n",
              "  line-height: 1.2em;\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-label-container {\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "/* Estimator-specific */\n",
              "#sk-container-id-6 div.sk-estimator {\n",
              "  font-family: monospace;\n",
              "  border: 1px dotted var(--sklearn-color-border-box);\n",
              "  border-radius: 0.25em;\n",
              "  box-sizing: border-box;\n",
              "  margin-bottom: 0.5em;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-estimator.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "/* on hover */\n",
              "#sk-container-id-6 div.sk-estimator:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-estimator.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
              "\n",
              "/* Common style for \"i\" and \"?\" */\n",
              "\n",
              ".sk-estimator-doc-link,\n",
              "a:link.sk-estimator-doc-link,\n",
              "a:visited.sk-estimator-doc-link {\n",
              "  float: right;\n",
              "  font-size: smaller;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1em;\n",
              "  height: 1em;\n",
              "  width: 1em;\n",
              "  text-decoration: none !important;\n",
              "  margin-left: 1ex;\n",
              "  /* unfitted */\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted,\n",
              "a:link.sk-estimator-doc-link.fitted,\n",
              "a:visited.sk-estimator-doc-link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "/* Span, style for the box shown on hovering the info icon */\n",
              ".sk-estimator-doc-link span {\n",
              "  display: none;\n",
              "  z-index: 9999;\n",
              "  position: relative;\n",
              "  font-weight: normal;\n",
              "  right: .2ex;\n",
              "  padding: .5ex;\n",
              "  margin: .5ex;\n",
              "  width: min-content;\n",
              "  min-width: 20ex;\n",
              "  max-width: 50ex;\n",
              "  color: var(--sklearn-color-text);\n",
              "  box-shadow: 2pt 2pt 4pt #999;\n",
              "  /* unfitted */\n",
              "  background: var(--sklearn-color-unfitted-level-0);\n",
              "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted span {\n",
              "  /* fitted */\n",
              "  background: var(--sklearn-color-fitted-level-0);\n",
              "  border: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link:hover span {\n",
              "  display: block;\n",
              "}\n",
              "\n",
              "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
              "\n",
              "#sk-container-id-6 a.estimator_doc_link {\n",
              "  float: right;\n",
              "  font-size: 1rem;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1rem;\n",
              "  height: 1rem;\n",
              "  width: 1rem;\n",
              "  text-decoration: none;\n",
              "  /* unfitted */\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "}\n",
              "\n",
              "#sk-container-id-6 a.estimator_doc_link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "#sk-container-id-6 a.estimator_doc_link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "#sk-container-id-6 a.estimator_doc_link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "</style><div id=\"sk-container-id-6\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestRegressor(max_depth=20, n_estimators=400)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-10\" type=\"checkbox\" checked><label for=\"sk-estimator-id-10\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;RandomForestRegressor<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.ensemble.RandomForestRegressor.html\">?<span>Documentation for RandomForestRegressor</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>RandomForestRegressor(max_depth=20, n_estimators=400)</pre></div> </div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 91
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "-6jTabsddygd"
      },
      "execution_count": 91,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Model Evaluation : Random Forest Regressor"
      ],
      "metadata": {
        "id": "q61ApWLYc0xn"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# predicting the train data\n",
        "y_predict_train_model2 = model2.predict(X_train_best_features_rfr)"
      ],
      "metadata": {
        "id": "BrPafaPJcf3b"
      },
      "execution_count": 92,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# calcuation the mae , mse , rmse , r2\n",
        "mae_train_model2 = mean_absolute_error(y_train, y_predict_train_model2)\n",
        "mse_train_model2 = mean_squared_error(y_train, y_predict_train_model2)\n",
        "rmse_train_model2 = root_mean_squared_error(y_train, y_predict_train_model2)\n",
        "r2_train_model2 = r2_score(y_train, y_predict_train_model2)"
      ],
      "metadata": {
        "id": "nEe9Ta1vdFS4"
      },
      "execution_count": 93,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"Model2 on Training Data:\")\n",
        "print(\"Mean Absolute Error (MAE):\", mae_train_model2)\n",
        "print(\"Mean Squared Error (MSE):\",mse_train_model2)\n",
        "print(\"Root Mean Squared Error (RMSE):\" ,rmse_train_model2)\n",
        "print(\"R-squared (R2):\", r2_train_model2)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4C-ctIHfdFP4",
        "outputId": "20c4c13d-eb1f-4cd8-fa83-c953d85d5f8e"
      },
      "execution_count": 94,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model2 on Training Data:\n",
            "Mean Absolute Error (MAE): 0.6043085457025613\n",
            "Mean Squared Error (MSE): 0.9835533047895962\n",
            "Root Mean Squared Error (RMSE): 0.9917425597349325\n",
            "R-squared (R2): 0.9997474083637722\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# predicting the test data\n",
        "y_predict_test_model2 = model2.predict(X_test_best_features_rfr)"
      ],
      "metadata": {
        "id": "PNpYFUQBdZFB"
      },
      "execution_count": 95,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# calcuation the mae , mse , rmse , r2\n",
        "mae_test_model2 = mean_absolute_error(y_test, y_predict_test_model2)\n",
        "mse_test_model2 = mean_squared_error(y_test, y_predict_test_model2)\n",
        "rmse_test_model2 = root_mean_squared_error(y_test, y_predict_test_model2)\n",
        "r2_test_model2 = r2_score(y_test, y_predict_test_model2)"
      ],
      "metadata": {
        "id": "koq-rv0AdZCV"
      },
      "execution_count": 96,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"Model2 on Test Data:\")\n",
        "print(\"Mean Absolute Error (MAE):\", mae_test_model2)\n",
        "print(\"Mean Squared Error (MSE):\",mse_test_model2)\n",
        "print(\"Root Mean Squared Error (RMSE):\" ,rmse_test_model2)\n",
        "print(\"R-squared (R2):\", r2_test_model2)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Wvyba6wqdY_i",
        "outputId": "741e3c3b-3e4f-4270-c849-07a9dcc4d68e"
      },
      "execution_count": 97,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model2 on Test Data:\n",
            "Mean Absolute Error (MAE): 1.5245987261904763\n",
            "Mean Squared Error (MSE): 5.995721792958213\n",
            "Root Mean Squared Error (RMSE): 2.448616301701476\n",
            "R-squared (R2): 0.9984734526693408\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#graphical analysis of actual price and predicted price with different colors for actual and predicted price\n",
        "\n",
        "indices = range(len(y_test))\n",
        "plt.figure(figsize=(12, 6))\n",
        "plt.plot(indices, y_test, color='blue', label='Actual Price',alpha=0.4)\n",
        "plt.plot(indices, y_predict_test_model2, color='orange', label='Predicted Price')\n",
        "plt.xlabel('Index')\n",
        "plt.ylabel('Price')\n",
        "plt.title('Actual vs Predicted Prices')\n",
        "plt.legend()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 657
        },
        "id": "ibYDsaVnd2EX",
        "outputId": "99a11734-efb8-4c1b-97a8-1ef63a46414a"
      },
      "execution_count": 98,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 2400x1200 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "FbLH1qYw2g9g"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# 3. K Neighbors Regressor Model"
      ],
      "metadata": {
        "id": "gQVsh1m6nIg9"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "K Neighbors Regressor Model as the 3rd highest r2 score based on cross validation score according to its default hyperparameters\n",
        "\n",
        "KNeighborsRegressor() = 0.9905452147014955"
      ],
      "metadata": {
        "id": "246zxQdCnOJ2"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# loading the K Neighbors Regressor model\n",
        "knr = KNeighborsRegressor()"
      ],
      "metadata": {
        "id": "Dj9eI3CKmST3"
      },
      "execution_count": 99,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# getting the best features of Linear Regression by calling the feature selection function\n",
        "best_score_knr = 0\n",
        "best_features_knr = None\n",
        "for i in range(X_train.shape[1]):\n",
        "    col , score = find_best_feature_knn(i+1,knr,X_train,y_train)\n",
        "    if best_score_knr < score:\n",
        "        best_score_knr = score\n",
        "        best_features_knr = col\n",
        "print(best_features_knr)\n",
        "print(best_score_knr)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PqhJ90xJna2Q",
        "outputId": "5ad1e432-88ca-4afe-8f13-2a8763c3cccf"
      },
      "execution_count": 100,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Selected columns:  ['Duration']\n",
            "1 0.9187455736934634\n",
            "----------------------\n",
            "\n",
            "Selected columns:  ['Duration', 'Body_Temp']\n",
            "2 0.9134646817405981\n",
            "----------------------\n",
            "\n",
            "Selected columns:  ['Duration', 'Heart_Rate', 'Body_Temp']\n",
            "3 0.954412258035718\n",
            "----------------------\n",
            "\n",
            "Selected columns:  ['Age', 'Duration', 'Heart_Rate', 'Body_Temp']\n",
            "4 0.9835592743999658\n",
            "----------------------\n",
            "\n",
            "Selected columns:  ['Age', 'Weight', 'Duration', 'Heart_Rate', 'Body_Temp']\n",
            "5 0.9907240446390121\n",
            "----------------------\n",
            "\n",
            "Selected columns:  ['Gender', 'Age', 'Weight', 'Duration', 'Heart_Rate', 'Body_Temp']\n",
            "6 0.994004602142145\n",
            "----------------------\n",
            "\n",
            "Selected columns:  ['Gender', 'Age', 'Height', 'Weight', 'Duration', 'Heart_Rate', 'Body_Temp']\n",
            "7 0.9924404902034591\n",
            "----------------------\n",
            "\n",
            "['Gender', 'Age', 'Weight', 'Duration', 'Heart_Rate', 'Body_Temp']\n",
            "0.994004602142145\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Best Features : ['Gender', 'Age', 'Weight', 'Duration', 'Heart_Rate', 'Body_Temp']\n",
        "\n",
        "Best Score : 0.994004602142145"
      ],
      "metadata": {
        "id": "a7ITfZykoSeK"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# using a diffferent df to store\n",
        "X_train_best_features_knr = X_train[best_features_knr]"
      ],
      "metadata": {
        "id": "sfU5xI7lUdds"
      },
      "execution_count": 101,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# getting the cross val score of knr with its best features\n",
        "cv_score_knr = cross_val_score(knr, X_train_best_features_knr, y_train, cv=5,scoring='r2')\n",
        "print(cv_score_knr)\n",
        "print(cv_score_knr.mean())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Jt-1SpZyUfqd",
        "outputId": "32fc3711-b4e4-45e1-b59a-367bd56a9830"
      },
      "execution_count": 102,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[0.9939772  0.99383508 0.99379318 0.99396241 0.99445514]\n",
            "0.994004602142145\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# fitting the default model with its best features\n",
        "knr.fit(X_train_best_features_knr,y_train)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 80
        },
        "id": "J-gJFKu1Ufn5",
        "outputId": "6884eb80-05e6-4ffc-c6a9-bb48417bc4f3"
      },
      "execution_count": 103,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "KNeighborsRegressor()"
            ],
            "text/html": [
              "<style>#sk-container-id-7 {\n",
              "  /* Definition of color scheme common for light and dark mode */\n",
              "  --sklearn-color-text: black;\n",
              "  --sklearn-color-line: gray;\n",
              "  /* Definition of color scheme for unfitted estimators */\n",
              "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
              "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
              "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
              "  --sklearn-color-unfitted-level-3: chocolate;\n",
              "  /* Definition of color scheme for fitted estimators */\n",
              "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
              "  --sklearn-color-fitted-level-1: #d4ebff;\n",
              "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
              "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
              "\n",
              "  /* Specific color for light theme */\n",
              "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
              "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-icon: #696969;\n",
              "\n",
              "  @media (prefers-color-scheme: dark) {\n",
              "    /* Redefinition of color scheme for dark theme */\n",
              "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
              "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-icon: #878787;\n",
              "  }\n",
              "}\n",
              "\n",
              "#sk-container-id-7 {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "#sk-container-id-7 pre {\n",
              "  padding: 0;\n",
              "}\n",
              "\n",
              "#sk-container-id-7 input.sk-hidden--visually {\n",
              "  border: 0;\n",
              "  clip: rect(1px 1px 1px 1px);\n",
              "  clip: rect(1px, 1px, 1px, 1px);\n",
              "  height: 1px;\n",
              "  margin: -1px;\n",
              "  overflow: hidden;\n",
              "  padding: 0;\n",
              "  position: absolute;\n",
              "  width: 1px;\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-dashed-wrapped {\n",
              "  border: 1px dashed var(--sklearn-color-line);\n",
              "  margin: 0 0.4em 0.5em 0.4em;\n",
              "  box-sizing: border-box;\n",
              "  padding-bottom: 0.4em;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-container {\n",
              "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
              "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
              "     so we also need the `!important` here to be able to override the\n",
              "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
              "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
              "  display: inline-block !important;\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-text-repr-fallback {\n",
              "  display: none;\n",
              "}\n",
              "\n",
              "div.sk-parallel-item,\n",
              "div.sk-serial,\n",
              "div.sk-item {\n",
              "  /* draw centered vertical line to link estimators */\n",
              "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
              "  background-size: 2px 100%;\n",
              "  background-repeat: no-repeat;\n",
              "  background-position: center center;\n",
              "}\n",
              "\n",
              "/* Parallel-specific style estimator block */\n",
              "\n",
              "#sk-container-id-7 div.sk-parallel-item::after {\n",
              "  content: \"\";\n",
              "  width: 100%;\n",
              "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
              "  flex-grow: 1;\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-parallel {\n",
              "  display: flex;\n",
              "  align-items: stretch;\n",
              "  justify-content: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-parallel-item {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-parallel-item:first-child::after {\n",
              "  align-self: flex-end;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-parallel-item:last-child::after {\n",
              "  align-self: flex-start;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-parallel-item:only-child::after {\n",
              "  width: 0;\n",
              "}\n",
              "\n",
              "/* Serial-specific style estimator block */\n",
              "\n",
              "#sk-container-id-7 div.sk-serial {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "  align-items: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  padding-right: 1em;\n",
              "  padding-left: 1em;\n",
              "}\n",
              "\n",
              "\n",
              "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
              "clickable and can be expanded/collapsed.\n",
              "- Pipeline and ColumnTransformer use this feature and define the default style\n",
              "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
              "*/\n",
              "\n",
              "/* Pipeline and ColumnTransformer style (default) */\n",
              "\n",
              "#sk-container-id-7 div.sk-toggleable {\n",
              "  /* Default theme specific background. It is overwritten whether we have a\n",
              "  specific estimator or a Pipeline/ColumnTransformer */\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "/* Toggleable label */\n",
              "#sk-container-id-7 label.sk-toggleable__label {\n",
              "  cursor: pointer;\n",
              "  display: block;\n",
              "  width: 100%;\n",
              "  margin-bottom: 0;\n",
              "  padding: 0.5em;\n",
              "  box-sizing: border-box;\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "#sk-container-id-7 label.sk-toggleable__label-arrow:before {\n",
              "  /* Arrow on the left of the label */\n",
              "  content: \"▸\";\n",
              "  float: left;\n",
              "  margin-right: 0.25em;\n",
              "  color: var(--sklearn-color-icon);\n",
              "}\n",
              "\n",
              "#sk-container-id-7 label.sk-toggleable__label-arrow:hover:before {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "/* Toggleable content - dropdown */\n",
              "\n",
              "#sk-container-id-7 div.sk-toggleable__content {\n",
              "  max-height: 0;\n",
              "  max-width: 0;\n",
              "  overflow: hidden;\n",
              "  text-align: left;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-toggleable__content.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-toggleable__content pre {\n",
              "  margin: 0.2em;\n",
              "  border-radius: 0.25em;\n",
              "  color: var(--sklearn-color-text);\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-toggleable__content.fitted pre {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-7 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
              "  /* Expand drop-down */\n",
              "  max-height: 200px;\n",
              "  max-width: 100%;\n",
              "  overflow: auto;\n",
              "}\n",
              "\n",
              "#sk-container-id-7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
              "  content: \"▾\";\n",
              "}\n",
              "\n",
              "/* Pipeline/ColumnTransformer-specific style */\n",
              "\n",
              "#sk-container-id-7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator-specific style */\n",
              "\n",
              "/* Colorize estimator box */\n",
              "#sk-container-id-7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-label label.sk-toggleable__label,\n",
              "#sk-container-id-7 div.sk-label label {\n",
              "  /* The background is the default theme color */\n",
              "  color: var(--sklearn-color-text-on-default-background);\n",
              "}\n",
              "\n",
              "/* On hover, darken the color of the background */\n",
              "#sk-container-id-7 div.sk-label:hover label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "/* Label box, darken color on hover, fitted */\n",
              "#sk-container-id-7 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator label */\n",
              "\n",
              "#sk-container-id-7 div.sk-label label {\n",
              "  font-family: monospace;\n",
              "  font-weight: bold;\n",
              "  display: inline-block;\n",
              "  line-height: 1.2em;\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-label-container {\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "/* Estimator-specific */\n",
              "#sk-container-id-7 div.sk-estimator {\n",
              "  font-family: monospace;\n",
              "  border: 1px dotted var(--sklearn-color-border-box);\n",
              "  border-radius: 0.25em;\n",
              "  box-sizing: border-box;\n",
              "  margin-bottom: 0.5em;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-estimator.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "/* on hover */\n",
              "#sk-container-id-7 div.sk-estimator:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-estimator.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
              "\n",
              "/* Common style for \"i\" and \"?\" */\n",
              "\n",
              ".sk-estimator-doc-link,\n",
              "a:link.sk-estimator-doc-link,\n",
              "a:visited.sk-estimator-doc-link {\n",
              "  float: right;\n",
              "  font-size: smaller;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1em;\n",
              "  height: 1em;\n",
              "  width: 1em;\n",
              "  text-decoration: none !important;\n",
              "  margin-left: 1ex;\n",
              "  /* unfitted */\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted,\n",
              "a:link.sk-estimator-doc-link.fitted,\n",
              "a:visited.sk-estimator-doc-link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "/* Span, style for the box shown on hovering the info icon */\n",
              ".sk-estimator-doc-link span {\n",
              "  display: none;\n",
              "  z-index: 9999;\n",
              "  position: relative;\n",
              "  font-weight: normal;\n",
              "  right: .2ex;\n",
              "  padding: .5ex;\n",
              "  margin: .5ex;\n",
              "  width: min-content;\n",
              "  min-width: 20ex;\n",
              "  max-width: 50ex;\n",
              "  color: var(--sklearn-color-text);\n",
              "  box-shadow: 2pt 2pt 4pt #999;\n",
              "  /* unfitted */\n",
              "  background: var(--sklearn-color-unfitted-level-0);\n",
              "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted span {\n",
              "  /* fitted */\n",
              "  background: var(--sklearn-color-fitted-level-0);\n",
              "  border: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link:hover span {\n",
              "  display: block;\n",
              "}\n",
              "\n",
              "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
              "\n",
              "#sk-container-id-7 a.estimator_doc_link {\n",
              "  float: right;\n",
              "  font-size: 1rem;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1rem;\n",
              "  height: 1rem;\n",
              "  width: 1rem;\n",
              "  text-decoration: none;\n",
              "  /* unfitted */\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "}\n",
              "\n",
              "#sk-container-id-7 a.estimator_doc_link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "#sk-container-id-7 a.estimator_doc_link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "#sk-container-id-7 a.estimator_doc_link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "</style><div id=\"sk-container-id-7\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KNeighborsRegressor()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-11\" type=\"checkbox\" checked><label for=\"sk-estimator-id-11\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;KNeighborsRegressor<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.neighbors.KNeighborsRegressor.html\">?<span>Documentation for KNeighborsRegressor</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>KNeighborsRegressor()</pre></div> </div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 103
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# taking only best features of knr to test data\n",
        "X_test_best_features_knr = X_test[best_features_knr]"
      ],
      "metadata": {
        "id": "GM5IxLDTUfkx"
      },
      "execution_count": 104,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# listing best features\n",
        "best_features_knr"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qwJOlcsiUfiF",
        "outputId": "5637eddd-4d71-4758-bc4e-c181edeb93ae"
      },
      "execution_count": 105,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['Gender', 'Age', 'Weight', 'Duration', 'Heart_Rate', 'Body_Temp']"
            ]
          },
          "metadata": {},
          "execution_count": 105
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# predicting the labels on test data\n",
        "y_predict_knr = knr.predict(X_test_best_features_knr)"
      ],
      "metadata": {
        "id": "vvKfjjiRUffA"
      },
      "execution_count": 106,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# calcuation the mae , mse , rmse , r2\n",
        "mae_knr = mean_absolute_error(y_test, y_predict_knr)\n",
        "mse_knr = mean_squared_error(y_test, y_predict_knr)\n",
        "rmse_knr = root_mean_squared_error(y_test, y_predict_knr)\n",
        "r2_knr = r2_score(y_test, y_predict_knr)"
      ],
      "metadata": {
        "id": "3lLVGU1Ipo5d"
      },
      "execution_count": 107,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"Mean Absolute Error (MAE):\", mae_knr)\n",
        "print(\"Mean Squared Error (MSE):\",mse_knr)\n",
        "print(\"Root Mean Squared Error (RMSE):\" ,rmse_knr)\n",
        "print(\"R-squared (R2):\", r2_knr)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "iuUc1Eiwpo2Z",
        "outputId": "e6b7b4b3-ad99-40b8-bb21-3c8735dd24a7"
      },
      "execution_count": 108,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mean Absolute Error (MAE): 3.290533333333333\n",
            "Mean Squared Error (MSE): 20.370746666666665\n",
            "Root Mean Squared Error (RMSE): 4.513396356034629\n",
            "R-squared (R2): 0.9948134836769683\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Hyperparameter Tuning : K Neighbors Regressor"
      ],
      "metadata": {
        "id": "I0NgFmc6qINP"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#setting the hyperparameters\n",
        "params_knr = {\n",
        "    'n_neighbors': np.arange(3,50),\n",
        "    'metric': ['minkowski', 'euclidean'],\n",
        "    'algorithm': ['auto', 'ball_tree', 'kd_tree', 'brute'],\n",
        "    }"
      ],
      "metadata": {
        "id": "KE5lpF7DnZ8a"
      },
      "execution_count": 109,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "grid_knr = GridSearchCV(estimator=knr, param_grid=params_knr, cv=5, n_jobs=-1)\n",
        "grid_knr.fit(X_train_best_features_knr, y_train)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 134
        },
        "id": "ZBRLT26fpwnO",
        "outputId": "433522b0-9e2b-4776-8078-705af573dbfb"
      },
      "execution_count": 110,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "GridSearchCV(cv=5, estimator=KNeighborsRegressor(), n_jobs=-1,\n",
              "             param_grid={'algorithm': ['auto', 'ball_tree', 'kd_tree', 'brute'],\n",
              "                         'metric': ['minkowski', 'euclidean'],\n",
              "                         'n_neighbors': array([ 3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,\n",
              "       20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,\n",
              "       37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49])})"
            ],
            "text/html": [
              "<style>#sk-container-id-8 {\n",
              "  /* Definition of color scheme common for light and dark mode */\n",
              "  --sklearn-color-text: black;\n",
              "  --sklearn-color-line: gray;\n",
              "  /* Definition of color scheme for unfitted estimators */\n",
              "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
              "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
              "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
              "  --sklearn-color-unfitted-level-3: chocolate;\n",
              "  /* Definition of color scheme for fitted estimators */\n",
              "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
              "  --sklearn-color-fitted-level-1: #d4ebff;\n",
              "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
              "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
              "\n",
              "  /* Specific color for light theme */\n",
              "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
              "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-icon: #696969;\n",
              "\n",
              "  @media (prefers-color-scheme: dark) {\n",
              "    /* Redefinition of color scheme for dark theme */\n",
              "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
              "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-icon: #878787;\n",
              "  }\n",
              "}\n",
              "\n",
              "#sk-container-id-8 {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "#sk-container-id-8 pre {\n",
              "  padding: 0;\n",
              "}\n",
              "\n",
              "#sk-container-id-8 input.sk-hidden--visually {\n",
              "  border: 0;\n",
              "  clip: rect(1px 1px 1px 1px);\n",
              "  clip: rect(1px, 1px, 1px, 1px);\n",
              "  height: 1px;\n",
              "  margin: -1px;\n",
              "  overflow: hidden;\n",
              "  padding: 0;\n",
              "  position: absolute;\n",
              "  width: 1px;\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-dashed-wrapped {\n",
              "  border: 1px dashed var(--sklearn-color-line);\n",
              "  margin: 0 0.4em 0.5em 0.4em;\n",
              "  box-sizing: border-box;\n",
              "  padding-bottom: 0.4em;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-container {\n",
              "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
              "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
              "     so we also need the `!important` here to be able to override the\n",
              "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
              "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
              "  display: inline-block !important;\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-text-repr-fallback {\n",
              "  display: none;\n",
              "}\n",
              "\n",
              "div.sk-parallel-item,\n",
              "div.sk-serial,\n",
              "div.sk-item {\n",
              "  /* draw centered vertical line to link estimators */\n",
              "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
              "  background-size: 2px 100%;\n",
              "  background-repeat: no-repeat;\n",
              "  background-position: center center;\n",
              "}\n",
              "\n",
              "/* Parallel-specific style estimator block */\n",
              "\n",
              "#sk-container-id-8 div.sk-parallel-item::after {\n",
              "  content: \"\";\n",
              "  width: 100%;\n",
              "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
              "  flex-grow: 1;\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-parallel {\n",
              "  display: flex;\n",
              "  align-items: stretch;\n",
              "  justify-content: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-parallel-item {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-parallel-item:first-child::after {\n",
              "  align-self: flex-end;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-parallel-item:last-child::after {\n",
              "  align-self: flex-start;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-parallel-item:only-child::after {\n",
              "  width: 0;\n",
              "}\n",
              "\n",
              "/* Serial-specific style estimator block */\n",
              "\n",
              "#sk-container-id-8 div.sk-serial {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "  align-items: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  padding-right: 1em;\n",
              "  padding-left: 1em;\n",
              "}\n",
              "\n",
              "\n",
              "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
              "clickable and can be expanded/collapsed.\n",
              "- Pipeline and ColumnTransformer use this feature and define the default style\n",
              "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
              "*/\n",
              "\n",
              "/* Pipeline and ColumnTransformer style (default) */\n",
              "\n",
              "#sk-container-id-8 div.sk-toggleable {\n",
              "  /* Default theme specific background. It is overwritten whether we have a\n",
              "  specific estimator or a Pipeline/ColumnTransformer */\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "/* Toggleable label */\n",
              "#sk-container-id-8 label.sk-toggleable__label {\n",
              "  cursor: pointer;\n",
              "  display: block;\n",
              "  width: 100%;\n",
              "  margin-bottom: 0;\n",
              "  padding: 0.5em;\n",
              "  box-sizing: border-box;\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "#sk-container-id-8 label.sk-toggleable__label-arrow:before {\n",
              "  /* Arrow on the left of the label */\n",
              "  content: \"▸\";\n",
              "  float: left;\n",
              "  margin-right: 0.25em;\n",
              "  color: var(--sklearn-color-icon);\n",
              "}\n",
              "\n",
              "#sk-container-id-8 label.sk-toggleable__label-arrow:hover:before {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "/* Toggleable content - dropdown */\n",
              "\n",
              "#sk-container-id-8 div.sk-toggleable__content {\n",
              "  max-height: 0;\n",
              "  max-width: 0;\n",
              "  overflow: hidden;\n",
              "  text-align: left;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-toggleable__content.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-toggleable__content pre {\n",
              "  margin: 0.2em;\n",
              "  border-radius: 0.25em;\n",
              "  color: var(--sklearn-color-text);\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-toggleable__content.fitted pre {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-8 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
              "  /* Expand drop-down */\n",
              "  max-height: 200px;\n",
              "  max-width: 100%;\n",
              "  overflow: auto;\n",
              "}\n",
              "\n",
              "#sk-container-id-8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
              "  content: \"▾\";\n",
              "}\n",
              "\n",
              "/* Pipeline/ColumnTransformer-specific style */\n",
              "\n",
              "#sk-container-id-8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator-specific style */\n",
              "\n",
              "/* Colorize estimator box */\n",
              "#sk-container-id-8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-label label.sk-toggleable__label,\n",
              "#sk-container-id-8 div.sk-label label {\n",
              "  /* The background is the default theme color */\n",
              "  color: var(--sklearn-color-text-on-default-background);\n",
              "}\n",
              "\n",
              "/* On hover, darken the color of the background */\n",
              "#sk-container-id-8 div.sk-label:hover label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "/* Label box, darken color on hover, fitted */\n",
              "#sk-container-id-8 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator label */\n",
              "\n",
              "#sk-container-id-8 div.sk-label label {\n",
              "  font-family: monospace;\n",
              "  font-weight: bold;\n",
              "  display: inline-block;\n",
              "  line-height: 1.2em;\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-label-container {\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "/* Estimator-specific */\n",
              "#sk-container-id-8 div.sk-estimator {\n",
              "  font-family: monospace;\n",
              "  border: 1px dotted var(--sklearn-color-border-box);\n",
              "  border-radius: 0.25em;\n",
              "  box-sizing: border-box;\n",
              "  margin-bottom: 0.5em;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-estimator.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "/* on hover */\n",
              "#sk-container-id-8 div.sk-estimator:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-estimator.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
              "\n",
              "/* Common style for \"i\" and \"?\" */\n",
              "\n",
              ".sk-estimator-doc-link,\n",
              "a:link.sk-estimator-doc-link,\n",
              "a:visited.sk-estimator-doc-link {\n",
              "  float: right;\n",
              "  font-size: smaller;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1em;\n",
              "  height: 1em;\n",
              "  width: 1em;\n",
              "  text-decoration: none !important;\n",
              "  margin-left: 1ex;\n",
              "  /* unfitted */\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted,\n",
              "a:link.sk-estimator-doc-link.fitted,\n",
              "a:visited.sk-estimator-doc-link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "/* Span, style for the box shown on hovering the info icon */\n",
              ".sk-estimator-doc-link span {\n",
              "  display: none;\n",
              "  z-index: 9999;\n",
              "  position: relative;\n",
              "  font-weight: normal;\n",
              "  right: .2ex;\n",
              "  padding: .5ex;\n",
              "  margin: .5ex;\n",
              "  width: min-content;\n",
              "  min-width: 20ex;\n",
              "  max-width: 50ex;\n",
              "  color: var(--sklearn-color-text);\n",
              "  box-shadow: 2pt 2pt 4pt #999;\n",
              "  /* unfitted */\n",
              "  background: var(--sklearn-color-unfitted-level-0);\n",
              "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted span {\n",
              "  /* fitted */\n",
              "  background: var(--sklearn-color-fitted-level-0);\n",
              "  border: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link:hover span {\n",
              "  display: block;\n",
              "}\n",
              "\n",
              "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
              "\n",
              "#sk-container-id-8 a.estimator_doc_link {\n",
              "  float: right;\n",
              "  font-size: 1rem;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1rem;\n",
              "  height: 1rem;\n",
              "  width: 1rem;\n",
              "  text-decoration: none;\n",
              "  /* unfitted */\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "}\n",
              "\n",
              "#sk-container-id-8 a.estimator_doc_link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "#sk-container-id-8 a.estimator_doc_link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "#sk-container-id-8 a.estimator_doc_link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "</style><div id=\"sk-container-id-8\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(cv=5, estimator=KNeighborsRegressor(), n_jobs=-1,\n",
              "             param_grid={&#x27;algorithm&#x27;: [&#x27;auto&#x27;, &#x27;ball_tree&#x27;, &#x27;kd_tree&#x27;, &#x27;brute&#x27;],\n",
              "                         &#x27;metric&#x27;: [&#x27;minkowski&#x27;, &#x27;euclidean&#x27;],\n",
              "                         &#x27;n_neighbors&#x27;: array([ 3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,\n",
              "       20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,\n",
              "       37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49])})</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-12\" type=\"checkbox\" ><label for=\"sk-estimator-id-12\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;GridSearchCV<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.model_selection.GridSearchCV.html\">?<span>Documentation for GridSearchCV</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>GridSearchCV(cv=5, estimator=KNeighborsRegressor(), n_jobs=-1,\n",
              "             param_grid={&#x27;algorithm&#x27;: [&#x27;auto&#x27;, &#x27;ball_tree&#x27;, &#x27;kd_tree&#x27;, &#x27;brute&#x27;],\n",
              "                         &#x27;metric&#x27;: [&#x27;minkowski&#x27;, &#x27;euclidean&#x27;],\n",
              "                         &#x27;n_neighbors&#x27;: array([ 3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,\n",
              "       20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,\n",
              "       37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49])})</pre></div> </div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-13\" type=\"checkbox\" ><label for=\"sk-estimator-id-13\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">best_estimator_: KNeighborsRegressor</label><div class=\"sk-toggleable__content fitted\"><pre>KNeighborsRegressor(algorithm=&#x27;brute&#x27;, n_neighbors=9)</pre></div> </div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-14\" type=\"checkbox\" ><label for=\"sk-estimator-id-14\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;KNeighborsRegressor<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.neighbors.KNeighborsRegressor.html\">?<span>Documentation for KNeighborsRegressor</span></a></label><div class=\"sk-toggleable__content fitted\"><pre>KNeighborsRegressor(algorithm=&#x27;brute&#x27;, n_neighbors=9)</pre></div> </div></div></div></div></div></div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 110
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# getting the best hyperparameters\n",
        "print(grid_knr.best_estimator_, grid_knr.best_params_, grid_knr.best_score_)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "W8nTZCDHpwkT",
        "outputId": "3f24fba4-8dfd-4207-efd5-8772df2d7ecb"
      },
      "execution_count": 111,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "KNeighborsRegressor(algorithm='brute', n_neighbors=9) {'algorithm': 'brute', 'metric': 'minkowski', 'n_neighbors': 9} 0.9943991675804362\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# testing grid_knr model on test data\n",
        "y_predict_grid_knr = grid_knr.predict(X_test_best_features_knr)"
      ],
      "metadata": {
        "id": "2QnAQO03q5aH"
      },
      "execution_count": 112,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# calcuation the mae , mse , rmse , r2\n",
        "mae_grid_knr = mean_absolute_error(y_test, y_predict_grid_knr)\n",
        "mse_grid_knr = mean_squared_error(y_test, y_predict_grid_knr)\n",
        "rmse_grid_knr = root_mean_squared_error(y_test, y_predict_grid_knr)\n",
        "r2_grid_knr = r2_score(y_test, y_predict_grid_knr)\n",
        "\n",
        "print(\"Mean Absolute Error (MAE):\", mae_grid_knr)\n",
        "print(\"Mean Squared Error (MSE):\",mse_grid_knr)\n",
        "print(\"Root Mean Squared Error (RMSE):\" ,rmse_grid_knr)\n",
        "print(\"R-squared (R2):\", r2_grid_knr)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OoGPpuVVq5W5",
        "outputId": "8f9b2b76-60c5-4568-bb36-177f690aa90b"
      },
      "execution_count": 113,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mean Absolute Error (MAE): 3.1428888888888893\n",
            "Mean Squared Error (MSE): 19.110238683127573\n",
            "Root Mean Squared Error (RMSE): 4.3715258987140375\n",
            "R-squared (R2): 0.9951344166962098\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Best Parameters : {'algorithm': 'brute', 'metric': 'minkowski', 'n_neighbors': 9}"
      ],
      "metadata": {
        "id": "c_B1QhYLq-2v"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Final Model : K Neighbors Regressor"
      ],
      "metadata": {
        "id": "L9ateH2jrAiR"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# loading the model with best hyper parameter\n",
        "model3 = KNeighborsRegressor(algorithm='brute', n_neighbors=9)"
      ],
      "metadata": {
        "id": "TdLjMH3Yq5T-"
      },
      "execution_count": 114,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# fitting the training data with best features of knr\n",
        "model3.fit(X_train_best_features_knr,y_train)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 80
        },
        "id": "1RvCsqK7rCA8",
        "outputId": "015b333a-4c6b-41f2-dbdd-3fc2fb72b2af"
      },
      "execution_count": 115,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "KNeighborsRegressor(algorithm='brute', n_neighbors=9)"
            ],
            "text/html": [
              "<style>#sk-container-id-9 {\n",
              "  /* Definition of color scheme common for light and dark mode */\n",
              "  --sklearn-color-text: black;\n",
              "  --sklearn-color-line: gray;\n",
              "  /* Definition of color scheme for unfitted estimators */\n",
              "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
              "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
              "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
              "  --sklearn-color-unfitted-level-3: chocolate;\n",
              "  /* Definition of color scheme for fitted estimators */\n",
              "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
              "  --sklearn-color-fitted-level-1: #d4ebff;\n",
              "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
              "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
              "\n",
              "  /* Specific color for light theme */\n",
              "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
              "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-icon: #696969;\n",
              "\n",
              "  @media (prefers-color-scheme: dark) {\n",
              "    /* Redefinition of color scheme for dark theme */\n",
              "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
              "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-icon: #878787;\n",
              "  }\n",
              "}\n",
              "\n",
              "#sk-container-id-9 {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "#sk-container-id-9 pre {\n",
              "  padding: 0;\n",
              "}\n",
              "\n",
              "#sk-container-id-9 input.sk-hidden--visually {\n",
              "  border: 0;\n",
              "  clip: rect(1px 1px 1px 1px);\n",
              "  clip: rect(1px, 1px, 1px, 1px);\n",
              "  height: 1px;\n",
              "  margin: -1px;\n",
              "  overflow: hidden;\n",
              "  padding: 0;\n",
              "  position: absolute;\n",
              "  width: 1px;\n",
              "}\n",
              "\n",
              "#sk-container-id-9 div.sk-dashed-wrapped {\n",
              "  border: 1px dashed var(--sklearn-color-line);\n",
              "  margin: 0 0.4em 0.5em 0.4em;\n",
              "  box-sizing: border-box;\n",
              "  padding-bottom: 0.4em;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "#sk-container-id-9 div.sk-container {\n",
              "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
              "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
              "     so we also need the `!important` here to be able to override the\n",
              "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
              "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
              "  display: inline-block !important;\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-9 div.sk-text-repr-fallback {\n",
              "  display: none;\n",
              "}\n",
              "\n",
              "div.sk-parallel-item,\n",
              "div.sk-serial,\n",
              "div.sk-item {\n",
              "  /* draw centered vertical line to link estimators */\n",
              "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
              "  background-size: 2px 100%;\n",
              "  background-repeat: no-repeat;\n",
              "  background-position: center center;\n",
              "}\n",
              "\n",
              "/* Parallel-specific style estimator block */\n",
              "\n",
              "#sk-container-id-9 div.sk-parallel-item::after {\n",
              "  content: \"\";\n",
              "  width: 100%;\n",
              "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
              "  flex-grow: 1;\n",
              "}\n",
              "\n",
              "#sk-container-id-9 div.sk-parallel {\n",
              "  display: flex;\n",
              "  align-items: stretch;\n",
              "  justify-content: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-9 div.sk-parallel-item {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "}\n",
              "\n",
              "#sk-container-id-9 div.sk-parallel-item:first-child::after {\n",
              "  align-self: flex-end;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-9 div.sk-parallel-item:last-child::after {\n",
              "  align-self: flex-start;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-9 div.sk-parallel-item:only-child::after {\n",
              "  width: 0;\n",
              "}\n",
              "\n",
              "/* Serial-specific style estimator block */\n",
              "\n",
              "#sk-container-id-9 div.sk-serial {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "  align-items: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  padding-right: 1em;\n",
              "  padding-left: 1em;\n",
              "}\n",
              "\n",
              "\n",
              "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
              "clickable and can be expanded/collapsed.\n",
              "- Pipeline and ColumnTransformer use this feature and define the default style\n",
              "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
              "*/\n",
              "\n",
              "/* Pipeline and ColumnTransformer style (default) */\n",
              "\n",
              "#sk-container-id-9 div.sk-toggleable {\n",
              "  /* Default theme specific background. It is overwritten whether we have a\n",
              "  specific estimator or a Pipeline/ColumnTransformer */\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "/* Toggleable label */\n",
              "#sk-container-id-9 label.sk-toggleable__label {\n",
              "  cursor: pointer;\n",
              "  display: block;\n",
              "  width: 100%;\n",
              "  margin-bottom: 0;\n",
              "  padding: 0.5em;\n",
              "  box-sizing: border-box;\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "#sk-container-id-9 label.sk-toggleable__label-arrow:before {\n",
              "  /* Arrow on the left of the label */\n",
              "  content: \"▸\";\n",
              "  float: left;\n",
              "  margin-right: 0.25em;\n",
              "  color: var(--sklearn-color-icon);\n",
              "}\n",
              "\n",
              "#sk-container-id-9 label.sk-toggleable__label-arrow:hover:before {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "/* Toggleable content - dropdown */\n",
              "\n",
              "#sk-container-id-9 div.sk-toggleable__content {\n",
              "  max-height: 0;\n",
              "  max-width: 0;\n",
              "  overflow: hidden;\n",
              "  text-align: left;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-9 div.sk-toggleable__content.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-9 div.sk-toggleable__content pre {\n",
              "  margin: 0.2em;\n",
              "  border-radius: 0.25em;\n",
              "  color: var(--sklearn-color-text);\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-9 div.sk-toggleable__content.fitted pre {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-9 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
              "  /* Expand drop-down */\n",
              "  max-height: 200px;\n",
              "  max-width: 100%;\n",
              "  overflow: auto;\n",
              "}\n",
              "\n",
              "#sk-container-id-9 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
              "  content: \"▾\";\n",
              "}\n",
              "\n",
              "/* Pipeline/ColumnTransformer-specific style */\n",
              "\n",
              "#sk-container-id-9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-9 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator-specific style */\n",
              "\n",
              "/* Colorize estimator box */\n",
              "#sk-container-id-9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-9 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-9 div.sk-label label.sk-toggleable__label,\n",
              "#sk-container-id-9 div.sk-label label {\n",
              "  /* The background is the default theme color */\n",
              "  color: var(--sklearn-color-text-on-default-background);\n",
              "}\n",
              "\n",
              "/* On hover, darken the color of the background */\n",
              "#sk-container-id-9 div.sk-label:hover label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "/* Label box, darken color on hover, fitted */\n",
              "#sk-container-id-9 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator label */\n",
              "\n",
              "#sk-container-id-9 div.sk-label label {\n",
              "  font-family: monospace;\n",
              "  font-weight: bold;\n",
              "  display: inline-block;\n",
              "  line-height: 1.2em;\n",
              "}\n",
              "\n",
              "#sk-container-id-9 div.sk-label-container {\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "/* Estimator-specific */\n",
              "#sk-container-id-9 div.sk-estimator {\n",
              "  font-family: monospace;\n",
              "  border: 1px dotted var(--sklearn-color-border-box);\n",
              "  border-radius: 0.25em;\n",
              "  box-sizing: border-box;\n",
              "  margin-bottom: 0.5em;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-9 div.sk-estimator.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "/* on hover */\n",
              "#sk-container-id-9 div.sk-estimator:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-9 div.sk-estimator.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
              "\n",
              "/* Common style for \"i\" and \"?\" */\n",
              "\n",
              ".sk-estimator-doc-link,\n",
              "a:link.sk-estimator-doc-link,\n",
              "a:visited.sk-estimator-doc-link {\n",
              "  float: right;\n",
              "  font-size: smaller;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1em;\n",
              "  height: 1em;\n",
              "  width: 1em;\n",
              "  text-decoration: none !important;\n",
              "  margin-left: 1ex;\n",
              "  /* unfitted */\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted,\n",
              "a:link.sk-estimator-doc-link.fitted,\n",
              "a:visited.sk-estimator-doc-link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "/* Span, style for the box shown on hovering the info icon */\n",
              ".sk-estimator-doc-link span {\n",
              "  display: none;\n",
              "  z-index: 9999;\n",
              "  position: relative;\n",
              "  font-weight: normal;\n",
              "  right: .2ex;\n",
              "  padding: .5ex;\n",
              "  margin: .5ex;\n",
              "  width: min-content;\n",
              "  min-width: 20ex;\n",
              "  max-width: 50ex;\n",
              "  color: var(--sklearn-color-text);\n",
              "  box-shadow: 2pt 2pt 4pt #999;\n",
              "  /* unfitted */\n",
              "  background: var(--sklearn-color-unfitted-level-0);\n",
              "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted span {\n",
              "  /* fitted */\n",
              "  background: var(--sklearn-color-fitted-level-0);\n",
              "  border: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link:hover span {\n",
              "  display: block;\n",
              "}\n",
              "\n",
              "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
              "\n",
              "#sk-container-id-9 a.estimator_doc_link {\n",
              "  float: right;\n",
              "  font-size: 1rem;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1rem;\n",
              "  height: 1rem;\n",
              "  width: 1rem;\n",
              "  text-decoration: none;\n",
              "  /* unfitted */\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "}\n",
              "\n",
              "#sk-container-id-9 a.estimator_doc_link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "#sk-container-id-9 a.estimator_doc_link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "#sk-container-id-9 a.estimator_doc_link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "</style><div id=\"sk-container-id-9\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KNeighborsRegressor(algorithm=&#x27;brute&#x27;, n_neighbors=9)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-15\" type=\"checkbox\" checked><label for=\"sk-estimator-id-15\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;KNeighborsRegressor<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.neighbors.KNeighborsRegressor.html\">?<span>Documentation for KNeighborsRegressor</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>KNeighborsRegressor(algorithm=&#x27;brute&#x27;, n_neighbors=9)</pre></div> </div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 115
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "_1cJEKFB3nIM"
      },
      "execution_count": 115,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Model Evaluation : K Neighbors Regressor"
      ],
      "metadata": {
        "id": "tCJ3Rh51rJM8"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# predicting the train data\n",
        "y_predict_train_model3 = model3.predict(X_train_best_features_knr)"
      ],
      "metadata": {
        "id": "YTRW5Q_NrB9_"
      },
      "execution_count": 116,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# calcuation the mae , mse , rmse , r2\n",
        "mae_train_model3 = mean_absolute_error(y_train, y_predict_train_model3)\n",
        "mse_train_model3 = mean_squared_error(y_train, y_predict_train_model3)\n",
        "rmse_train_model3 = root_mean_squared_error(y_train, y_predict_train_model3)\n",
        "r2_train_model3 = r2_score(y_train, y_predict_train_model3)"
      ],
      "metadata": {
        "id": "XjsDSylrrB7G"
      },
      "execution_count": 117,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"Model3 on Training Data:\")\n",
        "print(\"Mean Absolute Error (MAE):\", mae_train_model3)\n",
        "print(\"Mean Squared Error (MSE):\",mse_train_model3)\n",
        "print(\"Root Mean Squared Error (RMSE):\" ,rmse_train_model3)\n",
        "print(\"R-squared (R2):\", r2_train_model3)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JbD9EsCcrB4U",
        "outputId": "e2d22f60-ea5b-4179-9117-5f1d42b84548"
      },
      "execution_count": 118,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model3 on Training Data:\n",
            "Mean Absolute Error (MAE): 2.859240740740741\n",
            "Mean Squared Error (MSE): 15.592631687242797\n",
            "Root Mean Squared Error (RMSE): 3.9487506489069166\n",
            "R-squared (R2): 0.99599557204292\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# predicting the test data\n",
        "y_predict_test_model3 = model3.predict(X_test_best_features_knr)"
      ],
      "metadata": {
        "id": "YAAeXKXerPhI"
      },
      "execution_count": 119,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# calcuation the mae , mse , rmse , r2\n",
        "mae_test_model3 = mean_absolute_error(y_test, y_predict_test_model3)\n",
        "mse_test_model3 = mean_squared_error(y_test, y_predict_test_model3)\n",
        "rmse_test_model3 = root_mean_squared_error(y_test, y_predict_test_model3)\n",
        "r2_test_model3 = r2_score(y_test, y_predict_test_model3)"
      ],
      "metadata": {
        "id": "xslJ7VLmrRcu"
      },
      "execution_count": 120,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"Model3 on Test Data:\")\n",
        "print(\"Mean Absolute Error (MAE):\", mae_test_model3)\n",
        "print(\"Mean Squared Error (MSE):\",mse_test_model3)\n",
        "print(\"Root Mean Squared Error (RMSE):\" ,rmse_test_model3)\n",
        "print(\"R-squared (R2):\", r2_test_model3)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "iskGOlhCrRZY",
        "outputId": "eb51d97b-6230-4b23-f229-324af602f772"
      },
      "execution_count": 121,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model3 on Test Data:\n",
            "Mean Absolute Error (MAE): 3.1428888888888893\n",
            "Mean Squared Error (MSE): 19.110238683127573\n",
            "Root Mean Squared Error (RMSE): 4.3715258987140375\n",
            "R-squared (R2): 0.9951344166962098\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#graphical analysis of actual price and predicted price with different colors for actual and predicted price\n",
        "\n",
        "indices = range(len(y_test))\n",
        "plt.figure(figsize=(12, 6))\n",
        "plt.plot(indices, y_test, color='blue', label='Actual Price',alpha=0.4)\n",
        "plt.plot(indices, y_predict_test_model3, color='orange', label='Predicted Price')\n",
        "plt.xlabel('Index')\n",
        "plt.ylabel('Price')\n",
        "plt.title('Actual vs Predicted Prices')\n",
        "plt.legend()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 657
        },
        "id": "5KPRGUoEyZKt",
        "outputId": "a40c0e29-e494-46ae-a406-4a864042cd8c"
      },
      "execution_count": 122,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 2400x1200 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "bRJ430vP3nFL"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Conclusion"
      ],
      "metadata": {
        "id": "gyMfLKoclB3x"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Model 1 : XG Boost Regressor\n",
        "\n",
        "Training Data R2 score : 0.99956\n",
        "\n",
        "Testing Data R2 score : 0.99935\n",
        "\n",
        "Model 2 : Random Forest Regressor\n",
        "\n",
        "Training Data R2 score : 0.99974\n",
        "\n",
        "Testing Data R2 score : 0.99847\n",
        "\n",
        "Model 3 : K Neighbors Regressor\n",
        "\n",
        "Training Data R2 score : 0.99599\n",
        "\n",
        "Testing Data R2 score : 0.99513"
      ],
      "metadata": {
        "id": "v7lxV__K0tCT"
      }
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "FOfLSshi3nCB"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Predictive System"
      ],
      "metadata": {
        "id": "yZXtQpPylHXU"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Buliding a Predictive System for here"
      ],
      "metadata": {
        "id": "9Z1Jv-_LlKA4"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#taking input data 236.0\n",
        "input_data = (0,79,179.0,91.0,27.0,107.0,40.4)\n",
        "\n",
        "#loading columns\n",
        "columns = all_columns\n",
        "\n",
        "# Convert the tuple to a DataFrame\n",
        "df = pd.DataFrame([input_data], columns=columns)\n",
        "\n",
        "#standardizing the data\n",
        "df[columns] = scaler.transform(df[columns])\n",
        "\n",
        "#loading best features\n",
        "df_best_features_knr = df[best_features_knr]\n",
        "df_best_features_rfr = df[best_features_rfr]\n",
        "df_best_features_xgb = df[best_features_xgb]\n",
        "\n",
        "#predictions\n",
        "prediction1 = model1.predict(df_best_features_xgb)\n",
        "prediction2 = model2.predict(df_best_features_rfr)\n",
        "prediction3 = model3.predict(df_best_features_knr)\n",
        "\n",
        "\n",
        "print(prediction1)\n",
        "\n",
        "print(prediction2)\n",
        "\n",
        "print(prediction3)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "51mKZxUflIjM",
        "outputId": "937edb36-4026-4630-f49a-3f5c388ac9da"
      },
      "execution_count": 124,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[237.50526]\n",
            "[234.9325]\n",
            "[240.]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Building the Predictive System to export"
      ],
      "metadata": {
        "id": "KAeaEw0ZlpRq"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import json\n",
        "import pickle\n",
        "calorie_burnt_data.to_csv('calorie_burnt_data.csv', index=False)\n",
        "with open('columns.pkl', 'wb') as file:\n",
        "    pickle.dump(all_columns, file)\n",
        "with open('scaler.pkl', 'wb') as f:\n",
        "    pickle.dump(scaler, f)\n",
        "with open('best_features_xgb.json', 'w') as file:\n",
        "    json.dump(best_features_xgb, file)\n",
        "with open('best_features_rfr.json', 'w') as file:\n",
        "    json.dump(best_features_rfr, file)\n",
        "with open('best_features_knr.json', 'w') as file:\n",
        "    json.dump(best_features_knr, file)\n",
        "with open('calories_burnt_prediction_trained_xgb_model.sav', 'wb') as f:\n",
        "    pickle.dump(model1, f)\n",
        "with open('calories_burnt_prediction_trained_rfr_model.sav', 'wb') as f:\n",
        "    pickle.dump(model2, f)\n",
        "with open('calories_burnt_prediction_trained_knr_model.sav', 'wb') as f:\n",
        "    pickle.dump(model3, f)"
      ],
      "metadata": {
        "id": "jRB3Haq-lIgS"
      },
      "execution_count": 123,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#loading. the saved model\n",
        "with open('columns.pkl', 'rb') as f:\n",
        "    all_features = pickle.load(f)\n",
        "with open('scaler.pkl', 'rb') as f:\n",
        "    scalers = pickle.load(f)\n",
        "with open('best_features_xgb.json', 'r') as file:\n",
        "    best_features_xgb = json.load(file)\n",
        "with open('best_features_rfr.json', 'r') as file:\n",
        "    best_features_rfr = json.load(file)\n",
        "with open('best_features_knr.json', 'r') as file:\n",
        "    best_features_knr = json.load(file)\n",
        "with open('calories_burnt_prediction_trained_xgb_model.sav', 'rb') as f:\n",
        "    loaded_model_xgb = pickle.load(f)\n",
        "with open('calories_burnt_prediction_trained_rfr_model.sav', 'rb') as f:\n",
        "    loaded_model_rfr = pickle.load(f)\n",
        "with open('calories_burnt_prediction_trained_knr_model.sav', 'rb') as f:\n",
        "    loaded_model_knr = pickle.load(f)"
      ],
      "metadata": {
        "id": "bcgTeOM2l-id"
      },
      "execution_count": 125,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#taking input data 138.0\n",
        "input_data = (0,49,193.0,100.0,22.0,99.0,40.5)\n",
        "\n",
        "# Convert the tuple to a DataFrame\n",
        "df = pd.DataFrame([input_data], columns=all_features)\n",
        "\n",
        "#loading columns\n",
        "df[all_features] = scalers.transform(df[all_features])\n",
        "\n",
        "#loading best features\n",
        "df_best_features_knr = df[best_features_knr]\n",
        "df_best_features_rfr = df[best_features_rfr]\n",
        "df_best_features_xgb = df[best_features_xgb]\n",
        "\n",
        "#predictions\n",
        "prediction1 = loaded_model_xgb.predict(df_best_features_xgb)\n",
        "prediction2 = loaded_model_rfr.predict(df_best_features_rfr)\n",
        "prediction3 = loaded_model_knr.predict(df_best_features_knr)\n",
        "\n",
        "print(prediction1)\n",
        "\n",
        "print(prediction2)\n",
        "\n",
        "print(prediction3)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ZfVWwXNKl-fI",
        "outputId": "40f2d0df-dd3b-4db7-d578-6b402579f470"
      },
      "execution_count": 126,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[137.20068]\n",
            "[137.565]\n",
            "[130.44444444]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "7kIYN6kM2gs-"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}